{"type": "root", "attrs": {}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["For-each copy tutorial"], "extent": [0, 27]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [27, 44], "body": [{"type": "para", "indent": 0, "text": ["When using ", {"scheme": null, "value": "copytopoints", "type": "link", "text": ["Copy to Points"], "fullpath": "/copy/copytopoints"}, ", you sometimes need to vary the geometry of each copy. You can do this by using point attributes on the target points to influence copy generation inside a For-Each loop. See ", {"scheme": null, "value": "copytopoints#foreach", "type": "link", "text": ["varying copies"], "fullpath": "/copy/copytopoints#foreach", "fragment": "#foreach"}, " for more information."], "extent": [44, 322]}, {"type": "fig_group", "body": [{"ext": null, "type": "fig", "indent": 0, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/goal.jpg", "type": "img", "text": ""}], "role": "item", "extent": [322, 370], "body": [{"type": "para", "indent": 8, "text": ["In this tutorial, you will create a ball of random stars. To achieve this effect, you will:"], "extent": [370, 471]}, {"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["Create target points with an attribute specifying a star shape."], "extent": [471, 545]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Copy a procedural star shape onto the points of a sphere in a For-Each loop."], "extent": [545, 632]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Use ", {"scheme": "Exp", "value": "/expressions/point", "type": "link", "text": "", "fallback_text": "point()", "fullpath": "/expressions/point"}, " to vary the shape based on the attribute on the target point."], "extent": [632, 721]}], "container": true}, {"type": "para", "indent": 4, "text": ["You can load a file with the completed project from ", {"type": "code", "text": ["$HFS/houdini/help/files/vary_per_copy.hip"]}, "."], "extent": [721, 824]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Create the source points"], "extent": [824, 855], "body": [{"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["In the shelf, click the ", {"type": "ui", "text": ["Create"]}, " tab, then ", {"keys": ["Ctrl"], "type": "keys", "text": null}, "-click the ", {"scheme": "Icon", "value": "SOP/sphere", "type": "link", "text": "", "fullpath": "/copy/SOP/sphere"}, " ", {"type": "ui", "text": ["Sphere"]}, " to add a sphere at the origin."], "extent": [855, 983], "body": [{"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/1_sphere.jpg", "type": "img", "text": ""}], "extent": [983, 1039]}, {"type": "para", "indent": 4, "text": [{"keys": ["Ctrl"], "type": "keys", "text": null}, " clicking the create tools instantly creates the object at the origin. If you click the icon without ", {"keys": ["Ctrl"], "type": "keys", "text": null}, ", Houdini waits for you to place the new object."], "extent": [1039, 1210]}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["In the operator controls toolbar (above the 3D view), set the ", {"type": "ui", "text": ["Primitive type"]}, " to ", {"type": "ui", "text": ["Polygon"]}, " and the ", {"type": "ui", "text": ["Uniform scale"]}, " to ", {"type": "code", "text": ["0.6"]}, "."], "extent": [1210, 1345], "body": [{"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/2_sphere_poly.jpg", "type": "img", "text": ""}], "extent": [1345, 1402]}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["In the network editor, click the ", {"type": "code", "text": ["sphere_object"]}, " node\u2019s name and change it to ", {"type": "code", "text": ["starball"]}, "."], "extent": [1402, 1495]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Double-click the ", {"type": "code", "text": ["starball"]}, " node to dive into the geometry network."], "extent": [1495, 1566]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Create an ", {"scheme": "Node", "value": "/nodes/sop/attribcreate", "type": "link", "text": ["Attribute Create node"], "fullpath": "/nodes/sop/attribcreate"}, " and ", {"scheme": null, "value": "/network/wire", "type": "link", "text": ["wire"], "fullpath": "/network/wire"}, " the ", {"type": "code", "text": ["sphere"]}, " node into it."], "extent": [1566, 1677], "body": [{"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/4_attribcreate.jpg", "type": "img", "text": ""}], "extent": [1677, 1735]}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["In the parameter editor for the Attribute Create node:"], "extent": [1735, 1793], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Set the ", {"type": "ui", "text": ["Name"]}, " to ", {"type": "code", "text": ["divisions"]}, "."], "extent": [1793, 1832]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Set the ", {"type": "ui", "text": ["Class"]}, " to ", {"type": "q", "text": ["Point"]}, "."], "extent": [1832, 1868]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Set the ", {"type": "ui", "text": ["Type"]}, " to ", {"type": "q", "text": ["Integer"]}, "."], "extent": [1868, 1905]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Set the first ", {"type": "ui", "text": ["Value"]}, " field to the following expression:"], "extent": [1905, 1975], "body": [{"lang": null, "type": "pre", "indent": 8, "text": ["\n        int(rand($PT) * 6) * 2 + 8\n        "], "extent": [1975, 2034]}, {"type": "para", "indent": 8, "text": ["This creates a ", {"type": "code", "text": ["divisions"]}, " attribute on the sphere\u2019s points. In the Attribute Create node, ", {"type": "code", "text": ["$PT"]}, " is the current point number. Using this as the seed for the ", {"scheme": "Exp", "value": "/expressions/rand", "type": "link", "text": "", "fallback_text": "rand()", "fullpath": "/expressions/rand"}, " function gives us a different random value on each point."], "extent": [2034, 2278]}, {"type": "para", "indent": 8, "text": ["Multiplying the result of ", {"type": "code", "text": ["rand()"]}, " (which is from 0 to 1) by 6 gives us random numbers from 0 to 5. Then we multiply by 2 to ensure we always have an even number of divisions, from 0 to 10 by 2. The minimum number of points to get a star-like shape is 8, so we add 8 to get numbers from 8 to 18."], "extent": [2278, 2583]}], "container": true}], "container": true}], "container": true}], "container": true}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [2583, 2588], "body": [{"type": "para", "indent": 4, "text": ["You can use the ", {"scheme": null, "value": "/ref/panes/geosheet", "type": "link", "text": ["Geometry spreadsheet"], "fullpath": "/ref/panes/geosheet"}, " to see the values of attributes on all points in a node. Right-click a geometry node in the network editor and choose ", {"type": "ui", "text": ["Spreadsheet"]}, "."], "extent": [2588, 2788]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Create a procedural star"], "extent": [2788, 2819], "body": [{"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Still inside the ", {"type": "code", "text": ["starball"]}, " geometry network, create a ", {"scheme": "Node", "value": "/nodes/sop/circle", "type": "link", "text": ["Circle node"], "fullpath": "/nodes/sop/circle"}, "."], "extent": [2819, 2909], "body": [{"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/5_circle.jpg", "type": "img", "text": ""}], "extent": [2909, 2961]}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["In the ", {"type": "code", "text": ["circle"]}, " node\u2019s parameter editor, set the ", {"type": "ui", "text": ["Primitive type"]}, " to ", {"type": "ui", "text": ["Polygon"]}, " and the ", {"type": "ui", "text": ["Radius"]}, " to ", {"type": "code", "text": ["0.2, 0.2"]}, "."], "extent": [2961, 3081]}], "container": true}, {"type": "para", "indent": 0, "text": ["To turn a polygonal circle into a star, we\u2019ll create a group containing every other point, and transform them."], "extent": [3081, 3193]}, {"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Add a ", {"scheme": "Node", "value": "/nodes/sop/grouprange", "type": "link", "text": ["Group by Range node"], "fullpath": "/nodes/sop/grouprange"}, " and wire the ", {"type": "code", "text": ["circle"]}, " node into it."], "extent": [3193, 3280], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Set the ", {"type": "ui", "text": ["Group"]}, " to ", {"type": "code", "text": ["even"]}, "."], "extent": [3280, 3315]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Set the ", {"type": "ui", "text": ["Group type"]}, " to ", {"type": "q", "text": ["Points"]}, "."], "extent": [3315, 3357]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Set the ", {"type": "q", "text": ["Range filter"]}, " to ", {"type": "ui", "text": ["Select"]}, " 1 ", {"type": "ui", "text": ["of"]}, " 2."], "extent": [3357, 3413]}], "container": true}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Add a ", {"scheme": "Node", "value": "/nodes/sop/xform", "type": "link", "text": ["Transform node"], "fullpath": "/nodes/sop/xform"}, " and wire the ", {"type": "code", "text": ["grouprange"]}, " into it."], "extent": [3413, 3489], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Set the ", {"type": "ui", "text": ["Group"]}, " to ", {"type": "code", "text": ["even"]}, " so we only transform every other point."], "extent": [3489, 3563]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Set the ", {"type": "ui", "text": ["Uniform scale"]}, " to ", {"type": "code", "text": ["0.5"]}, "."], "extent": [3563, 3606]}], "container": true}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Click the ", {"scheme": null, "value": "/network/flags", "type": "link", "text": ["display flag"], "fullpath": "/network/flags"}, " on the ", {"type": "code", "text": ["transform"]}, " node."], "extent": [3606, 3674], "body": [{"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/6_star.jpg", "type": "img", "text": ""}], "extent": [3674, 3724]}, {"type": "para", "indent": 4, "text": ["You can select the ", {"type": "code", "text": ["circle"]}, " node and try different values in the ", {"type": "ui", "text": ["Divisions"]}, " field to see how they affect the shape of the star. This should also address any display issues you may have with the points of the star."], "extent": [3724, 3947]}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Copy to points"], "extent": [3947, 3968], "body": [{"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Create a ", {"scheme": "Node", "value": "/nodes/sop/copytopoints", "type": "link", "text": ["Copy to Points"], "fullpath": "/nodes/sop/copytopoints"}, " node. Wire the ", {"type": "code", "text": ["transform"]}, " node (the star shape) into the first input. Wire the ", {"type": "code", "text": ["attribcreate"]}, " (the sphere points to copy onto) into the second input."], "extent": [3968, 4171], "body": [{"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/7_copytopoints.jpg", "type": "img", "text": ""}], "extent": [4171, 4229]}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Click the ", {"scheme": null, "value": "/network/flags", "type": "link", "text": ["display flag"], "fullpath": "/network/flags"}, " on the ", {"type": "code", "text": ["copytopoints"]}, " node."], "extent": [4229, 4300], "body": [{"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/8_copied_stars.jpg", "type": "img", "text": ""}], "extent": [4300, 4358]}, {"type": "para", "indent": 4, "text": ["In the viewport, you can see that the node is simply copying the current star geometry unchanged onto each point. Often this is all you need. However, for this exercise we want each star to use the ", {"type": "code", "text": ["divisions"]}, " attribute we created on the sphere to control the number of divisions in each star. For that, we\u2019ll use a For-Each loop."], "extent": [4358, 4695]}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Add a For-Each loop"], "extent": [4695, 4721], "body": [{"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Use the ", {"keys": ["Tab"], "type": "keys", "text": null}, " menu to create a ", {"scheme": null, "value": "/model/looping", "type": "link", "text": ["For-Each Points loop"], "fullpath": "/model/looping"}, "."], "extent": [4721, 4797], "body": [{"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/9_foreach.jpg", "type": "img", "text": ""}], "extent": [4797, 4850]}, {"type": "para", "indent": 4, "text": ["Houdini automatically creates a pair of ", {"type": "code", "text": ["foreach_begin"]}, " and ", {"type": "code", "text": ["foreach_end"]}, " nodes."], "extent": [4850, 4936]}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Wire the output of the ", {"type": "code", "text": ["attribcreate"]}, " (the points we want to copy to with our added attribute) into the ", {"type": "code", "text": ["foreach_begin"]}, " node."], "extent": [4936, 5065], "body": [{"type": "para", "indent": 4, "text": ["This tells Houdini that we want to loop over the points of the sphere (with our added attribute on the points)."], "extent": [5065, 5182]}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Create a new Copy to Points node (", {"type": "code", "text": ["copytopoints2"]}, ")."], "extent": [5182, 5237], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Wire the output of the ", {"type": "code", "text": ["transform"]}, " node (the star geometry) into ", {"type": "code", "text": ["copytopoints2"]}, "'s ", {"type": "em", "text": ["first input"]}, ".          "], "extent": [5237, 5352]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Wire the output of the ", {"type": "code", "text": ["foreach_begin"]}, " into ", {"type": "code", "text": ["copytopoints2"]}, "'s ", {"type": "em", "text": ["second input"]}, ". This sends each point into the Copy to Points node in a loop."], "extent": [5352, 5503]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Wire the output of ", {"type": "code", "text": ["copytopoints2"]}, " into the ", {"type": "code", "text": ["foreach_end"]}, " node."], "extent": [5503, 5578]}], "container": true}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/11_foreach_copytopoints.jpg", "type": "img", "text": ""}], "extent": [5578, 5645]}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Click the display flag on the ", {"type": "code", "text": ["foreach_end"]}, "."], "extent": [5645, 5693], "body": [{"type": "para", "indent": 4, "text": ["The star is copied onto the points again, but there\u2019s a problem: all the stars have the same orientation, instead of using the normals from the sphere!"], "extent": [5693, 5854]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/12_wrong_orientation.jpg", "type": "img", "text": ""}], "extent": [5854, 5918]}, {"type": "para", "indent": 4, "text": ["(Normals are vectors describing the 3D orientation of polygonal faces.)"], "extent": [5918, 5995]}, {"type": "para", "indent": 4, "text": ["This is because the For-Each loop extracts ", {"type": "em", "text": ["only"]}, " a point at a time from the input geometry, and the sphere didn\u2019t have point normals. So the copy node doesn\u2019t have the information needed to orient the copies properly."], "extent": [5995, 6219]}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["To fix the normals, create a ", {"scheme": "Node", "value": "/nodes/sop/normal", "type": "link", "text": ["Normal node"], "fullpath": "/nodes/sop/normal"}, " and drop it on the wire between the ", {"type": "code", "text": ["sphere"]}, " node and the ", {"type": "code", "text": ["attribcreate"]}, " node. In the Normal node\u2019s parameter editor, set ", {"type": "ui", "text": ["Add normals to"]}, " ", {"type": "q", "text": ["Points"]}, "."], "extent": [6219, 6432], "body": [{"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/8_copied_stars.jpg", "type": "img", "text": ""}], "extent": [6432, 6490]}, {"type": "para", "indent": 4, "text": ["This creates a normal attribute on the sphere\u2019s points. Now the copies are oriented using the point normals from the sphere."], "extent": [6490, 6621]}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Vary each star"], "extent": [6621, 6642], "body": [{"type": "para", "indent": 0, "text": ["At this point we've simply reproduced the output of the original Copy to Points in a more complicated way! But now that we've set up the copy in a loop, we can vary the geometry per-copy."], "extent": [6642, 6832]}, {"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Select the ", {"type": "code", "text": ["circle"]}, " node."], "extent": [6832, 6861]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["In the ", {"type": "ui", "text": ["Divisions"]}, " field, enter the following expression:"], "extent": [6861, 6924], "body": [{"lang": null, "type": "pre", "indent": 4, "text": ["\n    point(\"../foreach_begin1\", 0, \"divisions\", 0)\n    "], "extent": [6924, 6990]}, {"type": "box_group", "body": [{"ext": null, "type": "box", "indent": 0, "role": "item", "extent": [5212, 5218], "body": [{"type": "para", "indent": 4, "text": [{"type": "code", "text": ["point"]}, " takes the following arguments:"], "extent": [5243, 5287]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    point(path_to_geometry_node, point_number, attribute_name, index)\n    "], "extent": [5287, 5373]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["The ", {"type": "var", "text": ["path_to_geometry_node"]}, " is a path to the For-Each begin node, which inside the loop will contain the point we're copying onto."], "extent": [5373, 5514]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["The ", {"type": "var", "text": ["point_number"]}, " is ", {"type": "strong", "text": ["always 0"]}, ", because inside the loop we're only ever working on one point at a time."], "extent": [5514, 5629]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["The ", {"type": "var", "text": ["attribute_name"]}, " is the name of the point attribute you want to read."], "extent": [5629, 5712]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["If the attribute type is integer or float, you can leave ", {"type": "var", "text": ["index"]}, " at ", {"type": "code", "text": ["0"]}, ". If the attribute type has components (for example, R, G, B in a color, or the three axes of a vector), you need to read each component separately using individual calls to ", {"type": "code", "text": ["point"]}, " with the ", {"type": "code", "text": ["index"]}, " changed to ", {"type": "code", "text": ["0"]}, ", ", {"type": "code", "text": ["1"]}, ", ", {"type": "code", "text": ["2"]}, ", and so on."], "extent": [5712, 6028]}], "container": true}], "container": true, "attrs": {"id": "point_info"}}], "container": true, "role": "item_group"}], "container": true}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Now you're using a point attribute from the point being processed to influence how the network generates the geometry to copy onto the point. Each star shape uses the point attribute we set up on the sphere to determine how many corners each star has."], "extent": [7034, 7289], "body": [{"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/stamping_tutorial/goal.jpg", "type": "img", "text": ""}], "extent": [7289, 7341]}, {"type": "para", "indent": 4, "text": ["You're done!"], "extent": [7341, 7360]}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Finished"], "extent": [7360, 7375], "body": [{"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 0, "role": "item", "extent": [7375, 7384], "body": [], "container": true, "attrs": {"src": "/video/stamping_tutorial_final.mp4"}}], "container": true, "role": "item_group"}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [7430, 7435], "body": [{"type": "para", "indent": 4, "text": ["The For-Each loop can be slow for large numbers of copies. To speed up copying, you can try wrapping the loop in a ", {"scheme": null, "value": "/model/compile", "type": "link", "text": ["compile block"], "fullpath": "/model/compile"}, "."], "extent": [7435, 7587]}], "container": true}], "container": true, "role": "item_group"}]}], "title": ["For-each copy tutorial"], "included": ["/copy/copytopoints", "/nodes/sop/copytopoints"]}