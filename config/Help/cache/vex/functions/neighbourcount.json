{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "point, proximity", "group": "geo", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["neighbourcount"], "extent": [0, 19]}, {"type": "summary", "indent": 0, "text": ["Returns the number of points that are connected to the specified point."], "extent": [82, 161]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int neighbourcount(<geometry>, int point_num)"]}], "role": "item", "extent": [161, 218]}], "container": true, "role": "item_group"}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": [{"type": "code", "text": ["<geometry>"]}], "role": "item", "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."], "extent": [58, 235]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"type": "code", "text": [".bgeo"]}, ") to read from. When running inside Houdini, this can be an ", {"type": "code", "text": ["op:/path/to/sop"]}, " reference."], "extent": [235, 423]}], "container": true, "attrs": {"id": "geometry"}}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["point_num"]}, "role": "item", "extent": [246, 262], "body": [{"type": "para", "indent": 4, "text": ["The number of the point whose neighbours you want to count."], "extent": [262, 327]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "role": "item", "extent": [327, 337], "body": [{"type": "para", "indent": 4, "text": ["The number of points that are connected to the specified point.\n    A point is connected if it is adjacent in some polygon, is one of the\n    four surrounding points in a grid or NURBs surface, or in some other\n    manner directly shares an edge with ", {"type": "code", "text": ["point_num"]}, ". Returns 0 if there\n    is no input, or if the point number is out of range."], "extent": [337, 682]}], "container": true, "returns": true}], "container": true, "role": "item_group"}], "title": ["neighbourcount"], "summary": ["Returns the number of points that are connected to the specified point."], "included": ["/vex/functions/_common"]}