{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "ptcloud", "group": "ptcloud", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["pciterate"], "extent": [0, 14]}, {"type": "summary", "indent": 0, "text": ["This function can be used to iterate over all the points which were\nfound in the pcopen query."], "extent": [72, 174]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int pciterate(int handle)"]}], "role": "item", "extent": [174, 211]}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["This function can be used to iterate over all the points which were\nfound in a ", {"scheme": "Vex", "value": "/vex/functions/pcopen", "type": "link", "text": "", "fallback_text": "pcopen()", "fullpath": "/vex/functions/pcopen"}, " query. The first argument is the ", {"type": "var", "text": ["handle"]}, "\nreturned by ", {"type": "code", "text": ["pcopen"]}, ".\nThe function returns 1 while there are points left in the iteration loop,\nor 0 when there are no further points. This lets you use the function as\nthe condition in a ", {"scheme": null, "value": "/vex/statement", "type": "link", "text": ["while loop"], "fullpath": "/vex/statement"}, "."], "extent": [211, 565]}, {"type": "para", "indent": 0, "text": ["Warnings:"], "extent": [565, 576]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["It is not possible to nest pcunshaded or pciterate loops for the same\nhandle. That is, for a single ", {"scheme": "Vex", "value": "/vex/functions/pcopen", "type": "link", "text": ["pcopen"], "fallback_text": "pcopen()", "fullpath": "/vex/functions/pcopen"}, " call, only one\n", {"scheme": "Vex", "value": "/vex/functions/pcunshaded", "type": "link", "text": "", "fallback_text": "pcunshaded()", "fullpath": "/vex/functions/pcunshaded"}, " or ", {"type": "code", "text": ["pciterate"]}, " loop may be entered."], "extent": [576, 767]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Computations involving derivatives inside ", {"scheme": "Vex", "value": "/vex/functions/pcunshaded", "type": "link", "text": ["pcunshaded"], "fallback_text": "pcunshaded()", "fullpath": "/vex/functions/pcunshaded"}, "\nloops may have slightly different results. If derivatives are required\nfor variables which aren\u2019t set by ", {"scheme": "Vex", "value": "/vex/functions/pcimport", "type": "link", "text": ["pcimport"], "fallback_text": "pcimport()", "fullpath": "/vex/functions/pcimport"}, " it may be\nbetter to pre-compute the derivatives before the\n", {"scheme": "Vex", "value": "/vex/functions/pcunshaded", "type": "link", "text": "", "fallback_text": "pcunshaded()", "fullpath": "/vex/functions/pcunshaded"}, " loop is entered."], "extent": [767, 1062]}], "container": true}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [1062, 1071], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/pcopen", "type": "link", "text": "", "fallback_text": "pcopen()", "fullpath": "/vex/functions/pcopen"}], "extent": [1071, 1087]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/pcunshaded", "type": "link", "text": "", "fallback_text": "pcunshaded()", "fullpath": "/vex/functions/pcunshaded"}], "extent": [1087, 1106]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/pcimport", "type": "link", "text": "", "fallback_text": "pcimport()", "fullpath": "/vex/functions/pcimport"}], "extent": [1106, 1123]}], "container": true}], "text": "Related"}], "title": ["pciterate"], "summary": ["This function can be used to iterate over all the points which were\nfound in the pcopen query."]}