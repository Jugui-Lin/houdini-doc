{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "hedge", "group": "hedge", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["hedge_nextequiv"], "extent": [0, 20]}, {"type": "summary", "indent": 0, "text": ["Returns the next half-edges equivalent to a given half-edge."], "extent": [74, 142]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int hedge_nextequiv(<geometry>, int hedge)"]}], "role": "item", "extent": [142, 196]}], "container": true, "role": "item_group"}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": [{"type": "code", "text": ["<geometry>"]}], "role": "item", "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."], "extent": [58, 235]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"type": "code", "text": [".bgeo"]}, ") to read from. When running inside Houdini, this can be an ", {"type": "code", "text": ["op:/path/to/sop"]}, " reference."], "extent": [235, 423]}], "container": true, "attrs": {"id": "geometry"}}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["hedge"]}, "role": "item", "extent": [224, 236], "body": [{"type": "para", "indent": 4, "text": ["Input half-edge."], "extent": [236, 258]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "role": "item", "extent": [258, 268], "body": [{"type": "para", "indent": 4, "text": ["The next half-edge equivalent to ", {"type": "code", "text": ["hedge"]}, ", or ", {"type": "code", "text": ["hedge"]}, " if there are no other half-edges equivalent to it.\n    Successive calls to ", {"type": "code", "text": ["hedge_nextequiv()"]}, " cycle through all the equivalent half-edges.\n    Returns ", {"type": "code", "text": ["-1"]}, " if the half-edge is not valid."], "extent": [268, 515]}], "container": true, "returns": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "examples", "container": true, "type": "examples_section", "indent": 0, "role": "section", "extent": [515, 525], "body": [{"lang": "vex", "type": "pre", "indent": 0, "text": ["\n\n// Determine the number of half-edges equivalent to half-edge number 3 (including itself)\nint num_equiv = 0;\nint h = 3;\ndo\n{\nh = hedge_nextequiv(\"defgeo.bgeo\", h);\nnum_equiv++;\n} while (h != 3);\n"], "extent": [525, 736]}], "text": "Examples"}], "title": ["hedge_nextequiv"], "summary": ["Returns the next half-edges equivalent to a given half-edge."], "included": ["/vex/functions/_common"]}