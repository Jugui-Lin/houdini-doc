{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "vellumconstraints", "icon": "DOP/vellumconstraints", "tags": "vellum", "since": "17.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Vellum Constraints"], "extent": [121, 144]}, {"type": "summary", "indent": 0, "text": ["Microsolver to create Vellum constraints during a simulation."], "extent": [144, 214]}, {"type": "para", "indent": 0, "text": ["The Vellum Constraints DOP allows the creation of new Vellum constraints\ndynamically during a simulation.   It is a microsolver so should be wired to one of the solver inputs of the ", {"type": "ui", "text": ["Vellum Solver DOP"]}, ".  It can also be wired inside of a ", {"type": "ui", "text": ["Vellum Solver SOP"]}, "."], "extent": [214, 477]}, {"type": "para", "indent": 0, "text": ["To change existing constraints, the ", {"type": "ui", "text": ["Vellum Constraint Update DOP"]}, " should\nbe used."], "extent": [477, 563]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [563, 575], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Activation"], "extent": [575, 588], "body": [{"type": "para", "indent": 4, "text": ["Controls if the microsolver is solved at all.  Can be used to add\n    constraints on a specific frame, for example."], "extent": [607, 729]}], "container": true, "attrs": {"id": "activate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Constraints"], "extent": [729, 749], "body": [{"type": "para", "indent": 4, "text": ["How frequently to try and create constraints.   Some types of constraints you wish to create just once, and in this case the On Creation Frame simplifies the setup.   Dynamic constraints you may wish to create less frequently than every substep as creating and destroying constraints will slow the simulation."], "extent": [770, 1085]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["On Creation Frame"], "extent": [1085, 1108], "body": [{"type": "para", "indent": 8, "text": ["Apply the creation rules only on the specified creation frame."], "extent": [1108, 1180]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Each Frame"], "extent": [1180, 1196], "body": [{"type": "para", "indent": 8, "text": ["Apply the creation rules once every frame, but not more frequently."], "extent": [1196, 1273]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Each Substep"], "extent": [1273, 1291], "body": [{"type": "para", "indent": 8, "text": ["Apply the creation rules every substep.  This has the greatest accuracy, but creating constraints can slow the simulation."], "extent": [1291, 1424]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "createmode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Creation Frame"], "extent": [1424, 1440], "body": [{"type": "para", "indent": 4, "text": ["Which frame to create constraints on."], "extent": [1462, 1506]}], "container": true, "attrs": {"id": "createframe"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Constraints"], "extent": [1506, 1524], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Constraint Type"], "extent": [966, 984], "body": [{"type": "para", "indent": 4, "text": ["The type of constraint to generate.   This affects the visibility of\n    many of the other parameters.   Usually this is set by using the\n    appropriate tab-menu macro."], "extent": [1009, 1184]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [1184, 1194], "body": [{"type": "para", "indent": 12, "text": ["No constraints are generated."], "extent": [1194, 1237]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Distance Along Edges"], "extent": [1237, 1263], "body": [{"type": "para", "indent": 12, "text": ["Turns each edge in the display geometry into a distance constraint maintaining that edge length."], "extent": [1263, 1373]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Bend Across Triangles"], "extent": [1373, 1400], "body": [{"type": "para", "indent": 12, "text": ["Each pair of triangles (or implied triangles if input is quads or higher) creates a constraint maintaining the initial dihedral angle between the triangles."], "extent": [1400, 1570]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cloth"], "extent": [1570, 1581], "body": [{"type": "para", "indent": 8, "text": ["Creates constraints that consist of both distance on edge and bend across triangle constraints."], "extent": [1581, 1686]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hair"], "extent": [1686, 1696], "body": [{"type": "para", "indent": 8, "text": ["Creates constraints that consist of distance on edge and bend between edges.  This bend also includes the twist of the edges, allowing torsion effects."], "extent": [1696, 1857]}], "container": true}, {"type": "dt", "indent": 4, "text": ["String"], "extent": [1857, 1869], "body": [{"type": "para", "indent": 8, "text": ["Creates constraints that are a lighter weight hair constraint.  They are a distance along the edge and the angle between edges. However, they don\u2019t have any twist constraints, so the edges can spin freely."], "extent": [1869, 2084]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Pin to Target"], "extent": [2084, 2103], "body": [{"type": "para", "indent": 8, "text": ["Pins the specified points to the corresponding point in the target geometry.  The target geometry for a Vellum solver is usually the first input, so it matches the animation, but can be overridden."], "extent": [2103, 2310]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Attach to Geometry"], "extent": [2310, 2334], "body": [{"type": "para", "indent": 8, "text": ["Attaches the specified points to the geometry in the third input. They will store their closest point at the attach frame and create a distance constraint tying them to it."], "extent": [2334, 2516]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stitch Points"], "extent": [2516, 2535], "body": [{"type": "para", "indent": 8, "text": ["Stitches points within the same geometry together using distance\n        constraints. The points do not need to actually be connected by\n        geometry.  This is useful for keeping jackets closed or preventing\n        pockets from flapping."], "extent": [2535, 2787]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Pressure"], "extent": [2787, 2801], "body": [{"type": "para", "indent": 8, "text": ["Stores the original volume and builds a many-point constraint to maintain it, for each piece determined by the ", {"type": "ui", "text": ["Define Pieces"]}, " parameter. The enforcement is global, so squishing one place will expand another, like a balloon.  A ", {"type": "code", "text": ["pressurescale"]}, " point attribute can be used to scale the effect of the pressure constraint on a per-point basis.  This attribute can be used for interesting inflation effects, but should be used with care as it can also lead to unbalanced forces if the ", {"type": "code", "text": ["pressurescale"]}, " is near zero on only one side of an un-pinned balloon, for example."], "extent": [2801, 3381]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Tetrahedral Volume"], "extent": [3381, 3405], "body": [{"type": "para", "indent": 8, "text": ["Turns each tetrahedron into a constraint to maintain the volume of the tetrahedra.  "], "extent": [3405, 3511]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [3511, 3525], "body": [{"type": "para", "indent": 12, "text": ["This does not include any shear or stretch constraints. Additional distance constraints need to be added to make a proper softbody."], "extent": [3525, 3670]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Weld Points"], "extent": [3670, 3687], "body": [{"type": "para", "indent": 8, "text": ["While not a constraint per-se, this edits the ", {"type": "code", "text": ["weld"]}, " attribute to cause the points to be logically fused into a single point for the solve. However, they will remain independent points otherwise. In addition, this can build bend constraints where edges have become logically fused, ensuring the result acts like a single flat piece.  The ", {"scheme": "Node", "value": "/nodes/sop/vellumpostprocess", "type": "link", "text": ["Vellum Post Process SOP"], "fullpath": "/nodes/sop/vellumpostprocess"}, " can rewire the welded vertices after simulation so that the geometry appears connected for rendering."], "extent": [3687, 4189]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Glue"], "extent": [4189, 4199], "body": [{"type": "para", "indent": 8, "text": ["Each point will search for a nearby point that is not a member of its own piece.   It will construct a distance constraint holding it to that point.  This is useful for building systems that automatically glue together by proximity, especially when combined with breaking."], "extent": [4199, 4481]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Struts"], "extent": [4481, 4493], "body": [{"type": "para", "indent": 8, "text": ["Each point will search for a distant point that is of its own piece, but which it has a straight line-of-sight to.  It will build a distance constraint to that point.  This constructs a large number of toothpick like internal struts that give an object stiffness and volume without the expense of a fully FEM solve."], "extent": [4493, 4818]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Tetrahedral Fiber"], "extent": [4818, 4841], "body": [{"type": "para", "indent": 8, "text": ["Turns each tetrahedron into a constraint that attempts to flatten along the direction specified by the ", {"type": "code", "text": ["materialW"]}, " attribute on its points, or ", {"type": "code", "text": ["{0, 0, 1}"]}, " if that attribute doesn\u2019t exist.  These constraints can be created with low stiffness that is animated up during the simulation with ", {"scheme": "Node", "value": "/nodes/dop/vellumconstraintproperty", "type": "link", "text": ["Vellum Constraint Property"], "fullpath": "/nodes/dop/vellumconstraintproperty"}, " to simulate volumetric contraction effects."], "extent": [4841, 5245]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Triangle Stretch"], "extent": [5245, 5267], "body": [{"type": "para", "indent": 8, "text": ["Turns each triangle into a constraint that keeps the triangle As-Rigid-As-Possible (ARAP) by removing any stretching or skewing, according to the specified stiffness."], "extent": [5267, 5443]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Tetrahedral Stretch"], "extent": [5443, 5468], "body": [{"type": "para", "indent": 8, "text": ["Turns each tetrahedron into a constraint that keeps the tetrahedron As-Rigid-As-Possible (ARAP) by removing any stretching or skewing, according to the specified stiffness.  If ", {"type": "ui", "text": ["Preserve Volume"]}, " is enabled, the constraint additionally attempts to preserve volume with a very high internal stiffness but the specified ", {"type": "ui", "text": ["Damping Ratio"]}, ", similar to the way the ", {"type": "ui", "text": ["Tetrahedral Volume"]}, " constraint functions."], "extent": [5468, 5883]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Shape Match"], "extent": [5883, 5900], "body": [{"type": "para", "indent": 8, "text": ["Creates a constraint that pulls its points back to the original (rest) shape, for each piece determined by the ", {"type": "ui", "text": ["Define Pieces"]}, " parameter. This constraint can be used to add rigidity either on top of existing constraints such as cloth, or by itself to create mostly rigid objects that can interact with other Vellum geometry."], "extent": [5900, 6240]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 8, "role": "item", "extent": [6240, 6253], "body": [{"type": "para", "indent": 12, "text": ["Shape Match constraints generally work best with ", {"type": "ui", "text": ["Mass"]}, " set to\n            ", {"type": "ui", "text": ["Calculate Uniform"]}, ", and with consistently sized geometry. To generate this type of geometry, you can use a ", {"scheme": "Node", "value": "/nodes/sop/remesh", "type": "link", "text": ["Remesh SOP"], "fullpath": "/nodes/sop/remesh"}, ".  "], "extent": [6253, 6493]}], "container": true}, {"type": "tip", "indent": 8, "role": "item", "extent": [6493, 6506], "body": [{"type": "para", "indent": 12, "text": ["An effective workflow with this constraint type is to use the ", {"scheme": "Node", "value": "/nodes/sop/extracttransform", "type": "link", "text": ["Extract Transform SOP"], "fullpath": "/nodes/sop/extracttransform"}, " on the simulation output to generate an oriented point per piece, then the ", {"scheme": "Node", "value": "/nodes/sop/xformpieces", "type": "link", "text": ["Transform Pieces SOP"], "fullpath": "/nodes/sop/xformpieces"}, " to transform the original render geometry onto these points.  This workflow can also avoid any small deformations if the constraint fails to remain rigid at collision points or pins."], "extent": [6506, 6933]}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "container": true, "attrs": {"id": "constrainttype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stretch Type"], "extent": [6933, 6947], "body": [{"type": "para", "indent": 3, "text": ["Selects which type of Stretch constraints are used when the ", {"type": "ui", "text": ["Constraint Type"]}, "\n   is set to ", {"type": "ui", "text": ["Cloth"]}, ". The linear ", {"type": "ui", "text": ["Triangle Stretch"]}, " constraints converge to\n   their proper stiffness faster than ", {"type": "ui", "text": ["Distance Along Edges"]}, " at higher cloth resolutions,\n   but do not support anisotropy via the ", {"type": "ui", "text": ["Enable Warp/Weft"]}, " parameter."], "extent": [6968, 7297]}], "container": true, "attrs": {"id": "stretchtype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Preserve Volume"], "extent": [7297, 7314], "body": [{"type": "para", "indent": 3, "text": ["When the ", {"type": "ui", "text": ["Constraint Type"]}, " is set to ", {"type": "ui", "text": ["Tetrahedral Stretch"]}, ", also apply\n   a constraint that preserves volume with a very high internal stiffness and\n   the specified ", {"type": "ui", "text": ["Damping Ratio"]}, ", similar to the way the ", {"type": "ui", "text": ["Tetrahedral\n   Volume"]}, " constraint functions.  Note that for more control, or if\n   experiencing instabilities due to the very high stiffness, you can turn\n   this option off and add a subsequent ", {"type": "ui", "text": ["Vellum Constraint"]}, " SOP set to\n   ", {"type": "ui", "text": ["Tetrahedral Volume"]}, " for a similar, but more controllable, volume-\n   preserving effect, at a slight loss of solve performance."], "extent": [7335, 7915]}], "container": true, "attrs": {"id": "preservevol"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Linear Model"], "extent": [7915, 7933], "body": [{"type": "para", "indent": 3, "text": ["The ", {"type": "ui", "text": ["Triangle Stretch"]}, " and ", {"type": "ui", "text": ["Tetrahedral Stretch"]}, " constraints use a non-linear\n   model of stretching that gives good behavior for low stiffness, high\n   stretching configurations useful for organic materials like muscle and\n   skin.  Enabling this option switches to a linear model that generally\n   performs better for high stiffness, low stretching configurations like hard\n   solids or cloth. It also provides more predictable stress values for\n   fracturing effects using breaking welds due to ", {"type": "ui", "text": ["Stretch Stress"]}, "."], "extent": [7949, 8475]}], "container": true, "attrs": {"id": "linear"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Geometry"], "extent": [1731, 1748], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group Type"], "extent": [8490, 8503], "body": [{"type": "para", "indent": 4, "text": ["Controls the type used for the source points for the constraint."], "extent": [8523, 8593]}], "container": true, "attrs": {"id": "grouptype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [8593, 8600], "body": [{"type": "para", "indent": 4, "text": ["The group for the source points of the constraint.  These are\n    the points or primitives that are turned into the constraint or\n    are used as the starting half of the constraint."], "extent": [8616, 8805]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Triangulation"], "extent": [8805, 8820], "body": [{"type": "para", "indent": 4, "text": ["Distance and bend constraints are usually built on a triangle mesh.\n    Rather than forcing the input to be triangulated, it can be implicitly\n    triangulated."], "extent": [8844, 9010]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [9010, 9020], "body": [{"type": "para", "indent": 8, "text": ["Do not triangulate the input implicitly."], "extent": [9020, 9070]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Regular"], "extent": [9070, 9083], "body": [{"type": "para", "indent": 8, "text": ["Consistently split into triangles."], "extent": [9083, 9127]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Alternating"], "extent": [9127, 9144], "body": [{"type": "para", "indent": 8, "text": ["Attempt to reverse the triangle splitting so a series of quads\n        have a less regular structure."], "extent": [9144, 9255]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "triangulation"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mass"], "extent": [9255, 9261], "body": [{"type": "para", "indent": 4, "text": [{"type": "code", "text": ["mass"]}, " value for the points.  The mass affects how they interact with\n    POP forces and other pieces of Vellum geometry, and how strong the constraints are."], "extent": [9276, 9439]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Unchanged"], "extent": [9439, 9454], "body": [{"type": "para", "indent": 8, "text": ["Do not set the ", {"type": "code", "text": ["mass"]}, " attribute."], "extent": [9454, 9496]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Uniform"], "extent": [9496, 9513], "body": [{"type": "para", "indent": 8, "text": ["Set the ", {"type": "code", "text": ["mass"]}, " attribute to the specified value."], "extent": [9513, 9571]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Calculate Uniform"], "extent": [9571, 9594], "body": [{"type": "para", "indent": 8, "text": ["Calculate a uniform value for the ", {"type": "code", "text": ["mass"]}, " attribute for the points on a per-piece basis,\n        as determined by the ", {"type": "ui", "text": ["Define Pieces"]}, " setting.  For tetrahedral geometry, the overall volume\n        for each piece is calculated then multiplied by the ", {"type": "ui", "text": ["Density"]}, " parameter to find the mass of each piece.\n        This mass is then distributed equally across each point in that piece.  For polygonal geometry, the overall\n        area of each piece is used, and for polylines the line length is used."], "extent": [9594, 10102]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Calculate Varying"], "extent": [10102, 10125], "body": [{"type": "para", "indent": 8, "text": ["Calculate a varying value for the ", {"type": "code", "text": ["mass"]}, " attribute for the points.  For tetrahedral geometry, each point\n        accumulates 1/4 of the volume of each incident tetrahedron to find its overall volume, which is then\n        multiplied by the ", {"type": "ui", "text": ["Density"]}, " parameter to find the mass for each point.  For polygonal geometry, each point\n        accumulates its share of the area of each incident polygon, and for polylines its share of each incident edge\n        length.  This approach generally gives the most physically accurate results, especially as the resolution of\n        the geometry changes."], "extent": [10125, 10730]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "mass"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Density"], "extent": [10730, 10739], "body": [{"type": "para", "indent": 4, "text": ["The volume used in calculating mass is scaled by this value when ", {"type": "ui", "text": ["Mass"]}, " is set to ", {"type": "ui", "text": ["Calculate Uniform"]}, "\n    or ", {"type": "ui", "text": ["Calculate Varying"]}, ".  This value can be further set to ", {"type": "ui", "text": ["Scale By Attribute"]}, " to scale by the specified\n    point attribute in the varying case."], "extent": [10757, 11022]}], "container": true, "attrs": {"id": "density"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Density Attribute"], "extent": [11022, 11041], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "ui", "text": ["Density"]}, " parameter will be scaled by this point attribute."], "extent": [11068, 11139]}], "container": true, "attrs": {"id": "densityattribute"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Thickness"], "extent": [11139, 11150], "body": [{"type": "para", "indent": 4, "text": ["Thickness of the points, stored in ", {"type": "code", "text": ["pscale"]}, ".  Used also for the\n    triangle thickness and curve thickness."], "extent": [11170, 11283]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Unchanged"], "extent": [11283, 11298], "body": [{"type": "para", "indent": 8, "text": ["Do not set the ", {"type": "code", "text": ["pscale"]}, " attribute."], "extent": [11298, 11342]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Uniform"], "extent": [11342, 11359], "body": [{"type": "para", "indent": 8, "text": ["Set the ", {"type": "code", "text": ["pscale"]}, " attribute to the specified value."], "extent": [11359, 11419]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Calculate Uniform"], "extent": [11419, 11442], "body": [{"type": "para", "indent": 8, "text": ["Calculate a uniform value for the ", {"type": "code", "text": ["pscale"]}, " attribute for the points on a per-piece basis,\n        as determined by the ", {"type": "ui", "text": ["Define Pieces"]}, " setting.  The thickness value is based on the average\n        length of the edges in each piece, scaled by the ", {"type": "ui", "text": ["Edge Length Scale"]}, " parameter.  This setting\n        generally avoids excess self-collisions while maintaining uniform thickness."], "extent": [11442, 11831]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Calculate Varying"], "extent": [11831, 11854], "body": [{"type": "para", "indent": 8, "text": ["Calculate a varying value for the ", {"type": "code", "text": ["pscale"]}, " attribute for the points.  The thickness value is based on the average\n        length of the edges connected to each point, scaled by the ", {"type": "ui", "text": ["Edge Length Scale"]}, " parameter.  This setting\n        is better for geometry of varying resolution, but generally gives non-uniform thickness values."], "extent": [11854, 12195]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "thickness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Edge Length Scale"], "extent": [12195, 12214], "body": [{"type": "para", "indent": 4, "text": ["Each edge length will be scaled by this value before being used in the ", {"type": "ui", "text": ["Thickness"]}, " calculation."], "extent": [12239, 12342]}], "container": true, "attrs": {"id": "thicknessscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Define Pieces"], "extent": [12444, 12459], "body": [{"type": "para", "indent": 4, "text": ["Pressure constraints split the object into disjoint pieces to compute and\n    enforce the volume. Mass and Thickness calculations, and Glue and Strut constraints\n    also need a way to define separate pieces."], "extent": [12479, 12693]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["From Attribute"], "extent": [12693, 12713], "body": [{"type": "para", "indent": 8, "text": ["This integer attribute\u2019s unique values are used to define each piece."], "extent": [12713, 12792]}], "container": true}, {"type": "dt", "indent": 4, "text": ["From Connectivity"], "extent": [12792, 12815], "body": [{"type": "para", "indent": 8, "text": ["Connectivity of the input geometry is used to define the pieces."], "extent": [12815, 12890]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "piecemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Piece Attrib"], "extent": [12890, 12904], "body": [{"type": "para", "indent": 4, "text": ["Distinct values of this integer attribute will be used to define\n    different pieces.  This can either be a point or a primitive attribute."], "extent": [12926, 13072]}], "container": true, "attrs": {"id": "pieceattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Layer"], "extent": [13072, 13079], "body": [{"type": "para", "indent": 4, "text": ["The points will be given this as their ", {"type": "code", "text": ["layer"]}, " attribute, useful\n    in cloth simulations to define a stacking order for Layer Shock."], "extent": [13095, 13234]}], "container": true, "attrs": {"id": "layer"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Target Geometry"], "extent": [2302, 2326], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Target Group Type"], "extent": [14430, 14450], "body": [{"type": "para", "indent": 4, "text": ["The type of group for the constraint targets."], "extent": [14476, 14527]}], "container": true, "attrs": {"id": "targetgrouptype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Target Group"], "extent": [14527, 14541], "body": [{"type": "para", "indent": 4, "text": ["The target group.  This group specifies the second half of\n    ", {"type": "ui", "text": ["Attach to Geometry"]}, " and ", {"type": "ui", "text": ["Stitch"]}, " constraints."], "extent": [14563, 14682]}], "container": true, "attrs": {"id": "targetgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Target Path"], "extent": [14682, 14695], "body": [{"type": "para", "indent": 4, "text": ["For Attach to Geometry constraints, the SOP attached to the third\n    input will be read at solve time to get the current animation data.\n    Specifying a path here will override that. This is useful if a different\n    animation is desired at solve time than capture time."], "extent": [14716, 14994]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [14994, 15004], "body": [{"type": "para", "indent": 8, "text": ["This is the path to override the animation with, and does not affect the actual capturing. Capturing is always done with the third input."], "extent": [15004, 15151]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "targetpath"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Drag"], "extent": [2486, 2499], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Normal Drag"], "extent": [15283, 15297], "body": [{"type": "para", "indent": 4, "text": ["Creates the ", {"type": "code", "text": ["dragnormal"]}, " attribute and sets it to this value.  This\n    scales the drag of the point when wind forces are applied to it\n    in the normal direction of its surface, or perpendicular to the\n    curve."], "extent": [15318, 15538]}, {"type": "para", "indent": 4, "text": ["Differing normal and tangent drag is essential for flapping flags."], "extent": [15538, 15610]}], "container": true, "attrs": {"id": "dragnormal"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tangent Drag"], "extent": [15610, 15624], "body": [{"type": "para", "indent": 4, "text": ["Creates the ", {"type": "code", "text": ["dragtangent"]}, " attribute and sets it to this value.\n    This scales the drag of the point when wind forces are applied to it\n    in the tangent direction of its surface, or tangent to the curve."], "extent": [15646, 15857]}], "container": true, "attrs": {"id": "dragtangent"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Pin to Animation"], "extent": [2603, 2628], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Pin Points"], "extent": [15880, 15893], "body": [{"type": "para", "indent": 4, "text": ["Points to pin to the target animation.  Usually the target animation is\n    the first input of the Vellum solver, but it can be overridden on\n    the ", {"scheme": "Node", "value": "/nodes/sop/vellumsolver", "type": "link", "text": ["Vellum Solver"], "fullpath": "/nodes/sop/vellumsolver"}, " SOP or with the ", {"scheme": "Node", "value": "/nodes/dop/vellumsource", "type": "link", "text": ["Vellum Source"], "fullpath": "/nodes/dop/vellumsource"}, "\n    DOP."], "extent": [15912, 16168]}], "container": true, "attrs": {"id": "pingroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pin Type"], "extent": [16168, 16178], "body": [{"type": "para", "indent": 4, "text": ["How to pin the point position to the target animation."], "extent": [16196, 16256]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Permanent"], "extent": [16256, 16271], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "code", "text": ["mass"]}, " attribute is set to zero, making the point a hard constraint.  However, as no original value of ", {"type": "code", "text": ["mass"]}, " is stored, it isn\u2019t possible to release this constraint later."], "extent": [16271, 16457]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stopped"], "extent": [16457, 16470], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "code", "text": ["stopped"]}, " attribute is set to ", {"type": "code", "text": ["1"]}, " to make the point a hard constraint.  ", {"type": "code", "text": ["mass"]}, " is unaffected so a POP operation can restore the dynamics of the point later by resetting ", {"type": "code", "text": ["stopped"]}, " to ", {"type": "code", "text": ["0"]}, "."], "extent": [16470, 16670]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Soft"], "extent": [16670, 16680], "body": [{"type": "para", "indent": 8, "text": ["A zero length distance constraint is made between the point and its target location.  The Stretch ", {"type": "ui", "text": ["Stiffness"]}, " and ", {"type": "ui", "text": ["Damping Ratio"]}, " values are used for this constraint."], "extent": [16680, 16861]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pintype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Orientation Pin Type"], "extent": [16861, 16883], "body": [{"type": "para", "indent": 4, "text": ["In addition to holding the location of a point, for hair the orientation\n    often may also be constrained."], "extent": [16905, 17018]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [17018, 17028], "body": [{"type": "para", "indent": 12, "text": ["This constrains the orientation of the out-going line segments of the hair.  So orientation-pinning the tip of a hair will not affect the angle of the incoming hair."], "extent": [17028, 17207]}], "container": true}], "container": true, "role": "item_group"}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [17207, 17217], "body": [{"type": "para", "indent": 8, "text": ["Do not constrain the orientation to the target animation."], "extent": [17217, 17284]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Same as Position"], "extent": [17284, 17306], "body": [{"type": "para", "indent": 8, "text": ["Use the position constraint rules.  In case of Stopped, the ", {"type": "code", "text": ["stopped"]}, "\n        attribute is set to 3 to reflect both types of update are suppressed."], "extent": [17306, 17463]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Soft"], "extent": [17463, 17473], "body": [{"type": "para", "indent": 8, "text": ["Add a bend/twist constraint to maintain the orientation of the pinned point to that of the target animation.  The Bend ", {"type": "ui", "text": ["Stiffness"]}, " and ", {"type": "ui", "text": ["Damping Ratio"]}, " values are used for this constraint."], "extent": [17473, 17675]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pinrotation"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Match Animation"], "extent": [17675, 17692], "body": [{"type": "para", "indent": 4, "text": ["Controls if the target is updated from the animation during the solver or if only the initial\n    value is used."], "extent": [17717, 17836]}], "container": true, "attrs": {"id": "matchanimation"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Closest Point"], "extent": [2833, 2855], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Constrain to Closest Point"], "extent": [17856, 17885], "body": [{"type": "para", "indent": 4, "text": ["When finding a matching point to a source point, do not go through\n    the target points in order, but pick the point that is closest first."], "extent": [17908, 18055]}], "container": true, "attrs": {"id": "useclosestpt"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Closest Location on Primitive"], "extent": [18055, 18090], "body": [{"type": "para", "indent": 4, "text": ["For ", {"type": "ui", "text": ["Attach to Geometry"]}, " and ", {"type": "ui", "text": ["Stitch Points"]}, " constraints, do not just choose the closest point,\n    but the closest position on a primitive.  The primitive number and\n    barycentric coordinates are then stored.  For ", {"type": "ui", "text": ["Stitch Points"]}, " constraints, only polylines, triangles, and\n    quads are supported as the ", {"type": "ui", "text": ["Target Geometry"]}, " for constraint generation when this option is enabled."], "extent": [18115, 18510]}], "container": true, "attrs": {"id": "useclosestprim"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Distance"], "extent": [18510, 18524], "body": [{"type": "para", "indent": 4, "text": ["Maximum distance to consider eligible for stitching points."], "extent": [18542, 18608]}], "container": true, "attrs": {"id": "maxdist"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sliding Rate"], "extent": [18608, 18622], "body": [{"type": "para", "indent": 4, "text": ["For ", {"type": "ui", "text": ["Attach to Geometry"]}, " and ", {"type": "ui", "text": ["Stitch Points"]}, " constraints, the attachment point of the constraint\n    will slide across the target surface at this rate, where 1 matches the constrained point\u2019s velocity.\n    This option only works to slide across primitives, so ", {"type": "ui", "text": ["Use Closest Location on Primitive"]}, " must\n    be enabled and the ", {"type": "ui", "text": ["Target Group Type"]}, " must be set to ", {"type": "ui", "text": ["Primitives"]}, ".  The method used for finding\n    the next closest sliding target can be set with the ", {"scheme": "Node", "value": "/nodes/dop/vellumsolver", "type": "link", "text": ["Vellum Solver\u2019s"], "fullpath": "/nodes/dop/vellumsolver"}, "\n    ", {"type": "ui", "text": ["Sliding Method"]}, " parameter."], "extent": [18644, 19192]}], "container": true, "attrs": {"id": "slidingrate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sliding Attribute"], "extent": [19192, 19211], "body": [{"type": "para", "indent": 4, "text": ["A point attribute that scales the ", {"type": "ui", "text": ["Sliding Rate"]}, " when set to ", {"type": "ui", "text": ["Scale by Attribute"]}, ".  This attribute will\n    be applied according to the attribute ", {"type": "ui", "text": ["Promotion Method"]}, ", and will be stored on the constraint to be\n    applied during the simulation.  In this way the attachment point can slide across a painted surface, where the\n    painted attribute value controls the ", {"type": "ui", "text": ["Sliding Rate"]}, "."], "extent": [19235, 19630]}], "container": true, "attrs": {"id": "slidingattrib"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Glue Search"], "extent": [3118, 3138], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Cluster Attrib"], "extent": [19648, 19665], "body": [{"type": "para", "indent": 4, "text": ["While glue constraints are made between points of different pieces,\n    they will only be made between points of the same cluster.   If\n    the cluster value is -1, no gluing will be done."], "extent": [19694, 19888]}], "container": true, "attrs": {"id": "glue_clusterattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Search Dist"], "extent": [19888, 19905], "body": [{"type": "para", "indent": 4, "text": ["Minimum distance to look for eligible glue points."], "extent": [19930, 19987]}], "container": true, "attrs": {"id": "glue_minradius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Search Dist"], "extent": [19987, 20004], "body": [{"type": "para", "indent": 4, "text": ["Maximum distance to look for eligible glue points."], "extent": [20026, 20083]}], "container": true, "attrs": {"id": "glue_radius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Search Points"], "extent": [20083, 20102], "body": [{"type": "para", "indent": 4, "text": ["Maximum number of points to consider for eligible glue points."], "extent": [20123, 20191]}], "container": true, "attrs": {"id": "glue_numpt"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Search Preference"], "extent": [20191, 20210], "body": [{"type": "para", "indent": 4, "text": ["The order in which points should be considered for eligible glue points."], "extent": [20236, 20314]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [20314, 20324], "body": [{"type": "para", "indent": 12, "text": ["You will likely need to increase the ", {"type": "ui", "text": ["Max Search Points"]}, " parameter\n            when setting this parameter to ", {"type": "ui", "text": ["Farthest"]}, ", as the internal search function\n            always returns nearest points first.  There must be sufficient points in the\n            search query to reach the farthest points as specified by the ", {"type": "ui", "text": ["Max Search Dist"]}, "\n            parameter."], "extent": [20324, 20701]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "glue_searchpref"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constraints Per Point"], "extent": [20701, 20724], "body": [{"type": "para", "indent": 4, "text": ["Number of glue constraints to create for each point."], "extent": [20756, 20815]}], "container": true, "attrs": {"id": "glue_constraintsperpt"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detach Object Chance"], "extent": [20815, 20837], "body": [{"type": "para", "indent": 4, "text": ["Each piece has this chance to be marked ineligible for gluing\n    and receive and generate no glue constraints.  This allows\n    for stray hairs."], "extent": [20866, 21018]}], "container": true, "attrs": {"id": "glue_detach_chance"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detach Point Chance"], "extent": [21018, 21039], "body": [{"type": "para", "indent": 4, "text": ["Each pair of points has this chance to be being marked ineligible for gluing."], "extent": [21067, 21150]}], "container": true, "attrs": {"id": "glue_point_chance"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Seed"], "extent": [21150, 21156], "body": [{"type": "para", "indent": 4, "text": ["Random seed used to generate the detach chances."], "extent": [21176, 21231]}], "container": true, "attrs": {"id": "glue_seed"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Strut Search"], "extent": [3641, 3662], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Max Strut Length"], "extent": [21250, 21269], "body": [{"type": "para", "indent": 4, "text": ["Maximum distance to create struts.   Must be large enough to cover the\n    diameter of the object, but avoiding extremely long struts can help\n    avoid artifacts."], "extent": [21292, 21462]}], "container": true, "attrs": {"id": "strut_maxlen"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direction Attribute"], "extent": [21462, 21483], "body": [{"type": "para", "indent": 4, "text": ["Struts are created by sending a ray along the direction attribute in\n    search of the piece.  The default direction is to use the normal\n    of the surface."], "extent": [21509, 21672]}], "container": true, "attrs": {"id": "strut_dirattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Invert Normals"], "extent": [21672, 21688], "body": [{"type": "para", "indent": 4, "text": ["Invert the sense of the objects normals for sending rays, useful\n    if the incoming geometry has reversed normals."], "extent": [21717, 21838]}], "container": true, "attrs": {"id": "strut_invertnormal"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Test Normals"], "extent": [21838, 21852], "body": [{"type": "para", "indent": 4, "text": ["Verify the goal of the strut has a normal suggesting it was properly\n    hit from the inside."], "extent": [21880, 21980]}], "container": true, "attrs": {"id": "strut_testnormals"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direction Jitter"], "extent": [21980, 21998], "body": [{"type": "para", "indent": 4, "text": ["Jitter the direction the strut is sent in to break symmetry in\n    the struts."], "extent": [22021, 22105]}], "container": true, "attrs": {"id": "strut_jitter"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constraints Per Point"], "extent": [22105, 22128], "body": [{"type": "para", "indent": 4, "text": ["Maximum number of struts to add for each point."], "extent": [22161, 22215]}], "container": true, "attrs": {"id": "strut_constraintsperpt"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detach Point Chance"], "extent": [22215, 22236], "body": [{"type": "para", "indent": 4, "text": ["Chance of a point being marked ineligible for struts."], "extent": [22265, 22325]}], "container": true, "attrs": {"id": "strut_point_chance"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Seed"], "extent": [22325, 22331], "body": [{"type": "para", "indent": 4, "text": ["Random seed to control the jitter and detach chances."], "extent": [22352, 22412]}], "container": true, "attrs": {"id": "strut_seed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ray Offset"], "extent": [22412, 22424], "body": [{"type": "para", "indent": 4, "text": ["The initial ray for the strut needs an offset to avoid hitting\n    the surface it was sent from."], "extent": [22447, 22550]}], "container": true, "attrs": {"id": "strut_rayoff"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Stretch"], "extent": [4168, 4184], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Stiffness"], "extent": [22564, 22576], "body": [{"type": "para", "indent": 4, "text": ["The stiffness of the constraint, which controls how strongly the constraint\n    pulls particles back towards its initial rest state.  To dial in initial values,\n    change by factors of 10."], "extent": [22603, 22799]}], "container": true, "attrs": {"id": "stretchstiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness Attribute"], "extent": [22799, 22820], "body": [{"type": "para", "indent": 4, "text": ["Point attribute to scale the stiffness by."], "extent": [22853, 22901]}, {"type": "para", "indent": 4, "text": ["As effective changes in stiffness requires painting over orders of magnitude, this has\n    a logarithmic effect."], "extent": [22901, 23020]}], "container": true, "attrs": {"id": "stretchstiffnessattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale"], "extent": [23020, 23027], "body": [{"type": "para", "indent": 4, "text": ["Single slider control over the stiffness."], "extent": [23059, 23106]}, {"type": "para", "indent": 4, "text": ["As effective changes in stiffness requires painting over orders of magnitude, this has\n    a logarithmic effect."], "extent": [23106, 23224]}], "container": true, "attrs": {"id": "stretchstiffnessscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Damping Ratio"], "extent": [23224, 23239], "body": [{"type": "para", "indent": 4, "text": ["Stiff constraints tend to vibrate or jitter unacceptably.   Damping reduces this by bleeding energy when evaluating the constraint.  Too much damping can prevent the constraint from being satisfied, however.   Values less than 1 must be used."], "extent": [23269, 23518]}], "container": true, "attrs": {"id": "stretchdampingratio"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Damping Attribute"], "extent": [23518, 23537], "body": [{"type": "para", "indent": 4, "text": ["Attribute to adjust damping, multiplied into the damping ratio."], "extent": [23568, 23638]}], "container": true, "attrs": {"id": "stretchdampingattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale"], "extent": [23638, 23645], "body": [{"type": "para", "indent": 4, "text": ["Single slider to control damping, multiplied into the damping ratio."], "extent": [23675, 23750]}], "container": true, "attrs": {"id": "stretchdampingscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Length Scale"], "extent": [23750, 23769], "body": [{"type": "para", "indent": 4, "text": ["The rest length of the distance constraints will be the original distance\n    between the points.   This scale can be used to increase or decrease\n    this.   Setting to ", {"type": "code", "text": ["0"]}, " will try to collapse the points together."], "extent": [23796, 24018]}], "container": true, "attrs": {"id": "stretchrestscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Compression Stiffness"], "extent": [24018, 24041], "body": [{"type": "para", "indent": 4, "text": ["The stiffness of the constraint when being compressed below its initial rest\n    distance.  A very stiff low resolution cloth can become unbendable due to its\n    topology, rather than due to the bend constraints.  A network of triangles\n    has very few ways that it can bend if it is fully stiff.  By setting a\n    lower compression stiffness, the cloth is allowed to collapse and regain\n    its fluidity.  Usually this has to be raised with higher resolution cloth."], "extent": [24069, 24543]}], "container": true, "attrs": {"id": "compressstiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness Dropoff"], "extent": [25184, 25203], "body": [{"type": "para", "indent": 4, "text": ["The distance from the rest length at which the stiffness of the constraint\n    decreases to zero, or increases from zero to full stiffness, depending on\n    the direction of the dropoff.  A ", {"type": "ui", "text": ["Decreasing"]}, " dropoff means that the\n    stiffness starts at full strength and decreases to zero at the Dropoff\n    distance from the rest length.  An ", {"type": "ui", "text": ["Increasing"]}, " dropoff means\n    the stiffness starts at zero and increases to full stiffness at the\n    specified distance from rest length. If ", {"type": "ui", "text": ["Min Stiffness"]}, " is enabled, its\n    value is used as the minimum stiffness in these calculations, rather than zero."], "extent": [25237, 25847]}, {"type": "para", "indent": 4, "text": ["Decreasing dropoff can be useful for creating glue constraints that lose\n    stiffness as they are stretched, decreasing to zero at the specified\n    distance.  Using the same distance in the breaking ", {"type": "ui", "text": ["Threshold"]}, " with a\n    ", {"type": "ui", "text": ["Break Type"]}, " of ", {"type": "ui", "text": ["Stretch Distance"]}, " will cause the constraints to be\n    removed at the same time they reduce to zero stiffness."], "extent": [25847, 26210]}], "container": true, "attrs": {"id": "stretchstiffnessdropoff"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Stiffness"], "extent": [26210, 26225], "body": [{"type": "para", "indent": 4, "text": ["If this checkbox is turned on, this value will be the minimum stiffness used when calculating the ", {"type": "ui", "text": ["Stiffness Dropoff"]}, "."], "extent": [26262, 26388]}], "container": true, "attrs": {"id": "stretchstiffnessdropoffmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Warp/Weft"], "extent": [26388, 26406], "body": [{"type": "para", "indent": 4, "text": ["Enables an adjustment to the stiffness based on orientation, allowing\n    a cloth network to stretch more on one axis than another."], "extent": [26434, 26572]}], "container": true, "attrs": {"id": "stretchanisotropy"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Anisotropy"], "extent": [4852, 4871], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Warp Scale"], "extent": [26591, 26604], "body": [{"type": "para", "indent": 4, "text": ["Scale factor for cloth lined up with the material u axis.   This is a logarithmic multiplier."], "extent": [26631, 26731]}], "container": true, "attrs": {"id": "stretchwarpscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Weft Scale"], "extent": [26731, 26743], "body": [{"type": "para", "indent": 4, "text": ["Scale factor for cloth lined up with the material v axis.   This is a logarithmic multiplier."], "extent": [26770, 26869]}], "container": true, "attrs": {"id": "stretchweftscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shear Scale"], "extent": [26869, 26882], "body": [{"type": "para", "indent": 4, "text": ["Scale factor for cloth lined up with the diagonal material uv axis.   This is a logarithmic multiplier."], "extent": [26910, 27019]}], "container": true, "attrs": {"id": "stretchshearscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Material UV"], "extent": [27019, 27032], "body": [{"type": "para", "indent": 4, "text": ["Point attribute to use to specify the coordinate frame for warp and weft computations."], "extent": [27053, 27145]}], "container": true, "attrs": {"id": "materialuv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Plasticity"], "extent": [27817, 27836], "body": [{"type": "para", "indent": 4, "text": ["Plasticity allows an object to flow to a new rest position.  Under\n    sufficient stress, the rest coordinates are blended to the current dynamic\n    coordinates, so the object will retain its new shape."], "extent": [27864, 28074]}], "container": true, "attrs": {"id": "stretchplasticity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity Blend"], "extent": [27145, 27161], "body": [{"type": "para", "indent": 4, "text": ["Constraints that attach to geometry or pin to the target can optionally\n    blend in the target\u2019s velocity.  This requires the target to have\n    a ", {"type": "code", "text": ["v"]}, " point attribute to provide the local velocity.  The blending\n    is done per 24th of a second, so a blend factor of 0.5 will mix in\n    50% of the target velocity in a standard frame."], "extent": [27187, 27528]}, {"type": "para", "indent": 4, "text": ["Blending in velocity will highly damp the simulation, but can be useful\n    to allow the cloth to anticipate motion, avoiding whiplashing from\n    sudden movements.   Zero stiffness attachment constraints can be used\n    to apply only velocity blending without any additional forces."], "extent": [27528, 27817]}], "container": true, "attrs": {"id": "stretchvelblend"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Plasticity"], "extent": [5209, 5228], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Threshold"], "extent": [28093, 28105], "body": [{"type": "para", "indent": 4, "text": ["Below this threshold the material will return to its original shape.\n    When deformed past the threshold, it will begin to creep into\n    its new configuration."], "extent": [28139, 28307]}], "container": true, "attrs": {"id": "stretchplasticthreshold"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Threshold Attribute"], "extent": [28307, 28328], "body": [{"type": "para", "indent": 4, "text": ["Attribute to scale the stretch threshold by."], "extent": [28368, 28418]}], "container": true, "attrs": {"id": "stretchplasticthresholdattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale"], "extent": [28418, 28425], "body": [{"type": "para", "indent": 4, "text": ["Single scale slider for the threshold."], "extent": [28464, 28509]}], "container": true, "attrs": {"id": "stretchplasticthresholdscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ratio of Current Rest Length"], "extent": [28509, 28539], "body": [{"type": "para", "indent": 4, "text": ["The threshold can either be an absolute distance, or be a percentage distance.   A value of 0.1 as a ratio would mean stretching of 110% of compression of 90% will trigger plastic flow."], "extent": [28578, 28770]}], "container": true, "attrs": {"id": "stretchplasticthresholdratio"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rate"], "extent": [28770, 28776], "body": [{"type": "para", "indent": 4, "text": ["The speed at which the material adopts its new rest lengths when\n    it begins to flow."], "extent": [28805, 28898]}], "container": true, "attrs": {"id": "stretchplasticrate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rate Attribute"], "extent": [28898, 28914], "body": [{"type": "para", "indent": 4, "text": ["Attribute to scale the plastic rate by."], "extent": [28949, 28994]}], "container": true, "attrs": {"id": "stretchplasticrateattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale"], "extent": [28994, 29001], "body": [{"type": "para", "indent": 4, "text": ["Single scale slider for the plastic rate."], "extent": [29035, 29082]}], "container": true, "attrs": {"id": "stretchplasticratescale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hardening"], "extent": [29082, 29093], "body": [{"type": "para", "indent": 4, "text": ["Some plastic materials become stiffer after they've undergone deformation. These will have a hardening greater than 1.  Some become softer so will have hardening less than 1. This is a logarithmic multiplier on stiffness."], "extent": [29127, 29354]}], "container": true, "attrs": {"id": "stretchplastichardening"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hardening Attribute"], "extent": [29354, 29375], "body": [{"type": "para", "indent": 4, "text": ["Attribute to scale the plastic hardening by."], "extent": [29415, 29465]}], "container": true, "attrs": {"id": "stretchplastichardeningattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale"], "extent": [29465, 29472], "body": [{"type": "para", "indent": 4, "text": ["Single scale slider for plastic hardening."], "extent": [29511, 29560]}], "container": true, "attrs": {"id": "stretchplastichardeningscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Group"], "extent": [29560, 29574], "body": [{"type": "para", "indent": 4, "text": ["The generated stretch constraints are all added to this primitive group.  This is useful to edit them later with a ", {"scheme": "Node", "value": "/nodes/dop/vellumconstraintproperty", "type": "link", "text": ["Vellum Constraint Property"], "fullpath": "/nodes/dop/vellumconstraintproperty"}, " DOP."], "extent": [29595, 29784]}], "container": true, "attrs": {"id": "stretchgrp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Unique within Output Group"], "extent": [29784, 29817], "body": [{"type": "para", "indent": 4, "text": ["Ensures that a particular point can only be constrained once by the constraints in the ", {"type": "ui", "text": ["Output Group"]}, ".  When dynamically creating constraints it can be common to re-create constraints between the same points every frame.  Keeping the points unique within the output group prevents a constant accumulation of constraints."], "extent": [29845, 30173]}], "container": true, "attrs": {"id": "keepuniquestretch"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Bend"], "extent": [6001, 6014], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Add Bend across Welds"], "extent": [30184, 30208], "body": [{"type": "para", "indent": 4, "text": ["When welding points together, two outside edges may become an inside edge.\n    If they do not gain any bend constraints the seam will be weak and\n    noticeably fold or kink.  This option generates bend constraints where\n    this is detected."], "extent": [30227, 30476]}], "container": true, "attrs": {"id": "bendweld"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Copy Neighboring Stiffness"], "extent": [30476, 30504], "body": [{"type": "para", "indent": 4, "text": ["The value of the generated bend constraints can be copied from the bend\n    of surrounding triangles, ensuring a consistent piece of cloth is\n    built without having to channel link parameters."], "extent": [30532, 30733]}], "container": true, "attrs": {"id": "bendcopystiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness"], "extent": [30733, 30744], "body": [{"type": "para", "indent": 4, "text": ["The stiffness of bend constraints.  To dial in initial values,\n    change by factors of 10."], "extent": [30768, 30865]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [30865, 30875], "body": [{"type": "para", "indent": 8, "text": ["Bend constraints are based on angle differences, so higher resolution cloths will require higher stiffness to exhibit similar radii of curvature."], "extent": [30875, 31030]}], "container": true}, {"type": "note", "indent": 4, "role": "item", "extent": [31030, 31040], "body": [{"type": "para", "indent": 8, "text": ["Very high bend stiffness on high resolution models will require a very large number of iterations to converge."], "extent": [31040, 31160]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "bendstiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness Attribute"], "extent": [31160, 31181], "body": [{"type": "para", "indent": 4, "text": ["Point attribute to scale the stiffness by."], "extent": [31211, 31259]}, {"type": "para", "indent": 4, "text": ["As effective changes in stiffness requires painting over orders of magnitude, this has\n    a logarithmic effect."], "extent": [31259, 31378]}], "container": true, "attrs": {"id": "bendstiffnessattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale"], "extent": [31378, 31385], "body": [{"type": "para", "indent": 4, "text": ["Single slider control over the stiffness."], "extent": [31414, 31461]}, {"type": "para", "indent": 4, "text": ["As effective changes in stiffness requires painting over orders of magnitude, this has\n    a logarithmic effect."], "extent": [31461, 31580]}], "container": true, "attrs": {"id": "bendstiffnessscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Damping Ratio"], "extent": [31580, 31595], "body": [{"type": "para", "indent": 4, "text": ["Stiff constraints tend to vibrate or jitter unacceptably.   Damping reduces this by bleeding energy when evaluating the constraint.  Too much damping can prevent the constraint from being satisfied, however.   Values less than 1 should be used."], "extent": [31622, 31872]}], "container": true, "attrs": {"id": "benddampingratio"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Damping Attribute"], "extent": [31872, 31891], "body": [{"type": "para", "indent": 4, "text": ["Attribute to adjust damping, multiplied into the damping ratio."], "extent": [31919, 31988]}], "container": true, "attrs": {"id": "benddampingattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale"], "extent": [31988, 31995], "body": [{"type": "para", "indent": 4, "text": ["Single slider to control damping, multiplied into the damping ratio."], "extent": [32022, 32096]}], "container": true, "attrs": {"id": "benddampingscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Angle Scale"], "extent": [32096, 32114], "body": [{"type": "para", "indent": 4, "text": ["The rest angle of the bend constraints will be the original dihedral\n    angle between the triangles.   This scale can be used to increase or\n    decrease this.   Setting to ", {"type": "code", "text": ["0"]}, " will treat the original configuration as a\n    flat sheet."], "extent": [32138, 32380]}], "container": true, "attrs": {"id": "bendrestscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness Dropoff"], "extent": [32380, 32399], "body": [{"type": "para", "indent": 4, "text": ["The number of degrees away from the rest angle at which the stiffness of\n    the constraint decreases to zero, or increases from zero to full stiffness, depending on\n    the direction of the dropoff.  A ", {"type": "ui", "text": ["Decreasing"]}, " dropoff means that the\n    stiffness starts at full strength and decreases to zero at the Dropoff\n    degrees from the rest angle.  An ", {"type": "ui", "text": ["Increasing"]}, " dropoff means the stiffness\n    starts at zero and increases to full stiffness at the specified degrees away\n    from rest angle. If ", {"type": "ui", "text": ["Min Stiffness"]}, " is enabled, its value is used as the\n    minimum stiffness in these calculations, rather than zero."], "extent": [32430, 33054]}, {"type": "para", "indent": 4, "text": ["A small amount of ", {"type": "ui", "text": ["Increasing"]}, " dropoff can be useful with cloth to make it buckle\n    from a flat state very easily, adding additional wrinkling without changing the overall\n    bend stiffness and look of the cloth too significantly. Decreasing dropoff can be useful\n    for making stretchy glue constraints that weaken right before breaking without snapping back."], "extent": [33054, 33426]}], "container": true, "attrs": {"id": "bendstiffnessdropoff"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Stiffness"], "extent": [33426, 33441], "body": [{"type": "para", "indent": 4, "text": ["If enabled, the minimum stiffness value when calculating ", {"type": "ui", "text": ["Stiffness Dropoff"]}, "."], "extent": [33475, 33560]}], "container": true, "attrs": {"id": "bendstiffnessdropoffmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Branch Angle"], "extent": [33560, 33578], "body": [{"type": "para", "indent": 4, "text": ["When adding torsion-free string bend constraints, they work best when\n    the rest angle is close to straight.  Setting the max branch angle allows\n    something like a net of ropes to only have the bend constraints along\n    the straight ropes, not on the perpendicular sections."], "extent": [33603, 33890]}], "container": true, "attrs": {"id": "maxbranchangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Plasticity"], "extent": [33890, 33909], "body": [{"type": "para", "indent": 4, "text": ["Plasticity allows an object to flow to a new rest position.  Under\n    sufficient stress, the rest coordinates are blended to the current dynamic\n    coordinates, so the object will retain its new shape."], "extent": [33934, 34143]}], "container": true, "attrs": {"id": "bendplasticity"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Plasticity"], "extent": [6757, 6776], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Threshold"], "extent": [34162, 34174], "body": [{"type": "para", "indent": 4, "text": ["Below this threshold the material will return to its original shape.\n    When deformed past the threshold, it will begin to creep into\n    its new configuration."], "extent": [34205, 34372]}, {"type": "para", "indent": 4, "text": ["This is an absolute angle measurement.  Because rest angles are often\n    flat, the idea of a ratio that exists for stretch constraints does not\n    apply to bend constraints."], "extent": [34372, 34553]}], "container": true, "attrs": {"id": "bendplasticthreshold"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Threshold Attribute"], "extent": [34553, 34574], "body": [{"type": "para", "indent": 4, "text": ["Attribute to scale the bend threshold by."], "extent": [34611, 34658]}], "container": true, "attrs": {"id": "bendplasticthresholdattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rate"], "extent": [34745, 34751], "body": [{"type": "para", "indent": 4, "text": ["The speed at which the material adopts its new rest angles when\n    it begins to flow."], "extent": [34777, 34869]}], "container": true, "attrs": {"id": "bendplasticrate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rate Attribute"], "extent": [34869, 34885], "body": [{"type": "para", "indent": 4, "text": ["Attribute to scale the plastic rate by."], "extent": [34917, 34962]}], "container": true, "attrs": {"id": "bendplasticrateattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hardening"], "extent": [35047, 35058], "body": [{"type": "para", "indent": 4, "text": ["Some plastic materials become stiffer after they've undergone deformation. These will have a hardening greater than 1.  Some become softer so will have hardening less than 1."], "extent": [35089, 35269]}], "container": true, "attrs": {"id": "bendplastichardening"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hardening Attribute"], "extent": [35269, 35290], "body": [{"type": "para", "indent": 4, "text": ["Attribute to scale the plastic hardening by."], "extent": [35327, 35377]}], "container": true, "attrs": {"id": "bendplastichardeningattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Group"], "extent": [35468, 35482], "body": [{"type": "para", "indent": 4, "text": ["The generated stretch constraints are all added to this primitive group.  This is useful to edit them later with a ", {"scheme": "Node", "value": "/nodes/dop/vellumconstraintproperty", "type": "link", "text": ["Vellum Constraint Property"], "fullpath": "/nodes/dop/vellumconstraintproperty"}, " DOP."], "extent": [35500, 35688]}], "container": true, "attrs": {"id": "bendgrp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Unique within Output Group"], "extent": [35688, 35721], "body": [{"type": "para", "indent": 4, "text": ["Ensures that a particular point can only be constrained once by the constraints in the ", {"type": "ui", "text": ["Output Group"]}, ".  When dynamically creating constraints it can be common to re-create constraints between the same points every frame.  Keeping the points unique within the output group prevents a constant accumulation of constraints."], "extent": [35746, 36074]}], "container": true, "attrs": {"id": "keepuniquebend"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Breaking"], "extent": [7254, 7271], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Breaking"], "extent": [36089, 36107], "body": [{"type": "para", "indent": 4, "text": ["Constraint primitives can be removed by the solver when sufficient deformation or stress is applied, effectively breaking those constraints.   You can also manually break constraints by deleting them during the solve to gain full control of the timing."], "extent": [36128, 36386]}, {"type": "para", "indent": 4, "text": ["Running the simulation first with visualization enabled can be useful to find what are good values for the thresholds."], "extent": [36386, 36511]}], "container": true, "attrs": {"id": "dobreaking"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Threshold"], "extent": [36511, 36522], "body": [{"type": "para", "indent": 4, "text": ["The amount of stress or displacement on a constraint to trigger a break."], "extent": [36547, 36626]}], "container": true, "attrs": {"id": "breakthreshold"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Threshold Attribute"], "extent": [36626, 36647], "body": [{"type": "para", "indent": 4, "text": ["Point attribute to scale the threshold by."], "extent": [36674, 36723]}], "container": true, "attrs": {"id": "breakscaleattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale"], "extent": [36723, 36730], "body": [{"type": "para", "indent": 4, "text": ["Single slider to scale the threshold."], "extent": [36751, 36795]}], "container": true, "attrs": {"id": "breakscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [36795, 36801], "body": [{"type": "para", "indent": 4, "text": ["This controls how the solver decides to break weld and hair constraints."], "extent": [36824, 36902]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [36902, 36912], "body": [{"type": "para", "indent": 8, "text": ["No automated tests are performed."], "extent": [36912, 36955]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stretch Stress"], "extent": [36955, 36975], "body": [{"type": "para", "indent": 8, "text": ["The stretch stress must exceed the threshold."], "extent": [36975, 37030]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Bend Stress"], "extent": [37030, 37047], "body": [{"type": "para", "indent": 8, "text": ["The bend stress must exceed the threshold."], "extent": [37047, 37099]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stretch Distance"], "extent": [37099, 37121], "body": [{"type": "para", "indent": 8, "text": ["The total distance from the goal location and the current location must exceed the threshold."], "extent": [37121, 37224]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stretch Ratio"], "extent": [37224, 37243], "body": [{"type": "para", "indent": 8, "text": ["The ratio between the current distance and the rest distance must exceed the threshold."], "extent": [37243, 37340]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Bend Angle"], "extent": [37340, 37356], "body": [{"type": "para", "indent": 8, "text": ["The difference between the current angle and the rest angle must exceed the threshold.  This value is specified in degrees."], "extent": [37356, 37490]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "breaktypeall"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [37490, 37496], "body": [{"type": "para", "indent": 4, "text": ["This controls how the solver decides to break distance constraints."], "extent": [37523, 37596]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [37596, 37606], "body": [{"type": "para", "indent": 8, "text": ["No automated tests are performed."], "extent": [37606, 37649]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stretch Stress"], "extent": [37649, 37669], "body": [{"type": "para", "indent": 8, "text": ["The stretch stress must exceed the threshold."], "extent": [37669, 37724]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stretch Distance"], "extent": [37724, 37746], "body": [{"type": "para", "indent": 8, "text": ["The total distance from the goal location and the current location must exceed the threshold."], "extent": [37746, 37849]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stretch Ratio"], "extent": [37849, 37868], "body": [{"type": "para", "indent": 8, "text": ["The ratio between the current distance and the rest distance must exceed the threshold."], "extent": [37868, 37966]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "breaktypestretch"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Attributes"], "extent": [7596, 7615], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Promotion Method"], "extent": [37983, 38002], "body": [{"type": "para", "indent": 4, "text": ["The scale-by-attribute functions have to apply the possible different scale attribute values on the points involved in the constraint to a single constraint.  This controls how they are blended together."], "extent": [38026, 38235]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Maximum"], "extent": [38235, 38248], "body": [{"type": "para", "indent": 8, "text": ["The maximum scale factor is used."], "extent": [38248, 38291]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Minimum"], "extent": [38291, 38304], "body": [{"type": "para", "indent": 8, "text": ["The minimum scale factor is used."], "extent": [38304, 38347]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Average"], "extent": [38347, 38360], "body": [{"type": "para", "indent": 8, "text": ["The average of the points scale factors is used."], "extent": [38360, 38418]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Multiply"], "extent": [38418, 38432], "body": [{"type": "para", "indent": 8, "text": ["The scale factors are all multiplied together."], "extent": [38432, 38488]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Use Source"], "extent": [38488, 38504], "body": [{"type": "para", "indent": 8, "text": ["The source points scale factor is used, such as in a stitch constraint."], "extent": [38504, 38585]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Use Target"], "extent": [38585, 38601], "body": [{"type": "para", "indent": 8, "text": ["The target points scale factor is used, such as in a stitch constraint."], "extent": [38601, 38682]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "attribpromote"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tag"], "extent": [38682, 38687], "body": [{"type": "para", "indent": 4, "text": ["A string stored in the ", {"type": "code", "text": ["constraint_tag"]}, " primitive attribute for all constraints created by this node. This tag can be used in the ", {"type": "ui", "text": ["Constraint Group"]}, " parameter on the ", {"scheme": "Node", "value": "/nodes/sop/vellumconstraintproperty", "type": "link", "text": ["Vellum Constraint Property SOP"], "fullpath": "/nodes/sop/vellumconstraintproperty"}, " to easily to alter specific constraints."], "extent": [38701, 38982]}], "container": true, "attrs": {"id": "tag"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Bindings"], "extent": [7714, 7729], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Geometry"], "extent": [7729, 7740], "body": [{"type": "para", "indent": 4, "text": ["Data on the simulation object to use as the source for computing edges, etc.  Usually the display or collision geometry."], "extent": [7763, 7890]}], "container": true, "attrs": {"id": "geometrydata"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constraint Geometry"], "extent": [7890, 7911], "body": [{"type": "para", "indent": 4, "text": ["Data on the simulation object to add the new constraints to."], "extent": [7936, 8002]}], "container": true, "attrs": {"id": "constraintdata"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [8002, 8011], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/vellumsolver", "type": "link", "text": "", "fullpath": "/nodes/dop/vellumsolver"}], "extent": [8011, 8041]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/vellumsource", "type": "link", "text": "", "fullpath": "/nodes/dop/vellumsource"}], "extent": [8041, 8071]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/vellumobject", "type": "link", "text": "", "fullpath": "/nodes/dop/vellumobject"}], "extent": [8071, 8102]}], "container": true}], "text": "Related"}], "title": ["Vellum Constraints"], "summary": ["Microsolver to create Vellum constraints during a simulation."], "included": ["/nodes/sop/vellumconstraints"]}