{"type": "root", "attrs": {"type": "node", "context": "sop", "namespace": "kinefx", "internal": "fbikconfiguretargets", "icon": "SOP/kinefx-fbikconfiguretargets", "tags": "soprigging, rigging, motion, retargeting", "since": "18.5", "version": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["FBIK Configure Targets"], "extent": [178, 205]}, {"type": "summary", "indent": 0, "text": ["Configures joint properties used by full-body inverse kinematics solvers."], "extent": [205, 287]}, {"type": "para", "indent": 0, "text": ["This SOP generates point attributes (", {"type": "code", "text": ["fbik_targetconfig"]}, ") that specify the target skeleton\u2019s behavior when a full-body inverse kinematics solver is applied (for example, with the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--fullbodyik", "type": "link", "text": ["Full Body IK SOP"], "fullpath": "/nodes/sop/kinefx--fullbodyik"}, ")."], "extent": [287, 516]}, {"level": 1, "id": "attributes", "container": true, "type": "attributes_section", "indent": 0, "role": "section", "extent": [516, 528], "body": [{"type": "attributes_item_group", "body": [{"type": "attributes_item", "indent": 0, "text": [{"type": "code", "text": ["fbik_targetconfig"]}], "extent": [746, 767], "body": [{"type": "para", "indent": 4, "text": ["This dictionary point attribute configures how the joint\u2019s goal transform\n    behaves in a full-body inverse kinematics solver. This is only used when\n    the joint has a goal transform (for example, if the joint is mapped to a\n    joint on the source skeleton). For more details on the valid keys, see the\n    ", {"type": "code", "text": ["targetoptions"]}, " parameter for ", {"scheme": "Vex", "value": "/vex/functions/solvephysfbik", "type": "link", "text": "", "fallback_text": "solvephysfbik()", "fullpath": "/vex/functions/solvephysfbik"}, " and ", {"scheme": "Vex", "value": "/vex/functions/solvefbik", "type": "link", "text": "", "fallback_text": "solvefbik()", "fullpath": "/vex/functions/solvefbik"}, "."], "extent": [795, 1182]}], "container": true, "attrs": {"id": "fbik_targetconfig"}, "role": "item", "id": "fbik_targetconfig"}], "container": true, "role": "item_group"}], "text": "Attributes"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [573, 585], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Offets"], "extent": [585, 594], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Compute Offsets"], "extent": [594, 615], "body": [{"type": "para", "indent": 8, "text": ["Set whether this node should be used to compute the offsets between the two input skeletons."], "extent": [643, 745]}], "container": true, "attrs": {"id": "computeoffsets"}}, {"type": "dt", "indent": 4, "text": ["Use Rest Pose"], "extent": [745, 764], "body": [{"type": "para", "indent": 8, "text": ["Use the pose stored in the specified ", {"type": "ui", "text": ["Rest Pose Attribute"]}, " to compute the offsets. This is useful if either of the inputs have already been animated."], "extent": [789, 950]}], "container": true, "attrs": {"id": "userestpose"}}, {"type": "dt", "indent": 4, "text": ["Rest Pose Attribute"], "extent": [950, 975], "body": [{"type": "para", "indent": 8, "text": ["The matrix point attribute to use for computing the offsets between mapped points."], "extent": [1003, 1095]}], "container": true, "attrs": {"id": "restposeattrib"}}, {"type": "dt", "indent": 4, "text": ["Source Rest Frame"], "extent": [1095, 1118], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Use Rest Pose"]}, " is disabled the node will use this frame as the reference pose on the ", {"type": "ui", "text": ["Source Skeleton"]}, " when computing offsets. Typically this would be the frame containing the t-pose of the animation."], "extent": [1144, 1364]}], "container": true, "attrs": {"id": "srcrestframe"}}, {"type": "dt", "indent": 0, "text": ["Map Using"], "extent": [3820, 3831], "body": [{"type": "para", "indent": 4, "text": ["This parameter allows you to choose whether to use a dictionary attribute on the first input to look up the drivers on the second input or simply to match by an attribute present on both inputs. For example, the second option is useful when the second input contains a subset of the first input\u2019s points."], "extent": [3849, 4159]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Mapping Attribute"], "extent": [4159, 4182], "body": [{"type": "para", "indent": 8, "text": ["Use a dictionary point attribute present on the first input to look up the drivers on the second input. This attribute is created for you by the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--mappoints", "type": "link", "text": ["Map Points SOP"], "fullpath": "/nodes/sop/kinefx--mappoints"}, ", but any dictionary attribute matching the following format can be used:"], "extent": [4182, 4452]}, {"type": "disclosure_group", "body": [{"ext": null, "type": "disclosure", "indent": 8, "text": ["Dictionary attribute VEX format"], "role": "item", "extent": [4452, 4504], "body": [{"lang": "vex", "type": "pre", "indent": 12, "text": ["\n            {\n                'reference': string, // The point attribute on the driver skeleton to use as reference. If set to \"ptnum\", the point number will be used.\n                'value': string or int // The value of the point attribute on the point to use as the driver.\n            }\n            "], "extent": [4504, 4846]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Match By Attribute"], "extent": [4846, 4879], "body": [{"type": "para", "indent": 8, "text": ["Match points on the first input to corresponding points on the second input using a given point attribute. For example, if ", {"type": "ui", "text": ["Attribute To Match"]}, " is set to 'name' then the points on the first input will be driven by points on the second input that share the same name."], "extent": [4879, 5157]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "mapusing"}}, {"type": "dt", "indent": 0, "text": ["Mapping Attribute"], "extent": [5157, 5176], "body": [{"type": "para", "indent": 4, "text": ["The name of the dictionary point attribute on the first input to use for mapping."], "extent": [5203, 5290]}], "container": true, "attrs": {"id": "mappingattribname"}}, {"type": "dt", "indent": 0, "text": ["Attribute To Match"], "extent": [5290, 5310], "body": [{"type": "para", "indent": 4, "text": ["The name of the point attribute present on both inputs to be used to map points."], "extent": [5333, 5419]}], "container": true, "attrs": {"id": "attribtomatch"}}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Center Of Mass"], "extent": [1493, 1509], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Add Center Of Mass Target"], "extent": [1509, 1540], "body": [{"type": "para", "indent": 8, "text": ["Enable center of mass computations on the Physical Full-Body IK solver."], "extent": [1566, 1647]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [1647, 1661], "body": [{"type": "para", "indent": 12, "text": ["This will only affect the result when using the ", {"type": "ui", "text": ["Physical Full Body IK solver"]}, ". It will have no effect when using ", {"type": "ui", "text": ["FABRIK"]}, "."], "extent": [1661, 1802]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "addcomtarget"}}, {"type": "dt", "indent": 4, "text": ["Point Name"], "extent": [1802, 1818], "body": [{"type": "para", "indent": 8, "text": ["The name of the point on the ", {"type": "ui", "text": ["Source Skeleton"]}, " to use as the COM target."], "extent": [1845, 1929]}], "container": true, "attrs": {"id": "comtargetname"}}, {"type": "dt", "indent": 4, "text": ["Weight"], "extent": [1929, 1941], "body": [{"type": "para", "indent": 8, "text": ["The importance of the COM target in the solve.\n        When multiple targets have the same priority level, targets with a higher relative weight are more likely to be reached."], "extent": [1964, 2149]}], "container": true, "attrs": {"id": "comweight"}}, {"type": "dt", "indent": 4, "text": ["Priority"], "extent": [2149, 2163], "body": [{"type": "para", "indent": 8, "text": ["Specify the COM Target\u2019s priority.\n        Targets from a lower priority level cannot interfere with targets from a higher priority level."], "extent": [2188, 2336]}], "container": true, "attrs": {"id": "compriority"}}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Configurations"], "extent": [2336, 2352], "body": [{"type": "para", "indent": 4, "text": ["The number of joint groups to configure."], "extent": [2352, 2398]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [2398, 2405], "body": [{"type": "para", "indent": 4, "text": ["Specifies which points will be configured."], "extent": [2405, 2453]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Target Configuration"], "extent": [2453, 2482], "body": [{"type": "para", "indent": 0, "text": ["Configures how the solver will attempt to reach the joint\u2019s target.\nThese controls only take effect when the joint has a goal transform (for example, if the joint is ", {"scheme": "Node", "value": "/nodes/sop/kinefx--mappoints", "type": "link", "text": ["mapped"], "fullpath": "/nodes/sop/kinefx--mappoints"}, " to a joint on the source skeleton)."], "extent": [2482, 2722]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Weight"], "extent": [2722, 2730], "body": [{"type": "para", "indent": 4, "text": ["Specifies the importance of the target.\n    When multiple targets have the same priority level, targets with a higher relative weight are more likely to be reached."], "extent": [2730, 2900]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Priority"], "extent": [2900, 2910], "body": [{"type": "para", "indent": 4, "text": ["Specifies the target\u2019s priority level.\n    Targets from a lower priority level cannot interfere with targets from a higher priority level.\n    For example, priority levels can be used to ensure that the feet remain planted when manipulating the upper body of a skeleton."], "extent": [2910, 3186]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [3186, 3192], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether the solver will attempt to match the target transform\u2019s position, orientation, or both."], "extent": [3192, 3303]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Set Depth"], "extent": [3303, 3314], "body": [{"type": "para", "indent": 4, "text": ["Limits the number of parent joints that can be adjusted to achieve the goal transform, instead of affecting the entire chain above the joint."], "extent": [3314, 3461]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Depth"], "extent": [3461, 3468], "body": [{"type": "para", "indent": 4, "text": ["The number of parent joints that can be adjusted to achieve the goal transform."], "extent": [3468, 3553]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blend Offset Translates"], "extent": [3553, 3578], "body": [{"type": "para", "indent": 4, "text": ["This parameter controls how much of the translation portion of the computed offsets to include in the solve. Setting this to ", {"type": "code", "text": ["0"]}, " will cause the translations found in the offsets to be completely ignored.\n    This is useful when you want the target points to adhere closely to the position of their corresponding drivers on the ", {"type": "ui", "text": ["Source Skeleton"]}, "."], "extent": [3578, 3931]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [3931, 3939], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Target Skeleton"], "extent": [3939, 3957], "body": [{"type": "para", "indent": 4, "text": ["The target skeleton for the full body IK solve."], "extent": [3957, 4010]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Source Skeleton"], "extent": [4010, 4027], "body": [{"type": "para", "indent": 4, "text": ["The source skeleton for the full body IK solve.\n    This input is optional and is passed through unmodified, but allows related nodes with two outputs (e.g. ", {"scheme": "Node", "value": "/nodes/sop/kinefx--mappoints", "type": "link", "text": ["Map Points"], "fullpath": "/nodes/sop/kinefx--mappoints"}, ") to be easily chained together."], "extent": [4027, 4261]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [4261, 4270], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Target Skeleton"], "extent": [4270, 4288], "body": [{"type": "para", "indent": 4, "text": ["The target skeleton geometry with the ", {"type": "code", "text": ["fbik_targetconfig"]}, " attribute added."], "extent": [4288, 4368]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Source Skeleton"], "extent": [4368, 4385], "body": [{"type": "para", "indent": 4, "text": ["The source skeleton for the full body IK solve."], "extent": [4385, 4438]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4438, 4447], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fullbodyik", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fullbodyik"}], "extent": [4447, 4479]}], "container": true}], "text": "Related"}], "title": ["FBIK Configure Targets"], "summary": ["Configures joint properties used by full-body inverse kinematics solvers."], "included": ["/nodes/sop/_kinefx_common"]}