{"type": "root", "attrs": {"type": "node", "context": "sop", "namespace": "kinefx", "internal": "fbxanimoutput", "icon": "SOP/kinefx-rop_fbxanimoutput", "tags": "character, export, rigging, animation, kinefx", "since": "18.5", "version": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["ROP FBX Animation Output"], "extent": [173, 202]}, {"type": "summary", "indent": 0, "text": ["Export animation from geometry-based skeleton to an FBX file."], "extent": [202, 272]}, {"type": "para", "indent": 0, "text": ["There are two export workflows when using this node:"], "extent": [272, 325]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Update animation from an input FBX containing a full character. To do this,\n  specify a file for ", {"type": "ui", "text": ["Input FBX File"]}, ". This causes the node to first load the\n  input FBX file, updating it with animation from the geometry input, and\n  then saving it out to the file given in ", {"type": "ui", "text": ["Output FBX File"]}, "."], "extent": [325, 620]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Save out an FBX file containing just the skeleton animation. In this case,\n  leave ", {"type": "ui", "text": ["Input FBX File"]}, " blank."], "extent": [620, 732]}], "container": true}, {"level": 1, "id": "attributes", "container": true, "type": "attributes_section", "indent": 0, "role": "section", "extent": [732, 744], "body": [{"type": "attributes_item_group", "body": [{"type": "attributes_item", "indent": 0, "text": ["clipinfo"], "extent": [16, 26], "body": [{"type": "para", "indent": 4, "text": ["This detail attribute records the current animation range and sample rate\n    as well as the original animation range and sample rate of the imported\n    animation."], "extent": [45, 215]}], "container": true, "attrs": {"id": "clipinfo"}, "role": "item", "id": "clipinfo"}, {"type": "attributes_item", "indent": 0, "text": ["name"], "extent": [780, 786], "body": [{"type": "para", "indent": 4, "text": ["Point attribute containing the unique name across all points used for\n    identification. This is only used if the ", {"type": "code", "text": ["path"]}, " point attribute is missing."], "extent": [786, 941]}], "container": true, "role": "item", "id": "name"}, {"type": "attributes_item", "indent": 0, "text": ["path"], "extent": [941, 947], "body": [{"type": "para", "indent": 4, "text": ["Point attribute containing the hierarchical path of FBX node that\n    corresponds to the point. It is created when FBX files are imported by the\n    ", {"scheme": "Node", "value": "/nodes/sop/kinefx--fbxanimimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fbxanimimport"}, " or ", {"scheme": "Node", "value": "/nodes/sop/kinefx--fbxcharacterimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fbxcharacterimport"}, "\n    nodes. This path is used to identify where to export the point transforms."], "extent": [947, 1254]}], "container": true, "role": "item", "id": "path"}, {"type": "attributes_item", "indent": 0, "text": ["scaleinheritance"], "extent": [215, 233], "body": [{"type": "para", "indent": 4, "text": ["This point attribute specifies the scaling behavior when performing local\n    transformations. For more details on what these values indicate see\n    ", {"scheme": "Vex", "value": "/vex/functions/combinelocaltransform", "type": "link", "text": "", "fallback_text": "combinelocaltransform()", "fullpath": "/vex/functions/combinelocaltransform"}, " and ", {"scheme": "Vex", "value": "/vex/functions/extractlocaltransform", "type": "link", "text": "", "fallback_text": "extractlocaltransform()", "fullpath": "/vex/functions/extractlocaltransform"}], "extent": [267, 482]}], "container": true, "attrs": {"id": "scaleinheritance_attrib"}, "role": "item", "id": "scaleinheritance"}, {"type": "attributes_item", "indent": 0, "text": ["transform"], "extent": [482, 493], "body": [{"type": "para", "indent": 4, "text": ["This 3\u00d73 matrix point attribute specifies the world transform for the\n    point. While the world position of the point is still ", {"type": "code", "text": ["P"]}, ", this transform\n    encodes the world transform\u2019s rotation, scale, and shear components."], "extent": [520, 746]}], "container": true, "attrs": {"id": "transform_attrib"}, "role": "item", "id": "transform"}], "container": true, "role": "item_group"}], "text": "Attributes"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [1347, 1355], "body": [{"type": "para", "indent": 0, "text": ["Skeleton animation is expected as the input. Each joint in the skeleton is represented by a point, where the ", {"type": "code", "text": ["P"]}, " and ", {"type": "code", "text": ["transform"]}, " (", {"type": "code", "text": ["matrix3"]}, ") attributes contain the joint\u2019s transform."], "extent": [1355, 1539], "body": [{"type": "para", "indent": 4, "text": ["The point\u2019s ", {"type": "code", "text": ["name"]}, " attribute contains the joint\u2019s name, and is matched up with the capture paths in the rest geometry\u2019s ", {"type": "code", "text": ["boneCapture"]}, " attribute when deforming the skin.\n    The skeleton\u2019s hierarchy is represented by two-point polygons between the points for each child joint and its parent."], "extent": [1539, 1835]}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1835, 1847], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Save to Disk"], "extent": [1847, 1862], "body": [{"type": "para", "indent": 4, "text": ["Begins the export with the last control settings."], "extent": [1880, 1935]}], "container": true, "attrs": {"id": "execute"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Controls\u2026"], "extent": [1935, 1948], "body": [{"type": "para", "indent": 4, "text": ["Click to open a dialog that lets you launch a ", {"type": "q", "text": ["one-off"]}, " export with\n    different frame range and dependency settings."], "extent": [1971, 2095]}], "container": true, "attrs": {"id": "renderdialog"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clip Range"], "extent": [2095, 2107], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use clipinfo Detail Attribute"], "extent": [2131, 2166], "body": [{"type": "para", "indent": 8, "text": ["Obtain frame range to export using the input\u2019s ", {"type": "code", "text": ["clipinfo"]}, " detail\n        attribute."], "extent": [2166, 2259]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Render Current Frame"], "extent": [2259, 2285], "body": [{"type": "para", "indent": 8, "text": ["Export only the current frame."], "extent": [2285, 2325]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Render Frame Range"], "extent": [2325, 2349], "body": [{"type": "para", "indent": 8, "text": ["Only export the frames in the range set below, but also allow\n        exporting other frames if they are referenced by in-range frames."], "extent": [2349, 2494]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Render Frame Range Only (Strict)"], "extent": [2494, 2532], "body": [{"type": "para", "indent": 8, "text": ["Only export the frames in the range set below, and don\u2019t allow\n        exporting any other frames, even if they are referenced by in-range\n        frames."], "extent": [2532, 2696]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "cliprangemode"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Start/End/Inc"], "extent": [2599, 2618], "body": [{"type": "para", "indent": 8, "text": ["Specifies the range of frames to render (start frame, end frame, and\n        increment). All values may be floating point values. The range\n        is inclusive. "], "extent": [2634, 2806]}, {"type": "para", "indent": 8, "text": ["These parameters determine the values of the local variables for the\n        output driver."], "extent": [2806, 2906], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": [{"type": "code", "text": ["$NRENDER"]}], "extent": [2906, 2930], "body": [{"type": "para", "indent": 16, "text": ["The number of frames to be rendered by the output driver."], "extent": [2930, 3004]}], "container": true}, {"type": "dt", "indent": 12, "text": [{"type": "code", "text": ["$N"]}], "extent": [3004, 3022], "body": [{"type": "para", "indent": 16, "text": ["The current frame being rendered (starting at 1 and going to\n                ", {"type": "code", "text": ["$NRENDER"]}, ")."], "extent": [3022, 3137]}], "container": true}], "container": true}], "container": true}, {"type": "para", "indent": 8, "text": ["For example, if the parameters are set to:"], "extent": [3137, 3197]}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["Start "], "role": "th", "extent": [3197, 3214], "container": true}, {"type": "cell", "indent": 12, "text": ["End "], "role": "th", "extent": [3214, 3233], "container": true}, {"type": "cell", "indent": 16, "text": ["Inc "], "role": "th", "extent": [3233, 3256]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["10.5 "], "role": "td", "extent": [3256, 3271], "container": true}, {"type": "cell", "indent": 12, "text": ["12 "], "role": "td", "extent": [3271, 3288], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["0.5 |"], "extent": [3288, 3311]}]}], "divider": false}]}, {"type": "para", "indent": 8, "text": ["\u2026there will be 4 frames rendered (10.5, 11, 11.5, and 12), so ", {"type": "code", "text": ["$NRENDER"]}, " will have a value of 4. ", {"type": "code", "text": ["$N"]}, " will have the following values at each frame:"], "extent": [3311, 3478]}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["Frame "], "role": "th", "extent": [3478, 3495], "container": true}, {"type": "cell", "indent": 12, "text": [{"type": "code", "text": ["$N"]}, " "], "role": "th", "extent": [3495, 3515]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["10.5 "], "role": "td", "extent": [3515, 3530], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 12, "text": ["1"], "extent": [3530, 3544]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["11 "], "role": "td", "extent": [3544, 3557], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 12, "text": ["2"], "extent": [3557, 3571]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["11.5 "], "role": "td", "extent": [3571, 3586], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 12, "text": ["3"], "extent": [3586, 3600]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["12 "], "role": "td", "extent": [3600, 3613], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 12, "text": ["4"], "extent": [3613, 3628]}]}], "divider": false}]}], "container": true, "attrs": {"id": "f"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Render with Take"], "extent": [304, 326], "body": [{"type": "para", "indent": 8, "text": ["Uses the settings in a particular take while rendering. Choose\n        ", {"type": "ui", "text": ["Current"]}, " to use the current take when rendering."], "extent": [345, 477]}], "container": true, "attrs": {"id": "take"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Input FBX File"], "extent": [2765, 2781], "body": [{"type": "para", "indent": 4, "text": ["When given, this FBX file is first imported. In effect, the output will be \n    a copy of this file using the input geometry\u2019s animation."], "extent": [2805, 2948]}], "container": true, "attrs": {"id": "inputfilepath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output FBX File"], "extent": [2948, 2965], "body": [{"type": "para", "indent": 4, "text": ["File path to export to. This should be different from ", {"type": "ui", "text": ["Input FBX File"]}, "."], "extent": [2990, 3069]}], "container": true, "attrs": {"id": "outputfilepath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clip Name"], "extent": [3069, 3080], "body": [{"type": "para", "indent": 4, "text": ["The clip name within the FBX file for storing the animation data.\n    Animation will be written to this clip, creating it in the process if\n    needed."], "extent": [3099, 3256]}, {"type": "para", "indent": 4, "text": ["When this is blank, the animation will be written to the active clip from\n    the input FBX file if it exists, else creating a clip named ", {"type": "code", "text": ["clip0"]}, " if\n    needed."], "extent": [3256, 3422]}], "container": true, "attrs": {"id": "clipname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Pose Attribute"], "extent": [3422, 3443], "body": [{"type": "para", "indent": 4, "text": ["Name of a 4\u00d74 matrix point attribute to use as the rest pose for the\n    joints. The values in this attribute are defined in world space and is used\n    for the joint\u2019s transform before attaching animation."], "extent": [3468, 3680]}], "container": true, "attrs": {"id": "restposeattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Intermediate Directories"], "extent": [3680, 3713], "body": [{"type": "para", "indent": 4, "text": ["When enabled, create intermediate parent directories for output files as\n    needed."], "extent": [3730, 3820]}], "container": true, "attrs": {"id": "mkpath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shift Range to Source"], "extent": [3820, 3843], "body": [{"type": "para", "indent": 4, "text": ["When exporting, shift the animation so that it begins at the ", {"type": "code", "text": ["clipinfo"]}, "\n    attribute\u2019s source start time."], "extent": [3872, 3984]}], "container": true, "attrs": {"id": "shiftrangetosource"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Convert Units"], "extent": [3984, 3999], "body": [{"type": "para", "indent": 4, "text": ["When enabled, scale the animation so that it is converted to the FBX file\u2019s\n    measurement unit (default centimeters) from the Houdini scene\u2019s measurement\n    unit as specified in Main Preferences > Hip File Options (default meters)."], "extent": [4022, 4262]}], "container": true, "attrs": {"id": "convertunits"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Save as Binary"], "extent": [4262, 4278], "body": [{"type": "para", "indent": 4, "text": ["Save FBX file as binary instead of as text."], "extent": [4300, 4349]}], "container": true, "attrs": {"id": "saveasbinary"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pre-Render Script"], "extent": [4349, 4368], "body": [{"type": "para", "indent": 4, "text": ["Run this script before saving starts."], "extent": [4393, 4436]}], "container": true, "attrs": {"id": "prerenderscript"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pre-Frame Script"], "extent": [4436, 4454], "body": [{"type": "para", "indent": 4, "text": ["Run this script before each frame."], "extent": [4478, 4518]}], "container": true, "attrs": {"id": "preframescript"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Post-Frame Script"], "extent": [4518, 4537], "body": [{"type": "para", "indent": 4, "text": ["Run this script after each frame."], "extent": [4562, 4601]}], "container": true, "attrs": {"id": "postframescript"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Post-Render Script"], "extent": [4601, 4621], "body": [{"type": "para", "indent": 4, "text": ["Run this script after done saving."], "extent": [4647, 4687]}], "container": true, "attrs": {"id": "postrenderscript"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4687, 4696], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fbxanimimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fbxanimimport"}], "extent": [4696, 4731]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fbxcharacterimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fbxcharacterimport"}], "extent": [4731, 4771]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fbxskinimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fbxskinimport"}], "extent": [4771, 4806]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--rop_fbxcharacteroutput", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--rop_fbxcharacteroutput"}], "extent": [4806, 4850]}], "container": true}], "text": "Related"}], "title": ["ROP FBX Animation Output"], "summary": ["Export animation from geometry-based skeleton to an FBX file."], "included": ["/nodes/out/standard", "/nodes/sop/_kinefx_common"]}