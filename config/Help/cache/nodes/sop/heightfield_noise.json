{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "heightfield_noise", "icon": "SOP/heightfield_noise", "since": "16.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["HeightField Noise"], "extent": [0, 22]}, {"type": "summary", "indent": 0, "text": ["Adds vertical noise to a height field, creating peaks and valleys."], "extent": [130, 204]}, {"type": "para", "indent": 0, "text": ["See also ", {"scheme": "Node", "value": "/nodes/sop/heightfield_distort", "type": "link", "text": ["Height Field Distort"], "fullpath": "/nodes/sop/heightfield_distort"}, ", which adds moves/swirls terrain features across the grid."], "extent": [204, 326]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [326, 338], "body": [{"type": "include_group", "body": [{"ext": "_heightfield_common#noiselayer", "type": "include", "indent": 0, "role": "item", "extent": [338, 385]}], "container": true, "role": "item_group"}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Mask Layer"], "extent": [125, 137], "body": [{"type": "para", "indent": 4, "text": ["If a mask volume is wired into this node\u2019s second input, this specifies which volume in the second input to use to mask this node\u2019s effect, usually ", {"type": "code", "text": ["mask"]}, ". Click the ", {"type": "q", "text": ["Add mask paint"]}, " button to paint the mask directly in the viewport (this automatically adds a paint node to the second input)."], "extent": [161, 460]}], "container": true, "attrs": {"id": "masklayer"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combine with Existing"], "extent": [460, 483], "body": [{"type": "para", "indent": 4, "text": ["How to combine this mask with any existing mask in the input."], "extent": [505, 576]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Replace"], "extent": [576, 589], "body": [{"type": "para", "indent": 8, "text": ["Clear the existing mask and replace it with the new mask."], "extent": [589, 664]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Add"], "extent": [664, 673], "body": [{"type": "para", "indent": 8, "text": ["Add the values in this mask to any existing mask."], "extent": [673, 740]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Subtract"], "extent": [740, 754], "body": [{"type": "para", "indent": 8, "text": ["Subtract the values in this mask from any existing mask."], "extent": [754, 828]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Difference"], "extent": [828, 844], "body": [{"type": "para", "indent": 8, "text": ["Set the mask values to the difference between the old mask and this mask."], "extent": [844, 927]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Multiply"], "extent": [927, 941], "body": [{"type": "para", "indent": 8, "text": ["Multiply the values of the old mask by the values in this mask. This might be useful to ", {"type": "q", "text": ["scale"]}, " existing values while leaving empty areas alone."], "extent": [941, 1095]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Maximum"], "extent": [1095, 1108], "body": [{"type": "para", "indent": 8, "text": ["Set the mask values to the maximum of the old mask and this mask."], "extent": [1108, 1191]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Minimum"], "extent": [1191, 1204], "body": [{"type": "para", "indent": 8, "text": ["Set the mask values to the minimum of the old mask and this mask."], "extent": [1204, 1287]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Blend"], "extent": [1287, 1298], "body": [{"type": "para", "indent": 8, "text": ["Blend the old mask and this mask by a certain amount."], "extent": [1298, 1361]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "combine"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blend"], "extent": [1361, 1368], "body": [{"type": "para", "indent": 4, "text": ["The amount to blend the old mask with what you draw, when ", {"type": "ui", "text": ["Combine with existing"]}, " is ", {"type": "q", "text": ["blend"]}, ". A value of ", {"type": "code", "text": ["0"]}, " leaves the existing mask, a value of ", {"type": "code", "text": ["1"]}, " replaces with the new mask, a value of ", {"type": "code", "text": ["0.5"]}, " blends equally between the old and new mask."], "extent": [1388, 1636]}], "container": true, "attrs": {"id": "blend"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Center Noise"], "extent": [510, 524], "body": [{"type": "para", "indent": 4, "text": ["Offsets the noise so it centers around 0. This is useful for adding noise to terrain. If you are using a Worley (cellular) noise type, you should turn this off."], "extent": [550, 716]}], "container": true, "attrs": {"id": "centernoise"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Amplitude"], "extent": [716, 727], "body": [{"type": "para", "indent": 4, "text": ["Scales the amount of vertical displacement."], "extent": [745, 794]}], "container": true, "attrs": {"id": "amp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Size"], "extent": [794, 808], "body": [{"type": "para", "indent": 4, "text": ["Scales the noise pattern outward across the grid."], "extent": [834, 889]}], "container": true, "attrs": {"id": "elementsize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale"], "extent": [889, 896], "body": [{"type": "para", "indent": 4, "text": ["Scales the displacement in X, Y, and Z. This may be useful to stretch the noise pattern in one direction across the terrain."], "extent": [923, 1057]}], "container": true, "attrs": {"id": "elementscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [1057, 1065], "body": [{"type": "para", "indent": 4, "text": ["Moves the noise pattern across the grid."], "extent": [1086, 1133]}], "container": true, "attrs": {"id": "offset"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Noise settings"], "extent": [1133, 1154], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Noise Type"], "extent": [1154, 1167], "body": [{"type": "para", "indent": 4, "text": ["The type of noise to generate, Different algorithms generate patterns with different characteristics."], "extent": [1187, 1298]}], "container": true, "attrs": {"id": "basis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fractal"], "extent": [1298, 1307], "body": [{"type": "para", "indent": 4, "text": ["Whether to do multiple iterations of smaller noise on top of bigger noise."], "extent": [1329, 1413]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [1413, 1423], "body": [{"type": "para", "indent": 8, "text": ["Does not add any additional noise on top of the basic noise."], "extent": [1423, 1501]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Standard"], "extent": [1501, 1515], "body": [{"type": "para", "indent": 8, "text": ["Adds pseudo-random noise on top of the basic output."], "extent": [1515, 1585]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Terrain"], "extent": [1585, 1598], "body": [{"type": "para", "indent": 8, "text": ["Adds noise like ", {"type": "q", "text": ["standard"]}, " but dampens the noise in the valleys, which generates more realistic-looking terrain."], "extent": [1598, 1720]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hybrid Terrain"], "extent": [1720, 1740], "body": [{"type": "para", "indent": 8, "text": ["Like terrain, but with more sharpness in the valleys. "], "extent": [1740, 1804]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fractal"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Octaves"], "extent": [1804, 1817], "body": [{"type": "para", "indent": 4, "text": ["Limits the fractal noise to a certain number of iterations."], "extent": [1835, 1900]}], "container": true, "attrs": {"id": "oct"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lacunarity"], "extent": [1900, 1912], "body": [{"type": "para", "indent": 4, "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note you can use negative values."], "extent": [1930, 2060]}], "container": true, "attrs": {"id": "lac"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roughness"], "extent": [2060, 2071], "body": [{"type": "para", "indent": 4, "text": ["Fractal roughness. The roughness parameter determines the coarseness of the noise."], "extent": [2091, 2183]}], "container": true, "attrs": {"id": "rough"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flow Rotation"], "extent": [2183, 2198], "body": [{"type": "para", "indent": 4, "text": ["The rotation of the ", {"type": "q", "text": ["swirl"]}, ", from 0 to 1, when ", {"type": "ui", "text": ["Noise Type"]}, " is ", {"type": "q", "text": ["Flow"]}, "."], "extent": [2220, 2302]}, {"type": "para", "indent": 4, "text": ["Because this parameter is fractional and wraps around, if you try to use $F to animate it, it will always look the same. Use something like the time or the frame number divided by the total number of frames instead."], "extent": [2302, 2524]}], "container": true, "attrs": {"id": "flowrot"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Post Processing"], "extent": [2524, 2546], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fold"], "extent": [2546, 2553], "body": [{"type": "para", "indent": 4, "text": ["Only allow absolute values in the noise output."], "extent": [2572, 2629]}], "container": true, "attrs": {"id": "fold"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Complement"], "extent": [2629, 2641], "body": [{"type": "para", "indent": 4, "text": ["Turns the noise upside-down (outputs ", {"type": "code", "text": ["1 - x"]}, " for the noise values)."], "extent": [2666, 2739]}], "container": true, "attrs": {"id": "complement"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gain"], "extent": [2739, 2745], "body": [{"type": "para", "indent": 4, "text": ["Increases or decreases the contrast from 0.5 in the output."], "extent": [2764, 2833]}], "container": true, "attrs": {"id": "gain"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bias"], "extent": [2833, 2839], "body": [{"type": "para", "indent": 4, "text": ["Moves the output down or up toward 0 or 1."], "extent": [2858, 2906]}], "container": true, "attrs": {"id": "bias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clipping Minimum"], "extent": [2906, 2924], "body": [{"type": "para", "indent": 4, "text": ["Clamps any noise value below this. Has the effect of cutting off all elevation changes at a certain minimum height."], "extent": [2946, 3071]}], "container": true, "attrs": {"id": "clipmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clipping Maximum"], "extent": [3071, 3089], "body": [{"type": "para", "indent": 4, "text": ["Clamps any noise value above this. Has the effect of cutting off all elevation changes at a certain maximum height."], "extent": [3111, 3233]}], "container": true, "attrs": {"id": "clipmax"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Distortion"], "extent": [3233, 3250], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Lattice Warp"], "extent": [3250, 3272], "body": [{"type": "para", "indent": 4, "text": ["Adds ", {"type": "q", "text": ["stringiness"]}, " or ", {"type": "q", "text": ["wiriness"]}, " to standard noise."], "extent": [3294, 3351]}], "container": true, "attrs": {"id": "dolwarp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Accumulate Lattice Warp"], "extent": [3351, 3376], "body": [{"type": "para", "indent": 4, "text": ["When lattice warp is on, this accumulates the warp for each iteration (octave) of added fractal noise."], "extent": [3397, 3505]}], "container": true, "attrs": {"id": "accuml"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lattice Warp"], "extent": [3505, 3519], "body": [{"type": "para", "indent": 4, "text": ["How much ", {"type": "q", "text": ["stringiness"]}, " to add to the noise."], "extent": [3538, 3591]}], "container": true, "attrs": {"id": "disp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Freq"], "extent": [3591, 3597], "body": [{"type": "para", "indent": 4, "text": ["The frequency of the ", {"type": "q", "text": ["stringiness"]}, "."], "extent": [3620, 3661]}], "container": true, "attrs": {"id": "dispfreq"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Gradient Warp"], "extent": [3661, 3684], "body": [{"type": "para", "indent": 4, "text": ["Widens the peaks and valleys of the noise."], "extent": [3706, 3758]}], "container": true, "attrs": {"id": "dogwarp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Accumulate Gradient Warp"], "extent": [3758, 3784], "body": [{"type": "para", "indent": 4, "text": ["When Gradient warp is on, this accumulates the warp for each iteration (octave) of added fractal noise."], "extent": [3801, 3910]}], "container": true, "attrs": {"id": "accumg"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gradient Warp"], "extent": [3910, 3925], "body": [{"type": "para", "indent": 4, "text": ["How much to widen the peaks and valleys of the noise."], "extent": [3945, 4005]}], "container": true, "attrs": {"id": "gflow"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4005, 4014], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/heightfield_distort", "type": "link", "text": "", "fullpath": "/nodes/sop/heightfield_distort"}], "extent": [4014, 4048]}], "container": true}], "text": "Related"}], "title": ["HeightField Noise"], "summary": ["Adds vertical noise to a height field, creating peaks and valleys."], "included": ["/nodes/sop/_heightfield_common"]}