{"type": "root", "attrs": {"type": "node", "context": "sop", "namespace": "kinefx", "internal": "rigstashpose", "icon": "SOP/kinefx-rigstashpose", "tags": "character, rigging, pose, stash", "since": "18.5", "version": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Rig Stash Pose"], "extent": [153, 172]}, {"type": "summary", "indent": 0, "text": ["Store a static pose on a skeleton as a matrix point attribute."], "extent": [172, 243]}, {"type": "para", "indent": 0, "text": ["This node allows us to store a pose to a either a static or animated input skeleton as a point attribute for use downstream. You can optionally connect the second input to set this pose."], "extent": [243, 432]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [432, 444], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Settings"], "extent": [444, 460], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Mode"], "extent": [460, 467], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Store"], "extent": [482, 493], "body": [{"type": "para", "indent": 12, "text": ["Store the pose to the point attribute specified by ", {"type": "ui", "text": ["Attribute Name"]}, "."], "extent": [493, 577]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Restore"], "extent": [577, 590], "body": [{"type": "para", "indent": 12, "text": ["Find the point attribute specified by ", {"type": "ui", "text": ["Attribute Name"]}, " and apply this as the current pose on the left-hand input."], "extent": [590, 719]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "mode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Name"], "extent": [719, 735], "body": [{"type": "para", "indent": 4, "text": ["The name of the point attribute that we want to store the transformations in."], "extent": [754, 837]}], "container": true, "attrs": {"id": "attr_name"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clear Existing Attribute"], "extent": [837, 863], "body": [{"type": "para", "indent": 4, "text": ["Clear the existing point attribute before storing the transformations."], "extent": [883, 959]}], "container": true, "attrs": {"id": "attr_clear"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Method"], "extent": [959, 967], "body": [{"type": "para", "indent": 4, "text": ["This parameter sets what should be used as the initial source for the pose - for example, if an imported mocap animation has a t-pose on the first frame, then using the ", {"type": "ui", "text": ["Time Shift"]}, " with ", {"type": "ui", "text": ["Frame"]}, " set to 1 would be a simple way to set the pose. The ", {"type": "ui", "text": ["Stash"]}, " option is destructive, but provides an immediate way of grabbing the current pose on the first input."], "extent": [983, 1351]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Time Shift"], "extent": [1351, 1367], "body": [{"type": "para", "indent": 12, "text": ["Set the initial pose to the one found at the frame specified."], "extent": [1367, 1442]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stash SOP"], "extent": [1442, 1457], "body": [{"type": "para", "indent": 12, "text": ["Set the initial pose to current pose on the first input."], "extent": [1457, 1527]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "method"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Match By Attribute"], "extent": [1527, 1547], "body": [{"type": "para", "indent": 4, "text": ["When storing to pose from the second input this option allows you to match the points up by a given attribute, allowing you to store the pose using a skeleton that may be topologically different to that found on the first input."], "extent": [1573, 1807]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1807, 1817], "body": [{"type": "para", "indent": 8, "text": ["This option will only be available when the second input is connected"], "extent": [1817, 1896]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "matchbyattribute"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute to Match"], "extent": [1896, 1916], "body": [{"type": "para", "indent": 4, "text": ["The attribute to use for matching points between the first and second inputs when ", {"type": "ui", "text": ["Match By Attribute"]}, " is on."], "extent": [1942, 2059]}], "container": true, "attrs": {"id": "attributetomatch"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frame"], "extent": [2059, 2066], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Method"]}, " is set to ", {"type": "ui", "text": ["Time Shift"]}, ", this is the frame that will be stored."], "extent": [2081, 2167]}], "container": true, "attrs": {"id": "frame"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Guide Color"], "extent": [2167, 2180], "body": [{"type": "para", "indent": 4, "text": ["The color of the guide geometry displayed in the viewport."], "extent": [2199, 2263]}], "container": true, "attrs": {"id": "guidecolor"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Post Edit Pose"], "extent": [2263, 2284], "body": [{"type": "para", "indent": 0, "text": ["This multiparm stores any adjustments made to the pose in the viewport."], "extent": [2284, 2358]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Transformations"], "extent": [1182, 1199], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Group"], "extent": [1225, 1236], "body": [{"type": "para", "indent": 8, "text": ["The point group to which this multiparm instance will be applied."], "extent": [1255, 1330]}], "container": true, "attrs": {"id": "group"}}, {"type": "dt", "indent": 4, "text": ["Mode"], "extent": [1330, 1340], "body": [{"type": "para", "indent": 8, "text": ["This parameter specifies how the transformation described by this multiparm instance should be applied to the input."], "extent": [1358, 1484]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Pre-Multiply"], "extent": [1484, 1506], "body": [{"type": "para", "indent": 12, "text": ["The transformation will be applied 'on top' of the input pose, this is analogous to treating any input local transformations as an Object node\u2019s ", {"type": "ui", "text": ["pre-transform"]}, "."], "extent": [1535, 1712]}], "container": true, "attrs": {"id": "premultiply"}}, {"type": "dt", "indent": 8, "text": ["Post-Multiply"], "extent": [1712, 1735], "body": [{"type": "para", "indent": 12, "text": ["The transformation will be applied in between the input point\u2019s parent transform and its local transform. This is analogous to modifying the ", {"type": "ui", "text": ["pre-transform"]}, " of a Object node. This mode is especially useful when we wish to reproportion an animated input using simple translations without compromising any input motion, effectively moving the pivot for the point\u2019s animation."], "extent": [1765, 2154]}], "container": true, "attrs": {"id": "postmultiply"}}, {"type": "dt", "indent": 8, "text": ["Override"], "extent": [2154, 2172], "body": [{"type": "para", "indent": 12, "text": ["The transformation described in this multiparm instance will completely overwrite any input local transforms on the points. This is useful when we wish to 'zero out' any input animation, or when working with the ", {"type": "ui", "text": ["Bake"]}, " options on the Rig Pose node."], "extent": [2198, 2462]}], "container": true, "attrs": {"id": "override"}}, {"type": "dt", "indent": 8, "text": ["From Rest Pose"], "extent": [2462, 2486], "body": [{"type": "para", "indent": 12, "text": ["The transformation will behave just as in the ", {"type": "ui", "text": ["Pre-Multiply"]}, " mode, but any input animation will be replaced be the pose specified in the ", {"type": "ui", "text": ["Rest Pose"]}, " parameter. This is useful when you wish to revert a points transform to a 'rest pose' rather than simply zeroing the local transform as in ", {"type": "ui", "text": ["Override"]}, "."], "extent": [2516, 2835]}], "container": true, "attrs": {"id": "fromrestpose"}}], "container": true}], "container": true, "attrs": {"id": "mode"}}, {"type": "dt", "indent": 4, "text": ["Transform Order"], "extent": [2835, 2856], "body": [{"type": "para", "indent": 8, "text": ["The left menu chooses the order in which transforms are applied\n        (for example, scale, then rotate, then translate). This can change the\n        position and orientation of the object, in the same way that going a\n        block and turning east takes you to a different place than turning east\n        and then going a block."], "extent": [2879, 3220]}, {"type": "para", "indent": 8, "text": ["The right menu chooses the order in which to rotate around the\n        X, Y, and Z axes. Certain orders can make character joint\n        transforms easier to use, depending on the character."], "extent": [3220, 3420]}], "container": true, "attrs": {"id": "transform"}}, {"type": "dt", "indent": 4, "text": ["Translate"], "extent": [3420, 3435], "body": [{"type": "para", "indent": 8, "text": ["Translation along XYZ axes."], "extent": [3458, 3495]}], "container": true, "attrs": {"id": "translate"}}, {"type": "dt", "indent": 4, "text": ["Rotate"], "extent": [3495, 3507], "body": [{"type": "para", "indent": 8, "text": ["Degrees rotation about XYZ axes."], "extent": [3527, 3569]}], "container": true, "attrs": {"id": "rotate"}}, {"type": "dt", "indent": 4, "text": ["Scale"], "extent": [3569, 3580], "body": [{"type": "para", "indent": 8, "text": ["Non-uniform scaling about XYZ axes."], "extent": [3599, 3644]}], "container": true, "attrs": {"id": "scale"}}, {"type": "dt", "indent": 4, "text": ["Pivot"], "extent": [3644, 3655], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Pivot Translate"], "extent": [3674, 3699], "body": [{"type": "para", "indent": 12, "text": ["The pivot translation along XYZ axes."], "extent": [3699, 3750]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Pivot Rotate"], "extent": [3750, 3772], "body": [{"type": "para", "indent": 12, "text": ["The pivot rotation about XYZ axes."], "extent": [3772, 3820]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pivot"}}], "container": true}], "container": true, "attrs": {"id": "transformations"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [2411, 2419], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Skeleton"], "extent": [2419, 2430], "body": [{"type": "para", "indent": 8, "text": ["The skeleton onto which we wish to store the pose."], "extent": [2430, 2490]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Pose Source (Optional)"], "extent": [2490, 2514], "body": [{"type": "para", "indent": 8, "text": ["If connected the pose on the second input will be written to the specified attribute on the first input."], "extent": [2514, 2628]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [2628, 2637], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Skeleton"], "extent": [2637, 2648], "body": [{"type": "para", "indent": 8, "text": ["The first input skeleton with the pose stored to the specified attribute."], "extent": [2648, 2731]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Stashed Pose"], "extent": [2731, 2745], "body": [{"type": "para", "indent": 8, "text": ["The skeleton with the stashed pose applied."], "extent": [2745, 2798]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2798, 2807], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--computerigpose", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--computerigpose"}], "extent": [2807, 2843]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--rigpose", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--rigpose"}], "extent": [2843, 2872]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--rigmatchpose", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--rigmatchpose"}], "extent": [2872, 2906]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--rigmirrorpose", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--rigmirrorpose"}], "extent": [2906, 2941]}], "container": true}], "text": "Related"}], "title": ["Rig Stash Pose"], "summary": ["Store a static pose on a skeleton as a matrix point attribute."], "included": ["/nodes/sop/_kinefx_common"]}