{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "pointdeform", "icon": "SOP/pointdeform", "since": "14.0", "tags": "reshape, model, anim", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Point Deform"], "extent": [0, 17]}, {"type": "summary", "indent": 0, "text": ["Deforms geometry according to an arbitrary connected point mesh."], "extent": [132, 205]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [205, 220], "body": [{"type": "para", "indent": 0, "text": ["This node computes the how a point cloud (the deformation lattice) deforms (compared to its original ", {"type": "q", "text": ["rest"]}, " point positions), and applies those deformations to the input geometry. The node works by having each point on the lattice ", {"type": "q", "text": ["capture"]}, " and influence nearby points on the model. The closer the points, the more influence (computed using the Elendt metaball formula)."], "extent": [220, 593]}, {"type": "para", "indent": 0, "text": ["This allows you to animate proxy geometry and transfer that to a high resolution mesh. In that case, the points of the low res proxy would act as the lattice, capturing and deforming the high resolution geometry."], "extent": [593, 807]}, {"type": "para", "indent": 0, "text": ["The deformation lattice points can be connected by edges. The node uses connected points to find local transforms, allowing accurate transformation of rotating models. This avoids the ", {"type": "q", "text": ["collapsed"]}, " look you might get with from ", {"scheme": "Node", "value": "/nodes/sop/lattice", "type": "link", "text": ["Lattice node\u2019s"], "fullpath": "/nodes/sop/lattice"}, " point mode when the mesh rotates."], "extent": [807, 1102]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips and notes"], "extent": [1102, 1123], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["This node works for cloth- or solid-like models. It does not work for wire models (the transforms become unstable)."], "extent": [1123, 1243]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The connectivity is not limited to polygons or two manifold surfaces, making it useful for use with the constraint networks you get out of Bullet or the grain solver."], "extent": [1243, 1413]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["If you use connected points, the connectivity should be the same in the rest points and the deformed points. Adding/removing edges or changing connections will confuse the node and produce bad results."], "extent": [1413, 1622]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["If an ", {"type": "code", "text": ["id"]}, " attribute is on the rest and deformed points, the node uses it to establish correspondence between rest and deformed points, as well as store capture point numbers."], "extent": [1622, 1801]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"scheme": "Node", "value": "/nodes/sop/deform", "type": "link", "text": ["Bone Deform"], "fullpath": "/nodes/sop/deform"}, ", ", {"scheme": "Node", "value": "/nodes/sop/clothdeform", "type": "link", "text": ["Cloth Deform"], "fullpath": "/nodes/sop/clothdeform"}, ", and ", {"scheme": "Node", "value": "/nodes/sop/lattice", "type": "link", "text": ["Lattice"], "fullpath": "/nodes/sop/lattice"}, " SOPs also capture and deform geometry."], "extent": [1801, 1947]}], "container": true}]}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [1947, 1955], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Mesh to Deform"], "extent": [1955, 1972], "body": [{"type": "para", "indent": 4, "text": ["The model you want to deform according to the movement of points in a point cloud."], "extent": [1972, 2060]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Rest Point Lattice"], "extent": [2060, 2080], "body": [{"type": "para", "indent": 4, "text": ["A copy of the deformation lattice points, with the points in their original, starting positions. The node uses the difference between this and the ", {"type": "q", "text": ["current"]}, " version of the lattice in the third input to know how the lattice is deforming."], "extent": [2080, 2322]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Deformed Point Lattice"], "extent": [2322, 2346], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "q", "text": ["current"]}, " version of the deformation lattice points. The node compares the point positions in this geometry to their positions in the ", {"type": "q", "text": ["rest"]}, " geometry in the second input to know how the lattice is deforming."], "extent": [2346, 2564]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2564, 2576], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [2576, 2584], "body": [{"type": "para", "indent": 4, "text": ["Which points of the model (the first input) to capture and deform using the lattice. Leave this blank to deform all points in the first input. Click the ", {"scheme": "Icon", "value": "BUTTONS/reselect", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/reselect"}, " Reselect button to the right to interactively select the points in the viewer."], "extent": [2584, 2845]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mode"], "extent": [2845, 2851], "body": [{"type": "para", "indent": 4, "text": ["Normal operation of this node is to both ", {"type": "em", "text": ["capture points"]}, " and ", {"type": "em", "text": ["deform"]}, ". However, you can use this parameter to have the node only perform one of those operations. There is no speed difference to using one node to do both, or two nodes to do the two steps separately. The only reason you might want to change this is if you have a technical workflow where you want to use the capture information in another node before doing the deformation for some reason."], "extent": [2851, 3313]}, {"type": "para", "indent": 4, "text": ["Note that the capture attributes are included in the output if you turn off ", {"type": "ui", "text": ["Delete Capture Attributes"]}, ", so you don\u2019t need to use separate nodes if all you want is to use the capture attributes downstream."], "extent": [3313, 3527]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Capture "], "extent": [3527, 3543]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Radius"], "extent": [3543, 3552], "body": [{"type": "para", "indent": 4, "text": ["The maximum distance (in Houdini world units) away from each model point to look for nearby lattice points."], "extent": [3552, 3665]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Minimum Points"], "extent": [3665, 3681], "body": [{"type": "para", "indent": 4, "text": ["If a point on the model is captured by fewer lattice points that this, the search radius is increased until the point is captured by at least this many lattice points. This will"], "extent": [3681, 3863], "body": [{"type": "para", "indent": 8, "text": ["cause discontinuities in output, but this is usually better than leaving points behind."], "extent": [3863, 3960]}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Maximum Points"], "extent": [3960, 3976], "body": [{"type": "para", "indent": 4, "text": ["The maximum number of lattice points each point on the model can be captured by. If more than this number of points is within the ", {"type": "ui", "text": ["Radius"]}, ", only the closest points are used. The lower this number, the faster the node and the less memory it uses, but the greater chance of discontinuities in the output."], "extent": [3976, 4286]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Piece Attribute"], "extent": [4286, 4303], "body": [{"type": "para", "indent": 4, "text": ["The name of a string or integer point attribute to use to treat the geometry as separate pieces. The attribute must be present on both the mesh and rest lattice. Points with the same value in this attribute are considered part of the same ", {"type": "q", "text": ["piece"]}, ". When you specify a valid piece attribute, this node deforms each piece using only the lattice points with the same piece value."], "extent": [4303, 4684]}, {"type": "para", "indent": 4, "text": ["This lets you deform independent objects (pieces) in a single pass. You can create a piece attribute based on connectivity with the ", {"scheme": "Node", "value": "/nodes/sop/connectivity", "type": "link", "text": ["Connectivity SOP"], "fullpath": "/nodes/sop/connectivity"}, "."], "extent": [4684, 4867]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [4867, 4876], "body": [{"type": "para", "indent": 8, "text": ["Animating the switch between deforming geometry together and as separate pieces can create a tearing-metal effect."], "extent": [4876, 5000]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pre-Separate Pieces"], "extent": [5000, 5021], "body": [{"type": "para", "indent": 4, "text": ["Virtually move pieces apart (to ensure they don\u2019t overlap) before capturing. This can greatly reduce the cost of capturing if many pieces are close together."], "extent": [5021, 5185]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Deform "], "extent": [5185, 5200]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Rigid Projection"], "extent": [5200, 5219], "body": [{"type": "para", "indent": 4, "text": ["The computed local transforms may include a shear. This removes any shear, leaving only a rigid transform. You can try turning this parameter off or on to see how it affects the look of the deformation. Default is on."], "extent": [5219, 5442]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Recompute Affected Normals"], "extent": [5442, 5470], "body": [{"type": "para", "indent": 8, "text": ["Recomputes any normals that are affected by polygons with both deformed and undeformed points. This only matters if you are deforming some points and not others. If you are deforming the whole geometry (or whole pieces), this has no effect, since the normals are transformed."], "extent": [5470, 5755]}, {"type": "para", "indent": 4, "text": ["If ", {"type": "code", "text": ["P"]}, " (point position) is not in the ", {"type": "ui", "text": ["Attributes to Transform"]}, " below, this has no effect."], "extent": [5755, 5853]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attributes to Transform"], "extent": [5853, 5878], "body": [{"type": "para", "indent": 4, "text": ["A space-separated list of attribute names/patterns, specifying which attributes are transformed by the deformation. The default is ", {"type": "code", "text": ["*"]}, ", meaning all attributes. The node modifies vector attributes according to their type info, as points, vectors, or normals."], "extent": [5878, 6141], "body": [{"type": "para", "indent": 8, "text": ["If this list includes/matches ", {"type": "code", "text": ["P"]}, ", the node will also rotate primitive transforms."], "extent": [6141, 6233]}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [6233, 6243], "body": [{"type": "para", "indent": 8, "text": ["The node always modifies ", {"type": "code", "text": ["P"]}, ", regardless of whether it is in this list."], "extent": [6243, 6324]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Delete Capture Attributes"], "extent": [6324, 6351], "body": [{"type": "para", "indent": 4, "text": ["Don\u2019t include the attributes this node uses internally to track point capture in the output. You should leave this on unless you need the capture information for something else, since turning it off increases geometry size/memory use."], "extent": [6351, 6592]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [6592, 6601], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/deform", "type": "link", "text": "", "fullpath": "/nodes/sop/deform"}], "extent": [6601, 6622]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/clothdeform", "type": "link", "text": "", "fullpath": "/nodes/sop/clothdeform"}], "extent": [6622, 6647]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/lattice", "type": "link", "text": "", "fullpath": "/nodes/sop/lattice"}], "extent": [6647, 6668]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/bulge", "type": "link", "text": "", "fullpath": "/nodes/sop/bulge"}], "extent": [6668, 6687]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/magnet", "type": "link", "text": "", "fullpath": "/nodes/sop/magnet"}], "extent": [6687, 6708]}], "container": true}], "text": "Related"}], "title": ["Point Deform"], "summary": ["Deforms geometry according to an arbitrary connected point mesh."]}