{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "fuse", "icon": "SOP/fuse", "tags": "topology, points", "version": "2.0", "since": "17.5", "verb_since": "17.5", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Fuse"], "extent": [0, 9]}, {"type": "summary", "indent": 0, "text": ["Merges or snaps points."], "extent": [138, 169]}, {"type": "para", "indent": 0, "text": ["The Fuse SOP is used to snap points together or snap points to a 3D grid, and optionally fusing points after the snap."], "extent": [169, 289]}, {"type": "para", "indent": 0, "text": ["To restrict the points that can fuse and be fused to, points can be query points, or target points, or both. With only one input to the node, both query and target points are from the single input. However, with a second input to the node, only points in the first input can be query points and only points in the second input can be target points."], "extent": [289, 639]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [639, 644], "body": [{"type": "para", "indent": 4, "text": ["When fusing multiple line primitives into a single line, they will still maintain separate primitives. If you wish to make the result into a single primitive, append the ", {"scheme": "Node", "value": "/nodes/sop/join", "type": "link", "text": "", "fullpath": "/nodes/sop/join"}, " SOP with ", {"type": "code", "text": ["Only Connected"]}, " enabled."], "extent": [644, 870]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["You can snap points based on their proximity to each other (given by the distance threshold) without fusing them. The snap type has more options on the actual snap behavior. This method is commonly used on a small selection of points in classic modeling operations."], "extent": [870, 1137]}, {"type": "para", "indent": 0, "text": ["Snapping to a grid is useful for grabbing points and ordering them to a 3D grid. This method is commonly used on individual point selections in classic modeling operations. Snapping to a grid is also useful when outputting to low res consoles as you can truncate vertices to lie on a certain integer boundaries globally on the model."], "extent": [1137, 1472]}, {"type": "para", "indent": 0, "text": ["Snapping only moves points to new positions. To rewire the vertices of points that were snapped together, you can choose to fuse points after snapping so that only one point retains vertices from the original points."], "extent": [1472, 1690]}, {"type": "para", "indent": 0, "text": ["You can select point attributes and groups that you want to be modified after a point is snapped. You can also specify the heuristics for how the attributes values should be interpolated and how group membership should be assigned."], "extent": [1690, 1924]}, {"level": 2, "id": "fuse", "container": true, "type": "h", "indent": 0, "text": ["Fuse shelf tool"], "extent": [1924, 1953], "body": [{"type": "summary", "indent": 0, "text": ["Welds the selected points together so all vertices inside now share the same point."], "extent": [1953, 2045]}, {"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Select the points you want to merge."], "extent": [2045, 2085]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Click the ", {"scheme": "Icon", "value": "SOP/fuse", "type": "link", "text": "", "fullpath": "/nodes/sop/SOP/fuse"}, " Fuse tool on the ", {"type": "ui", "text": ["Polygon"]}, " tab."], "extent": [2085, 2148]}], "container": true}, {"type": "para", "indent": 0, "text": ["The merge is based on the proximity of the points to each other. You can change the threshold distance in the ", {"scheme": null, "value": "/ref/panes/parms", "type": "link", "text": ["parameter editor"], "fullpath": "/ref/panes/parms"}, "."], "extent": [2148, 2296]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/shelf/fuse_before.jpg", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/shelf/fuse_after.jpg", "type": "img", "text": ""}], "extent": [2296, 2373]}]}, {"level": 2, "id": "snap", "container": true, "type": "h", "indent": 0, "text": ["Snap shelf tool"], "extent": [2373, 2402], "body": [{"type": "summary", "indent": 0, "text": ["Snaps selected points to the same position but keeps them separate."], "extent": [2402, 2478]}, {"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Select the points you want to snap to the same position."], "extent": [2478, 2538]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Click the ", {"scheme": "Icon", "value": "SOP/fuse", "type": "link", "text": "", "fullpath": "/nodes/sop/SOP/fuse"}, " Snap tool on the ", {"type": "ui", "text": ["Polygon"]}, " tab."], "extent": [2538, 2601]}], "container": true}, {"type": "para", "indent": 0, "text": ["Snapping is based on the proximity of the points to each other. You can change the threshold distance in the ", {"scheme": null, "value": "/ref/panes/parms", "type": "link", "text": ["parameter editor"], "fullpath": "/ref/panes/parms"}, "."], "extent": [2601, 2749]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2749, 2761], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [2761, 2769], "body": [{"type": "para", "indent": 4, "text": ["Subset of points that will be snapped."], "extent": [2790, 2834]}], "container": true, "attrs": {"id": "querygroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Target Group"], "extent": [2834, 2848], "body": [{"type": "para", "indent": 4, "text": ["When enabled, this is the subset of points that will be snapped to\n    by query points. Otherwise, the query group is also the target group,\n    and the behavior is as if ", {"type": "ui", "text": ["Modify Target"]}, " is on, regardless of its\n    actual value.\n    When there is a second input connected, this group refers to the\n    second input. When ", {"type": "ui", "text": ["Snap Type"]}, " is ", {"type": "q", "text": ["Grid"]}, ", there is no target group."], "extent": [2870, 3250]}], "container": true, "attrs": {"id": "targetgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Modify Target"], "extent": [3250, 3265], "body": [{"type": "para", "indent": 4, "text": ["When disabled, target point attribute values will stay fixed and be\n    copied over to query points, which is useful for fusing to existing\n    geometry.\n    When enabled, both query and target point attributes will be modified\n    and used to interpolate the new attribute value. This is useful if\n    you still want only one subset of points to fuse with another subset,\n    but so that both subsets can be modified (for example, when snapping\n    two mirrored halves together).\n    This parameter is not applicable when a second input is connected,\n    since that geometry cannot be modified."], "extent": [3286, 3887]}], "container": true, "attrs": {"id": "modifyboth"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Position Attribute"], "extent": [3887, 3907], "body": [{"type": "para", "indent": 4, "text": ["This attribute will be used as the position for determining what to\n    snap where.  This attribute can be a point, vertex, or primitive\n    attribute in the first input, and can be a point, vertex, primitive,\n    or detail attribute in the second input; they do not need to be the\n    same.  The ", {"type": "ui", "text": ["Group"]}, " and ", {"type": "ui", "text": ["Target Group"]}, " parameters will be parsed\n    as the corresponding type of group.  If this attribute is not a point\n    attribute in the first input, the Fuse options do not apply, because\n    only points can be fused together."], "extent": [3927, 4472]}], "container": true, "attrs": {"id": "posattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Snap To"], "extent": [4472, 4481], "body": [{"type": "para", "indent": 4, "text": ["The method used to which points to snap where. The ", {"type": "q", "text": ["Points"]}, " snap\n    type snaps points within the tolerance together. The ", {"type": "q", "text": ["Grid"]}, " snap type\n    snaps to points in a 3D grid."], "extent": [4500, 4678]}], "container": true, "attrs": {"id": "snaptype"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Points"], "extent": [4678, 4693], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Using"], "extent": [4693, 4701], "body": [{"type": "para", "indent": 4, "text": ["The overall method used for determining which points to snap together.\n    The ", {"type": "q", "text": ["Least Target Point Number"]}, " method snaps points to the lowest\n    target point number in range, which can ensure that after snapping,\n    if ", {"type": "ui", "text": ["Output Positions"]}, " is ", {"type": "q", "text": ["Least Point Number"]}, ", no differently\n    snapped points will be within ", {"type": "ui", "text": ["Snap Distance"]}, " of each other.\n    The ", {"type": "q", "text": ["Closest Target Point"]}, " method snaps points to the closest\n    target point, if it is in range, which is preferable if snapping\n    disjoint pieces together."], "extent": [4721, 5239]}], "container": true, "attrs": {"id": "algorithm"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Snap Distance"], "extent": [5239, 5254], "body": [{"type": "para", "indent": 4, "text": ["The maximum distance to snap points together."], "extent": [5270, 5321]}], "container": true, "attrs": {"id": "tol3d"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Positions"], "extent": [5321, 5339], "body": [{"type": "para", "indent": 4, "text": ["The method to use to combine values of ", {"type": "ui", "text": ["Position Attribute"]}, "\n    when snapping points together."], "extent": [5368, 5470]}], "container": true, "attrs": {"id": "positionsnapmethod"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Radius Attribute"], "extent": [5470, 5488], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the point attribute with this name is used to specify\n    the radii of the points. Two points will be able to fuse together\n    if the closest distance between their spheres with\n    the corresponding radius is within the ", {"type": "ui", "text": ["Snap Distance"]}, "."], "extent": [5511, 5771]}], "container": true, "attrs": {"id": "radiusattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Match Attribute"], "extent": [5771, 5788], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the point attribute with this name is used to limit\n    which points can be snapped together by comparing this attribute\u2019s\n    values for the corresponding points.  The comparison is specified\n    by the ", {"type": "ui", "text": ["Match Type"]}, ".  This attribute can only be an integer or\n    string attribute."], "extent": [5810, 6113]}], "container": true, "attrs": {"id": "matchattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Match Condition"], "extent": [6113, 6130], "body": [{"type": "para", "indent": 4, "text": ["The comparison to use for comparing the ", {"type": "ui", "text": ["Match Attribute"]}, " values of points.\n    ", {"type": "q", "text": ["Equal Attribute Values"]}, " requires values of ", {"type": "ui", "text": ["Match Attribute"]}, " to be equal in order for\n    points to be considered for snapping together, which is useful for snapping within\n    several separate pieces and not between pieces.  ", {"type": "q", "text": ["Unequal Attribute Values"]}, " requires that\n    at least one point has a different value than the rest, which is useful for snapping\n    between several separate pieces and not within pieces."], "extent": [6150, 6656]}], "container": true, "attrs": {"id": "matchtype"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Grid"], "extent": [6656, 6669], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Grid Type"], "extent": [6669, 6681], "body": [{"type": "para", "indent": 4, "text": ["How to specify the grid size."], "extent": [6700, 6735]}], "container": true, "attrs": {"id": "gridtype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Spacing"], "extent": [6735, 6749], "body": [{"type": "para", "indent": 4, "text": ["The number of units between each grid line"], "extent": [6771, 6819]}], "container": true, "attrs": {"id": "gridspacing"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Lines"], "extent": [6819, 6831], "body": [{"type": "para", "indent": 4, "text": ["The number of grid lines every unit"], "extent": [6851, 6892]}], "container": true, "attrs": {"id": "gridlines"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Power 2"], "extent": [6892, 6906], "body": [{"type": "para", "indent": 4, "text": ["The same as gridlines, but a power of two is specified. This\n    means a value of 7 means 128, and 9 means 512."], "extent": [6925, 7042]}], "container": true, "attrs": {"id": "gridpow2"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Offset"], "extent": [7042, 7055], "body": [{"type": "para", "indent": 4, "text": ["A number from 0 to 1 which specifies what offset the grid\n    should have from (0,0,0)."], "extent": [7076, 7169]}], "container": true, "attrs": {"id": "gridoffset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Rounding"], "extent": [7169, 7184], "body": [{"type": "para", "indent": 4, "text": ["Which way points should snap to the grid."], "extent": [7204, 7251]}], "container": true, "attrs": {"id": "gridround"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Tolerance"], "extent": [7251, 7267], "body": [{"type": "para", "indent": 4, "text": ["Maximum distance to move points to grid"], "extent": [7285, 7335]}], "container": true, "attrs": {"id": "gridtol"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Fuse"], "extent": [7335, 7346], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fuse Snapped Points"], "extent": [7346, 7368], "body": [{"type": "para", "indent": 4, "text": ["When enabled, points that are snapped to the same position will be replaced\n    with a single point, connected to all vertices of the original points."], "extent": [7403, 7559]}], "container": true, "attrs": {"id": "consolidatesnappedpoints"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Fused Points"], "extent": [7559, 7578], "body": [{"type": "para", "indent": 4, "text": ["When enabled, points that would otherwise be deleted by the\n    ", {"type": "ui", "text": ["Fuse Snapped Points"]}, " option are kept."], "extent": [7611, 7721]}], "container": true, "attrs": {"id": "keepconsolidatedpoints"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remove Repeated Vertices and Degenerate Primitives"], "extent": [7721, 7773], "body": [{"type": "para", "indent": 4, "text": ["Remove sequential vertices that reference the same point in polygons or\n    curves, and then deletes any degenerate primitives, such as closed polygons\n    with 2 or fewer vertices, or polygon curves with 1 or fewer vertices."], "extent": [7792, 8023]}], "container": true, "attrs": {"id": "deldegen"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remove Unused Points from Degenerate Primitives"], "extent": [8023, 8072], "body": [{"type": "para", "indent": 4, "text": ["Remove any points that no longer have vertices connected to them\n    due to the deletion of degenerate primitives."], "extent": [8097, 8217]}], "container": true, "attrs": {"id": "deldegenpoints"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remove All Unused Points"], "extent": [8217, 8243], "body": [{"type": "para", "indent": 4, "text": ["Remove all points that have no vertices connected to them."], "extent": [8269, 8334]}], "container": true, "attrs": {"id": "delunusedpoints"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Output Attributes and Groups"], "extent": [8334, 8369], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Recompute Affected Normals"], "extent": [8369, 8398], "body": [{"type": "para", "indent": 4, "text": ["Recomputes any normals that are affected by polygons that use any\n    fused points."], "extent": [8421, 8510]}], "container": true, "attrs": {"id": "recomputenml"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Snapped Points Group"], "extent": [8510, 8532], "body": [{"type": "para", "indent": 4, "text": ["When enabled, a point group with this name is created containing all\n    points that snapped to another point."], "extent": [8559, 8675]}], "container": true, "attrs": {"id": "snappedgroupname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Snapped Destination Attribute"], "extent": [8675, 8706], "body": [{"type": "para", "indent": 4, "text": ["When enabled, a point attribute with this name is created, which\n    contains the point number of the point that was snapped to, or -1\n    if not applicable."], "extent": [8734, 8897]}], "container": true, "attrs": {"id": "snappedattribname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attributes to Snap"], "extent": [8897, 8917], "body": [{"type": "para", "indent": 4, "text": ["The number of patterns of attributes to be modified."], "extent": [8943, 9001]}], "container": true, "attrs": {"id": "numpointattribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Values"], "extent": [9001, 9016], "body": [{"type": "para", "indent": 4, "text": ["The heuristic to use to determine the new attribute value of a point\n    based on the points that it snapped to. These interpolate over only\n    target points, unless ", {"type": "ui", "text": ["Modify Target"]}, " is enabled.\n    ", {"type": "q", "text": ["First Match"]}, " will snap to the attribute value of the point with\n    the least point number. Likewise, ", {"type": "q", "text": ["Last Match"]}, " will snap to the point\n    with the greatest number. "], "extent": [9016, 9396]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Attributes"], "extent": [9396, 9414], "body": [{"type": "para", "indent": 4, "text": ["The point attributes that you want to be merged together after fusing.\n    Only certain types of attributes can be used for each ", {"type": "ui", "text": ["Snap Method"]}, "."], "extent": [9414, 9565]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Groups to Snap"], "extent": [9565, 9581], "body": [{"type": "para", "indent": 4, "text": ["The number of patterns of groups to be modified."], "extent": [9601, 9655]}], "container": true, "attrs": {"id": "numgroups"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group Propagation"], "extent": [9655, 9674], "body": [{"type": "para", "indent": 4, "text": ["The heuristic to use to determine how the points get assigned to the\n    Point Groups of the points they snapped to."], "extent": [9674, 9796]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Group Names"], "extent": [9796, 9815], "body": [{"type": "para", "indent": 4, "text": ["The names of the point groups that you want to be updated after\n    fusing according to the ", {"type": "ui", "text": ["Group Propagation"]}, "."], "extent": [9815, 9935]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [9935, 9944], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/pointweld", "type": "link", "text": "", "fullpath": "/nodes/sop/pointweld"}], "extent": [9944, 9968]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/facet", "type": "link", "text": "", "fullpath": "/nodes/sop/facet"}], "extent": [9968, 9987]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/uvfuse", "type": "link", "text": "", "fullpath": "/nodes/sop/uvfuse"}], "extent": [9987, 10007]}], "container": true}], "text": "Related"}], "title": ["Fuse"], "summary": ["Merges or snaps points."]}