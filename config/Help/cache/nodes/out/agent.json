{"type": "root", "attrs": {"type": "node", "context": "out", "internal": "agent", "icon": "CROWDS/agent", "since": "14.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Agent"], "extent": [77, 87]}, {"type": "summary", "indent": 0, "text": ["This output operator is used to write agent definition files."], "extent": [87, 157]}, {"type": "para", "indent": 0, "text": ["This output operator is used to write files that define an agent. The created\nfiles can then be loaded in by the ", {"scheme": "Node", "value": "/nodes/sop/agent", "type": "link", "text": "", "fullpath": "/nodes/sop/agent"}, " geometry node to create\nagent primitives for crowds."], "extent": [157, 341]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [341, 347], "body": [{"type": "para", "indent": 4, "text": ["Agent primitives currently only support deforming point normals and not\n    vertex normals. When the deforming geometry is written out, vertex normals\n    will be automatically promoted to point normals as a result."], "extent": [347, 568]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [568, 580], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Render"], "extent": [515, 527], "body": [{"type": "para", "indent": 8, "text": ["Begins the render with the last render control settings."], "extent": [549, 614]}], "container": true, "attrs": {"id": "execute"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Controls\u2026"], "extent": [614, 631], "body": [{"type": "para", "indent": 8, "text": ["Opens the render control dialog to allow adjustments of the\n        render parameters before rendering."], "extent": [658, 771]}], "container": true, "attrs": {"id": "renderdialog"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Valid Frame Range"], "extent": [622, 641], "body": [{"type": "para", "indent": 4, "text": ["What frames to render."], "extent": [641, 669]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Render Current Frame"], "extent": [669, 695], "body": [{"type": "para", "indent": 8, "text": ["Allow the baking any and all frames."], "extent": [695, 749]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Render Frame Range"], "extent": [749, 773], "body": [{"type": "para", "indent": 8, "text": ["Only bake the frames in the range set below, but allow the baking other\n        frames if they are referenced by in-range frames."], "extent": [773, 920]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Render Frame Range Only (Strict)"], "extent": [920, 958], "body": [{"type": "para", "indent": 8, "text": ["Only bake the frames in the range set below, and don\u2019t allow baking of\n        other frames, even if they are referenced by in-range frames."], "extent": [958, 1108]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start/End/Inc"], "extent": [1108, 1123], "body": [{"type": "para", "indent": 4, "text": ["The range of frames for the clip (start frame, end frame, and\n    increment), inclusive."], "extent": [1123, 1221]}, {"type": "para", "indent": 4, "text": ["All values may be decimal (for example, start on frame 1.5).. "], "extent": [1221, 1289]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Render with Take"], "extent": [1289, 1307], "body": [{"type": "para", "indent": 4, "text": ["Uses the settings in a particular take while rendering. Choose\n    ", {"type": "ui", "text": ["Current"]}, " to use the current take when rendering."], "extent": [1307, 1431]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Source"], "extent": [1431, 1439], "body": [{"type": "para", "indent": 4, "text": ["Specifies the source of the agent definition that will be written to disk."], "extent": [1439, 1519]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Character Rig"], "extent": [1519, 1538], "body": [{"type": "para", "indent": 8, "text": ["Generate an agent definition from a character rig in the scene."], "extent": [1538, 1611]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Agent Primitive"], "extent": [1611, 1632], "body": [{"type": "para", "indent": 8, "text": ["Use the agent definition from an existing agent primitive."], "extent": [1632, 1700]}], "container": true}, {"type": "dt", "indent": 4, "text": ["FBX"], "extent": [1700, 1709], "body": [{"type": "para", "indent": 8, "text": ["Generate an agent definition from an FBX file containing a character."], "extent": [1709, 1788]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Character Rig"], "extent": [4429, 4445], "body": [{"type": "para", "indent": 4, "text": ["Path to the object subnetwork containing the character rig."], "extent": [4469, 4534]}], "container": true, "attrs": {"id": "objsubnet"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Traverse Outputs"], "extent": [4534, 4552], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the ", {"type": "ui", "text": ["Character Rig"]}, " path is used to specify which nodes to import by traversing its outputs instead of its children."], "extent": [4577, 4715]}], "container": true, "attrs": {"id": "traverseoutputs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pattern"], "extent": [4715, 4724], "body": [{"type": "para", "indent": 4, "text": ["Pattern used to limit which nodes should be imported. Patterns using usual\n    ", {"scheme": "Cmd", "value": "/commands/opglob", "type": "link", "text": ["opglob"], "fallback_text": "opglob", "fullpath": "/commands/opglob"}, " syntax along with\n    ", {"scheme": null, "value": "/ref/panes/bundles", "type": "link", "text": [{"type": "code", "text": ["@", {"type": "var", "text": ["bundle"]}]}, " references"], "fullpath": "/ref/panes/bundles"}, " are accepted."], "extent": [4744, 4930]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4930, 4940], "body": [{"type": "para", "indent": 8, "text": ["Relative paths specified here are relative to this node, not to the\n        ", {"type": "ui", "text": ["Character Rig"]}, "."], "extent": [4940, 5044]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "objpattern"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [5044, 5050], "body": [{"type": "para", "indent": 4, "text": ["Optional mask to further restrict which ", {"scheme": null, "value": "/nodes/obj/index", "type": "link", "text": ["object node types"], "fullpath": "/nodes/obj/index"}, "  will be imported.\n    Disable the toggles to prevent baking particular types."], "extent": [5067, 5228]}], "container": true, "attrs": {"id": "objtype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SOP Path"], "extent": [1942, 1952], "body": [{"type": "para", "indent": 4, "text": ["Specifies a SOP network that contains an agent primitive."], "extent": [1952, 2015]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["FBX File"], "extent": [11870, 11881], "body": [{"type": "para", "indent": 4, "text": ["Filename of the FBX file to generate agents from."], "extent": [11898, 11953]}], "container": true, "attrs": {"id": "fbxfile"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Import Principled Shader Values"], "extent": [11953, 11986], "body": [{"type": "para", "indent": 4, "text": ["When enabled, create ", {"type": "code", "text": ["material_override"]}, " attribute inside the shape\n    geometry which imports the material values from the FBX that are suitable\n    for use with Houdini\u2019s ", {"scheme": "Node", "value": "/nodes/vop/principledshader", "type": "link", "text": "", "fullpath": "/nodes/vop/principledshader"}, " material."], "extent": [12011, 12227]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [12227, 12237], "body": [{"type": "para", "indent": 8, "text": ["In order to get accurate texture paths, this causes the FBX file to be\n        imported with ", {"type": "q", "text": ["Extract Embedded Data"]}, " enabled, which will cause ", {"type": "code", "text": [".fbm"]}, "\n        directories on disk to be created with the textures extracted within\n        them."], "extent": [12237, 12487]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "importmaterials"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Convert Units"], "extent": [12487, 12502], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether to convert to Houdini units when importing the FBX file."], "extent": [12524, 12604]}], "container": true, "attrs": {"id": "convertunits"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Minimal Nodes"], "extent": [5228, 5243], "body": [{"type": "para", "indent": 4, "text": ["Only import objects whose display flags are on. If you turn this off, ", {"type": "em", "text": ["all"]}, "\n    nodes in the character rig are imported into the animation clip."], "extent": [5270, 5420]}], "container": true, "attrs": {"id": "minimalnodes"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Transforms for Deforming Shapes"], "extent": [5420, 5458], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Minimal Nodes"]}, " is enabled, specifies whether nodes containing deforming geometry are included in the agent\u2019s rig and clips."], "extent": [5493, 5630]}], "container": true, "attrs": {"id": "keepdeformingshapexforms"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Convert to Polygon Soups"], "extent": [5652, 5679], "body": [{"type": "para", "indent": 4, "text": ["Combine polygon primitives into ", {"scheme": "Node", "value": "/nodes/sop/polysoup", "type": "link", "text": ["polygon soup primitives"], "fullpath": "/nodes/sop/polysoup"}, " when creating the shape library.\n    This can reduce memory usage, particularly when rendering with Mantra."], "extent": [5712, 5901]}], "container": true, "attrs": {"id": "converttopolysoups"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Load as Polygon Soups"], "extent": [12720, 12744], "body": [{"type": "para", "indent": 4, "text": ["Create ", {"scheme": "Node", "value": "/nodes/sop/polysoup", "type": "link", "text": ["polygon soup primitives"], "fullpath": "/nodes/sop/polysoup"}, " instead of polygon primitives when loading geometry from the FBX file.\n    This can reduce memory usage, particularly when rendering with Mantra."], "extent": [12770, 12972]}], "container": true, "attrs": {"id": "loadaspolysoups"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Include Unused Capture Regions"], "extent": [12972, 13004], "body": [{"type": "para", "indent": 4, "text": ["When importing a skinned mesh, additional capture regions with identity transforms are added to the ", {"type": "code", "text": ["boneCapture"]}, " attribute for the ancestor joints of any captured joints.\n    It is recommended to only enable this option for compatibility with older scene files, as it can introduce issues with unpacking or merging the rest geometry of multiple skinned shapes."], "extent": [13035, 13402]}], "container": true, "attrs": {"id": "includeunusedregions"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Layer Name"], "extent": [5916, 5929], "body": [{"type": "para", "indent": 4, "text": ["The default layer for the agent, created using the display flags of the\n    objects.  Every agent must have at least one layer."], "extent": [5953, 6086]}], "container": true, "attrs": {"id": "layername"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bounds Scale"], "extent": [6086, 6100], "body": [{"type": "para", "indent": 4, "text": ["Specifies a scale for the bounding box of each shape in the default layer.\n    See the ", {"scheme": null, "value": "/crowds/agents#boundingbox", "type": "link", "text": ["Agent Primitive help page"], "fullpath": "/crowds/agents#boundingbox", "fragment": "#boundingbox"}, " for more information on how an agent\u2019s bounding box is computed."], "extent": [6131, 6343]}], "container": true, "attrs": {"id": "layerboundsscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Generate Collision Layer"], "extent": [6343, 6369], "body": [{"type": "para", "indent": 4, "text": ["Generate a collision layer from geometry containing capture/deform weights.\n    This generates capture region primitives and assigns them to the\n    corresponding bones in the rig."], "extent": [6401, 6587]}], "container": true, "attrs": {"id": "generatecollision"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Collision Layer Name"], "extent": [6587, 6609], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Generate Collision Layer"]}, " is on, the name of the collision layer."], "extent": [6637, 6716]}], "container": true, "attrs": {"id": "collisionname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clip Name"], "extent": [6729, 6741], "body": [{"type": "para", "indent": 4, "text": ["Name of the baked out clip (agent animation).\n    The animation is taken from the current scene."], "extent": [6764, 6866]}], "container": true, "attrs": {"id": "clipname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clip Name"], "extent": [13602, 13614], "body": [{"type": "para", "indent": 4, "text": ["Specifies the names of the animation clip(s). A clip is created for each take in the FBX file.\n    The ", {"type": "code", "text": ["${FBX_TAKE_NAME}"]}, " and ", {"type": "code", "text": ["${FBX_TAKE_INDEX}"]}, " local variables can be used to generate clip names based on the take name and index from the FBX file."], "extent": [13636, 13890]}], "container": true, "attrs": {"id": "fbxclipname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Override Sample Rate"], "extent": [13890, 13912], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether to use the value of the ", {"type": "ui", "text": ["Sample Rate"]}, " parameter instead of the sample rate stored in the FBX file.\n    This is useful if the application that exported the original FBX file did not set the sample rate correctly."], "extent": [13944, 14181]}], "container": true, "attrs": {"id": "fbxoverridesamplerate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sample Rate"], "extent": [14181, 14194], "body": [{"type": "para", "indent": 4, "text": ["Sample rate to use for the clip when ", {"type": "ui", "text": ["Override Sample Rate"]}, " is enabled."], "extent": [14218, 14297]}], "container": true, "attrs": {"id": "fbxsamplerate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Additional Channels"], "extent": [6866, 6887], "body": [{"type": "para", "indent": 4, "text": ["Adds channels from the specified CHOP node to the agent\u2019s clip."], "extent": [6906, 6975]}], "container": true, "attrs": {"id": "choppath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shift Clip to Frame 1"], "extent": [7271, 7294], "body": [{"type": "para", "indent": 4, "text": ["Shift output clips from the specified frame range to start at frame 1."], "extent": [7315, 7391]}], "container": true, "attrs": {"id": "shiftstart"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Locomotion Joint"], "extent": [7410, 7436], "body": [{"type": "para", "indent": 4, "text": ["When enabled, this will create an extra joint named ", {"type": "code", "text": ["__locomotion__"]}, " which\n    serves as a placeholder for factored out locomotion animation when\n    ", {"type": "ui", "text": ["Convert to In-Place Animation"]}, " is enabled."], "extent": [7468, 7669]}], "container": true, "attrs": {"id": "createlocomotionjoint"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Convert to In-Place Animation"], "extent": [7669, 7700], "body": [{"type": "para", "indent": 4, "text": ["Convert a moving character animation to an in-place clip, by subtracting\n    the positions of the ", {"type": "ui", "text": ["Locomotion Node"]}, " (relative to the origin or where\n    it was on the first frame depending on ", {"type": "ui", "text": ["Use Pivot from First Frame"]}, "\n    parameter)."], "extent": [7722, 7968]}], "container": true, "attrs": {"id": "inplace"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Locomotion Node"], "extent": [7968, 7985], "body": [{"type": "para", "indent": 4, "text": ["The object inside the ", {"type": "ui", "text": ["Character Rig"]}, " that controls the\n    locomotion of the character (the node in the character rig that has\n    translation channels that move it forward in space). When\n    ", {"type": "ui", "text": ["Convert to In-Place Animation"]}, ", Houdini uses this to remove the\n    translation from the character animation to keep the character in place.\n    (The ", {"scheme": "Node", "value": "/nodes/dop/crowdsolver", "type": "link", "text": ["crowd solver node"], "fullpath": "/nodes/dop/crowdsolver"}, " assumes that the agent\n    animation is in-place since it will be attached to a moving particle.)"], "extent": [8014, 8507]}, {"type": "para", "indent": 4, "text": ["The locomotion animation is placed in a separate transform in the rig named\n    ", {"type": "code", "text": ["__locomotion__"]}, ". If this parameter is empty, then ", {"type": "code", "text": ["__locomotion__"]}, " will\n    use the ", {"type": "ui", "text": ["Character Rig"]}, "."], "extent": [8507, 8696]}], "container": true, "attrs": {"id": "locomotionnode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Locomotion Orient"], "extent": [8696, 8715], "body": [{"type": "para", "indent": 4, "text": ["If this parameter and ", {"type": "ui", "text": ["Locomotion Node"]}, " are specified, the generated\n    ", {"type": "code", "text": ["__locomotion__"]}, " transform will also contain rotational information using\n    the vector from the ", {"type": "ui", "text": ["Locomotion Node"]}, " to the ", {"type": "ui", "text": ["Locomotion Orient"]}, " node.\n    If this transform is the same as the ", {"type": "ui", "text": ["Locomotion Node"]}, ", its orientation will be directly extracted.\n    This parameter has no effect if ", {"type": "ui", "text": ["Locomotion Node"]}, " is empty."], "extent": [8746, 9151]}], "container": true, "attrs": {"id": "locomotionlookat"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Project Positions on Dominant Axis"], "extent": [9151, 9187], "body": [{"type": "para", "indent": 4, "text": ["When creating the animation of the ", {"type": "ui", "text": ["Locomotion Node"]}, ", project the positions along the dominant axis of motion in the XZ plane.\n    If the clip will be used as an in-place clip with the ", {"scheme": "Node", "value": "/nodes/dop/crowdsolver", "type": "link", "text": ["crowd solver"], "fullpath": "/nodes/dop/crowdsolver"}, ", enabling this option can help to maintain hip swaying in the motion."], "extent": [9219, 9517]}], "container": true, "attrs": {"id": "projectondominantaxis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Pivot from First Frame"], "extent": [9517, 9545], "body": [{"type": "para", "indent": 4, "text": ["When creating the animation of the ", {"type": "ui", "text": ["Locomotion Node"]}, ", calculate the positions to be relative to the origin.\n    If this option is disabled (the default), then the positions will be relative to where it was on the first frame."], "extent": [9571, 9804]}], "container": true, "attrs": {"id": "firstframepivot"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Agent Name"], "extent": [3035, 3047], "body": [{"type": "para", "indent": 4, "text": ["Name of the agent. The parameter is provided for convenience\n    so that it can be referenced via the ", {"type": "code", "text": ["$AGENT"]}, " local variable in other\n    parameter values."], "extent": [3066, 3228]}], "container": true, "attrs": {"id": "agentname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cache Directory"], "extent": [3228, 3245], "body": [{"type": "para", "indent": 4, "text": ["Parent directory of agent definition files. This parameter is\n    provided for convenience so that its value can be referenced via the\n    ", {"type": "code", "text": ["$CACHEDIR"]}, " local variable in the other filename parameters."], "extent": [3263, 3468]}], "container": true, "attrs": {"id": "cachedir"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rig"], "extent": [3468, 3473], "body": [{"type": "para", "indent": 4, "text": ["Filename for the agent rig.\n    The ", {"scheme": null, "value": "/crowds/agents#rig", "type": "link", "text": ["rig file"], "fullpath": "/crowds/agents#rig", "fragment": "#rig"}, " is a JSON file describing the transform hierarchy of the agent."], "extent": [3486, 3621]}], "container": true, "attrs": {"id": "rig"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Agent Layers"], "extent": [3621, 3635], "body": [{"type": "para", "indent": 4, "text": ["Filename pattern for ", {"scheme": null, "value": "/crowds/agents#layer", "type": "link", "text": ["agent layer files"], "fullpath": "/crowds/agents#layer", "fragment": "#layer"}, ".\n    The ", {"type": "code", "text": ["${LAYER}"]}, " local variable can be used to the include the name of the layer in the filename."], "extent": [3651, 3819]}], "container": true, "attrs": {"id": "layers"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shape Library"], "extent": [3819, 3834], "body": [{"type": "para", "indent": 4, "text": ["Filename for the ", {"scheme": null, "value": "/crowds/agents#shapelib", "type": "link", "text": ["agent shape library"], "fullpath": "/crowds/agents#shapelib", "fragment": "#shapelib"}, "."], "extent": [3852, 3921]}], "container": true, "attrs": {"id": "shapelib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clips"], "extent": [3921, 3928], "body": [{"type": "para", "indent": 4, "text": ["Filename pattern for ", {"scheme": null, "value": "/crowds/agents#clip", "type": "link", "text": ["agent clip files"], "fullpath": "/crowds/agents#clip", "fragment": "#clip"}, ".\n    The ", {"type": "code", "text": ["${CLIP}"]}, " local variable can be used to the include the name of the clip in the filename."], "extent": [3943, 4107]}], "container": true, "attrs": {"id": "clips"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transform Groups"], "extent": [4107, 4125], "body": [{"type": "para", "indent": 4, "text": ["Filename pattern for ", {"scheme": null, "value": "/crowds/agents#xformgroups", "type": "link", "text": ["agent transform group files"], "fullpath": "/crowds/agents#xformgroups", "fragment": "#xformgroups"}, ".\n    The ", {"type": "code", "text": ["${TRANSFORM_GROUP}"]}, " local variable can be used to include the name of the transform group in the filename."], "extent": [4150, 4350]}], "container": true, "attrs": {"id": "transformgroups"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Metadata"], "extent": [4350, 4360], "body": [{"type": "para", "indent": 4, "text": ["Filename pattern for the agent definition\u2019s ", {"scheme": null, "value": "/crowds/agents#metadata", "type": "link", "text": ["metadata"], "fullpath": "/crowds/agents#metadata", "fragment": "#metadata"}, ", which is a JSON file containing additional custom data."], "extent": [4378, 4519]}], "container": true, "attrs": {"id": "metadata"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Intermediate Directories"], "extent": [6293, 6327], "body": [{"type": "para", "indent": 4, "text": ["Create intermediate parent directories for output files as needed. This currently only applies to generated scripts, images, and shadow maps."], "extent": [6353, 6500]}], "container": true, "attrs": {"id": "soho_mkpath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pre-Render Script"], "extent": [4551, 4570], "body": [{"type": "para", "indent": 4, "text": ["Execute this script before any baking."], "extent": [4570, 4613]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Post-Render Script"], "extent": [4613, 4633], "body": [{"type": "para", "indent": 4, "text": ["Execute this script after all baking"], "extent": [4633, 4675]}], "container": true, "role": "item"}], "container": true}], "text": "Parameters"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [4675, 4683], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["AGENT"], "extent": [4683, 4691], "body": [{"type": "para", "indent": 4, "text": ["The name of agent. The value either comes from the ", {"type": "code", "text": ["agentname"]}, " string\n    attribute on the input points when ", {"type": "ui", "text": ["Allow Attributes to Override"]}, " is\n    enabled, or from the value of the ", {"type": "ui", "text": ["Agent Name"]}, " parameter."], "extent": [4691, 4905]}], "container": true}, {"type": "dt", "indent": 0, "text": ["CACHEDIR"], "extent": [4905, 4915], "body": [{"type": "para", "indent": 4, "text": ["A local variable provided for convenience so that the value of the ", {"type": "ui", "text": ["Cache\n    Directory"]}, " parameter can be easily referenced."], "extent": [4915, 5047]}], "container": true}, {"type": "dt", "indent": 0, "text": ["LAYER"], "extent": [5047, 5054], "body": [{"type": "para", "indent": 4, "text": ["Contains the name of the current layer when evaluating the ", {"type": "ui", "text": ["Agent Layers"]}, " parameter."], "extent": [5054, 5146]}], "container": true}, {"type": "dt", "indent": 0, "text": ["CLIP"], "extent": [5146, 5152], "body": [{"type": "para", "indent": 4, "text": ["Contains the name of the current clip when evaluating the ", {"type": "ui", "text": ["Clips"]}, " parameter."], "extent": [5152, 5236]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TRANSFORM_GROUP"], "extent": [5236, 5253], "body": [{"type": "para", "indent": 4, "text": ["Contains the name of the current transform group when evaluating the ", {"type": "ui", "text": ["Transform Groups"]}, " filename parameter."], "extent": [5253, 5368]}], "container": true}, {"type": "dt", "indent": 0, "text": ["FBX_TAKE_NAME"], "extent": [5368, 5383], "body": [{"type": "para", "indent": 4, "text": ["Contains the name of the current take in the FBX file when evaluating the ", {"type": "ui", "text": ["Clip Name"]}, " parameter and ", {"type": "ui", "text": ["Source"]}, " is ", {"type": "ui", "text": ["FBX"]}, "."], "extent": [5383, 5513]}], "container": true}, {"type": "dt", "indent": 0, "text": ["FBX_TAKE_INDEX"], "extent": [5513, 5529], "body": [{"type": "para", "indent": 4, "text": ["Contains the index of the current take in the FBX file when evaluating the ", {"type": "ui", "text": ["Clip Name"]}, " parameter and ", {"type": "ui", "text": ["Source"]}, " is ", {"type": "ui", "text": ["FBX"]}, "."], "extent": [5529, 5660]}], "container": true}], "container": true}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [5660, 5669], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/agent", "type": "link", "text": "", "fullpath": "/nodes/sop/agent"}], "extent": [5669, 5692]}], "container": true}], "text": "Related"}], "title": ["Agent"], "summary": ["This output operator is used to write agent definition files."], "included": ["/nodes/out/standard", "/nodes/sop/agent"]}