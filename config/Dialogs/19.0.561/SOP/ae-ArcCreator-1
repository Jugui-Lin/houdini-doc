// Magic: 561f560d
// Automatically generated PSI dialog (PSI version 19.0.561)
// Wed May  4 11:36:10 2022


f_tmp = FLOAT_FIELD;	// dialog.top.ui
labelparm.gad = NULL { }

labelparm2.sval := 1;

labelparm2.gad = 
{
    LAYOUT(vertical) SPACING(1p) HSTRETCH VMARGIN(0.05, 0)
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    SWITCHER tight
    {
	VALUE(labelparm2.sval) HSTRETCH

        {
            LAYOUT(horizontal) HSTRETCH

        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[4]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[5]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[6]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[7]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[8]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[9]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[10]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[11]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[12]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[13]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[14]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm2.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[14]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm2.val[15]) JUSTIFY(center,center) HSTRETCH;
        }

    }
}
mult.gad = NULL { }

use_vex.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("use_vex", "Use VEXpression") toggle VALUE(use_vex.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

vex.gad = ROW
{

    HSTRETCH JUSTIFY(left, top) HMARGIN(0.18, 0.1)
        NO_MARGIN_SPACING_SCALE

    MULTILINE_PARM_FIELD ("vex") 

    	VALUE(vex.val) 
    	SYNTAX("vex") 
    	LINES(5,12) 
    	HSTRETCH;

    {

    vex.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

    }

}

resrad.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 resrad.label = PARM_LABEL("Radial Segments", "resrad") WIDTH(1.5);
 PARM(integer, 1, "resrad", none, none) RANGE(0,10)
	 LABELREF(resrad.label) HSTRETCH;

  { WIDTH(0.1) }
}

resang.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 resang.label = PARM_LABEL("Angular Segments", "resang") WIDTH(1.5);
 PARM(integer, 1, "resang", none, none) RANGE(0,50)
	 LABELREF(resang.label) HSTRETCH;

  { WIDTH(0.1) }
}

cen.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   cen.label = PARM_LABEL("Centre", "cen") WIDTH(1.5);
   PARM(float, 3, "cen", none, none, "X,Y,Z")
	RANGE(-1,1)  LABELREF(cen.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

N.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   N.label = PARM_LABEL("Normal", "N") WIDTH(1.5);
   PARM(float, 3, "N", none, none, "X,Y,Z")
	RANGE(-1,1)  LABELREF(N.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

rad.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rad.label = PARM_LABEL("Radius", "rad") WIDTH(1.5);
 PARM(float, 1, "rad", none, none) RANGE(0,10)
	 LABELREF(rad.label) HSTRETCH;

  { WIDTH(0.1) }
}

ang.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 ang.label = PARM_LABEL("Start Angle (Azimuth)", "ang") WIDTH(1.5);
 PARM(float, 1, "ang", none, none) RANGE(0,360)
	 LABELREF(ang.label) HSTRETCH;

  { WIDTH(0.1) }
}

timeind.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("timeind", "Disable Angular Velocity (Force time independence)") toggle VALUE(timeind.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

w.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 w.label = PARM_LABEL("Angular Velocity (w)", "w") WIDTH(1.5);
 PARM(float, 1, "w", none, none) RANGE(0,360)
	 LABELREF(w.label) HSTRETCH;

  { WIDTH(0.1) }
}
arclength.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

arclength.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 arclength.label = PARM_LABEL("Arc Angular Length", "arclength") WIDTH(1.5);
 PARM(float, 1, "arclength", none, none) RANGE(0,360)
	 LABELREF(arclength.label) HSTRETCH;

  {  }
}

biaslength.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 biaslength.label = PARM_LABEL("Length bias", "biaslength") ;
 PARM(float, 1, "biaslength", none, none) RANGE(0,1)
	 LABELREF(biaslength.label) HSTRETCH;

  { WIDTH(0.1) }
}
}	// Template join.bot

arcwidth.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

arcwidth.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 arcwidth.label = PARM_LABEL("Arc Width", "arcwidth") WIDTH(1.5);
 PARM(float, 1, "arcwidth", none, none) RANGE(0,10)
	 LABELREF(arcwidth.label) HSTRETCH;

  {  }
}

biaswidth.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 biaswidth.label = PARM_LABEL("Width Bias", "biaswidth") ;
 PARM(float, 1, "biaswidth", none, none) RANGE(0,1)
	 LABELREF(biaswidth.label) HSTRETCH;

  { WIDTH(0.1) }
}
}	// Template join.bot


limit_arcwidths.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("limit_arcwidths", "Limit Arc Widths") toggle VALUE(limit_arcwidths.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

height.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 height.label = PARM_LABEL("Height (Offset from Centre in Normal dir)", "height") WIDTH(1.5);
 PARM(float, 1, "height", none, none) RANGE(0,10)
	 LABELREF(height.label) HSTRETCH;

  { WIDTH(0.1) }
}

th.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 th.label = PARM_LABEL("Twist Angle", "th") WIDTH(1.5);
 PARM(float, 1, "th", none, none) RANGE(0,360)
	 LABELREF(th.label) HSTRETCH;

  { WIDTH(0.1) }
}
spherical.gad = NULL { }

altitude.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 altitude.label = PARM_LABEL("Altitude (Radians, as multiple of pi)", "altitude") WIDTH(1.5);
 PARM(float, 1, "altitude", none, none) RANGE(0,1)
	 LABELREF(altitude.label) HSTRETCH;

  { WIDTH(0.1) }
}

width_as_angle.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("width_as_angle", "Arc Width as Angular Width (True Spherical Segments)") toggle VALUE(width_as_angle.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

force_spherical.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("force_spherical", "Force Spherical") toggle VALUE(force_spherical.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

auto_sph_bias.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("auto_sph_bias", "Autocompute Width Bias ( smooth poles )") toggle VALUE(auto_sph_bias.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

style.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Output Connectivity", "style") WIDTH(1.5);
    { WIDTH(0.09) }

    style.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

attr_output.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("attr_output", "Output Arc Attribs") toggle VALUE(attr_output.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

attr_prom.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("attr_prom", "Promote Arc Attribs from Point to Prim") toggle VALUE(attr_prom.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

groups.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("groups", "Output useful point/edge groups") toggle VALUE(groups.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

close_full.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("close_full", "Close Full Rings") toggle VALUE(close_full.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

vis_uv2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("vis_uv2", "Visualise UVs") toggle VALUE(vis_uv2.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

easy_uv.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("easy_uv", "Output arc UVs as v@uv") toggle VALUE(easy_uv.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

arc_type.gad = 
{
    LAYOUT(vertical) HSTRETCH

    { LOOK(none) SIZE(0, 0.05) }	

    TABDIALOG radio
    { 
	VALUE(arc_type.gad.val) STRETCH(1,0)

	TAB "Linear Arcs"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    limit_arcwidths.gad;		
	    height.gad;		
	    th.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Spherical Arcs"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    spherical.gad;		
	    altitude.gad;		
	    width_as_angle.gad;		
	    force_spherical.gad;		
	    auto_sph_bias.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

tabs.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "tabs.gad"
    { 
	VALUE(tabs.gad.val) STRETCH(1,0)

	TAB "Arc Properties"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    use_vex.gad;		
	    vex.gad;		
	    resrad.gad;		
	    resang.gad;		
	    cen.gad;		
	    N.gad;		
	    rad.gad;		
	    ang.gad;		
	    timeind.gad;		
	    w.gad;		
	    arclength.row.join;		
	    arcwidth.row.join;		
	    arc_type.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Output options"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    style.gad;		
	    attr_output.gad;		
	    attr_prom.gad;		
	    groups.gad;		
	    close_full.gad;		
	    vis_uv2.gad;		
	    easy_uv.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    labelparm.gad; 
    labelparm2.gad; 
    mult.gad; 
    tabs.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
