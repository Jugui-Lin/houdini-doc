// Magic: 4e6c41a6
// Automatically generated PSI dialog (PSI version 19.0.561)
// Wed May 18 06:11:15 2022


f_tmp = FLOAT_FIELD;	// dialog.top.ui

amp.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 amp.label = PARM_LABEL("Amplitude", "amp") WIDTH(1.5);
 PARM(float, 1, "amp", none, none) RANGE(-1,1)
	 LABELREF(amp.label) HSTRETCH;

  { WIDTH(0.1) }
}

freq4.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   freq4.label = PARM_LABEL("Frequency", "freq4") WIDTH(1.5);
   PARM(float, 3, "freq4", none, none, "#1,#2,#3")
	RANGE(0,10)  LABELREF(freq4.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

noise_along_height.si_rampedit = FLOAT_RAMP VALUE(noise_along_height.ramp_val)
			LAYOUT(horizontal)  HSTRETCH;

noise_along_height.multiramp = 
{
    LAYOUT(vertical) STRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    ROW
    {
	JUSTIFY(left,center) SPACING(0.1) VMARGIN(0.02) HSTRETCH

	COL
	{
	    JUSTIFY(right,center) WIDTH(1.5)
	    LABEL "Point No.";
	}

	noise_along_height.pointno.gad
	    = INT_SLIDER_FIELD VALUE(noise_along_height.pointno.val) HSTRETCH;
    }
}

noise_along_height.buttons.gad = COL
{
    VSTRETCH

    ICON_BUTTON_STRIP
    {
	LAYOUT(horizontal) INITSIZE(20p, 20p) 

	ACTION_ICONBUTTON "BUTTONS_delete"
		HELP("Remove Point") VALUE(noise_along_height.delpoint.val);
	ACTION_ICONBUTTON "BUTTONS_add"
		HELP("Add Point") VALUE(noise_along_height.addpoint.val);
    }

    { VSTRETCH }

    ROW
    {
	    noise_along_height.toggleparms.gad
	      = ACTION_ICONBUTTON "BUTTONS_show_controls"
		HELP("Hide Controls", "h.pane.parms.toggle_ramp_parms")
		VALUE(noise_along_height.toggle.val)
		LOOKFLAT UI_FLAT_ICON_BTN_SIZE_TINY;

	    noise_along_height.togglerampsize.gad
	      = ACTION_ICONBUTTON "BUTTONS_restore_mini"
		HELP("Maximize ramp", "h.pane.parms.toggle_ramp_size")
		VALUE(noise_along_height.togglerampsize.val)
		LOOKFLAT UI_FLAT_ICON_BTN_SIZE_TINY;
    }
}

noise_along_height.parm =
{
    LAYOUT(vertical) HSTRETCH JUSTIFY(left, center)

    noise_along_height.ramp.gad = ROW
    {
	MARGIN(0.02) SPACING(0.02) JUSTIFY(left, top) HSTRETCH

	noise_along_height.buttons.gad VSTRETCH;

	noise_along_height.si_rampedit HSTRETCH;
    }
}

noise_along_height.gad =
{
    LAYOUT(vertical) MARGIN(2p) HSTRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    {
	LAYOUT(horizontal) HSTRETCH

	PARM_LABEL_SIMPLE("Mask Along Height", "noise_along_height");

	{ HSTRETCH }
	ACTION_ICONBUTTON "BUTTONS_ramp_flip_x" VALUE(noise_along_height.reverse.val)
		LOOKFLAT HELP("Reverse Domain") UI_FLAT_ICON_BTN_SIZE_SMALL;
	ACTION_ICONBUTTON "BUTTONS_ramp_flip_y" VALUE(noise_along_height.complement.val)
		LOOKFLAT HELP("Complement Ramp") UI_FLAT_ICON_BTN_SIZE_SMALL;
	noise_along_height.presets
	    = ACTION_MENU_ICONBUTTON "BUTTONS_gear"
		LOOKFLAT HELP("Presets") UI_FLAT_ICON_BTN_SIZE_SMALL;

    }

    {
	LAYOUT(vertical) MARGIN(2p) SPACING(0.02) HSTRETCH

	noise_along_height.parm;

	SWITCHER tight
	{
	    LAYOUT(overlap) VALUE(noise_along_height.hideparms.val) HSTRETCH
	    noise_along_height.multiramp;
	    {}
	}
    }
}

shape.si_rampedit = FLOAT_RAMP VALUE(shape.ramp_val)
			LAYOUT(horizontal)  HSTRETCH;

shape.multiramp = 
{
    LAYOUT(vertical) STRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    ROW
    {
	JUSTIFY(left,center) SPACING(0.1) VMARGIN(0.02) HSTRETCH

	COL
	{
	    JUSTIFY(right,center) WIDTH(1.5)
	    LABEL "Point No.";
	}

	shape.pointno.gad
	    = INT_SLIDER_FIELD VALUE(shape.pointno.val) HSTRETCH;
    }
}

shape.buttons.gad = COL
{
    VSTRETCH

    ICON_BUTTON_STRIP
    {
	LAYOUT(horizontal) INITSIZE(20p, 20p) 

	ACTION_ICONBUTTON "BUTTONS_delete"
		HELP("Remove Point") VALUE(shape.delpoint.val);
	ACTION_ICONBUTTON "BUTTONS_add"
		HELP("Add Point") VALUE(shape.addpoint.val);
    }

    { VSTRETCH }

    ROW
    {
	    shape.toggleparms.gad
	      = ACTION_ICONBUTTON "BUTTONS_show_controls"
		HELP("Hide Controls", "h.pane.parms.toggle_ramp_parms")
		VALUE(shape.toggle.val)
		LOOKFLAT UI_FLAT_ICON_BTN_SIZE_TINY;

	    shape.togglerampsize.gad
	      = ACTION_ICONBUTTON "BUTTONS_restore_mini"
		HELP("Maximize ramp", "h.pane.parms.toggle_ramp_size")
		VALUE(shape.togglerampsize.val)
		LOOKFLAT UI_FLAT_ICON_BTN_SIZE_TINY;
    }
}

shape.parm =
{
    LAYOUT(vertical) HSTRETCH JUSTIFY(left, center)

    shape.ramp.gad = ROW
    {
	MARGIN(0.02) SPACING(0.02) JUSTIFY(left, top) HSTRETCH

	shape.buttons.gad VSTRETCH;

	shape.si_rampedit HSTRETCH;
    }
}

shape.gad =
{
    LAYOUT(vertical) MARGIN(2p) HSTRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    {
	LAYOUT(horizontal) HSTRETCH

	PARM_LABEL_SIMPLE("Global Shape Modify", "shape");

	{ HSTRETCH }
	ACTION_ICONBUTTON "BUTTONS_ramp_flip_x" VALUE(shape.reverse.val)
		LOOKFLAT HELP("Reverse Domain") UI_FLAT_ICON_BTN_SIZE_SMALL;
	ACTION_ICONBUTTON "BUTTONS_ramp_flip_y" VALUE(shape.complement.val)
		LOOKFLAT HELP("Complement Ramp") UI_FLAT_ICON_BTN_SIZE_SMALL;
	shape.presets
	    = ACTION_MENU_ICONBUTTON "BUTTONS_gear"
		LOOKFLAT HELP("Presets") UI_FLAT_ICON_BTN_SIZE_SMALL;

    }

    {
	LAYOUT(vertical) MARGIN(2p) SPACING(0.02) HSTRETCH

	shape.parm;

	SWITCHER tight
	{
	    LAYOUT(overlap) VALUE(shape.hideparms.val) HSTRETCH
	    shape.multiramp;
	    {}
	}
    }
}

noiseSeed.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 noiseSeed.label = PARM_LABEL("noiseSeed", "noiseSeed") WIDTH(1.5);
 PARM(integer, 1, "noiseSeed", none, none) RANGE(0,10)
	 LABELREF(noiseSeed.label) HSTRETCH;

  { WIDTH(0.1) }
}

iterations.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 iterations.label = PARM_LABEL("Depth", "iterations") WIDTH(1.5);
 PARM(integer, 1, "iterations", none, none) RANGE(0,3)
	LOCK_RANGE_MIN LABELREF(iterations.label) HSTRETCH;

  { WIDTH(0.1) }
}

remap.si_rampedit = FLOAT_RAMP VALUE(remap.ramp_val)
			LAYOUT(horizontal)  HSTRETCH;

remap.multiramp = 
{
    LAYOUT(vertical) STRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    ROW
    {
	JUSTIFY(left,center) SPACING(0.1) VMARGIN(0.02) HSTRETCH

	COL
	{
	    JUSTIFY(right,center) WIDTH(1.5)
	    LABEL "Point No.";
	}

	remap.pointno.gad
	    = INT_SLIDER_FIELD VALUE(remap.pointno.val) HSTRETCH;
    }
}

remap.buttons.gad = COL
{
    VSTRETCH

    ICON_BUTTON_STRIP
    {
	LAYOUT(horizontal) INITSIZE(20p, 20p) 

	ACTION_ICONBUTTON "BUTTONS_delete"
		HELP("Remove Point") VALUE(remap.delpoint.val);
	ACTION_ICONBUTTON "BUTTONS_add"
		HELP("Add Point") VALUE(remap.addpoint.val);
    }

    { VSTRETCH }

    ROW
    {
	    remap.toggleparms.gad
	      = ACTION_ICONBUTTON "BUTTONS_show_controls"
		HELP("Hide Controls", "h.pane.parms.toggle_ramp_parms")
		VALUE(remap.toggle.val)
		LOOKFLAT UI_FLAT_ICON_BTN_SIZE_TINY;

	    remap.togglerampsize.gad
	      = ACTION_ICONBUTTON "BUTTONS_restore_mini"
		HELP("Maximize ramp", "h.pane.parms.toggle_ramp_size")
		VALUE(remap.togglerampsize.val)
		LOOKFLAT UI_FLAT_ICON_BTN_SIZE_TINY;
    }
}

remap.parm =
{
    LAYOUT(vertical) HSTRETCH JUSTIFY(left, center)

    remap.ramp.gad = ROW
    {
	MARGIN(0.02) SPACING(0.02) JUSTIFY(left, top) HSTRETCH

	remap.buttons.gad VSTRETCH;

	remap.si_rampedit HSTRETCH;
    }
}

remap.gad =
{
    LAYOUT(vertical) MARGIN(2p) HSTRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    {
	LAYOUT(horizontal) HSTRETCH

	PARM_LABEL_SIMPLE("Remap along length", "remap");

	{ HSTRETCH }
	ACTION_ICONBUTTON "BUTTONS_ramp_flip_x" VALUE(remap.reverse.val)
		LOOKFLAT HELP("Reverse Domain") UI_FLAT_ICON_BTN_SIZE_SMALL;
	ACTION_ICONBUTTON "BUTTONS_ramp_flip_y" VALUE(remap.complement.val)
		LOOKFLAT HELP("Complement Ramp") UI_FLAT_ICON_BTN_SIZE_SMALL;
	remap.presets
	    = ACTION_MENU_ICONBUTTON "BUTTONS_gear"
		LOOKFLAT HELP("Presets") UI_FLAT_ICON_BTN_SIZE_SMALL;

    }

    {
	LAYOUT(vertical) MARGIN(2p) SPACING(0.02) HSTRETCH

	remap.parm;

	SWITCHER tight
	{
	    LAYOUT(overlap) VALUE(remap.hideparms.val) HSTRETCH
	    remap.multiramp;
	    {}
	}
    }
}

sepparm.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

width_along_anim.si_rampedit = FLOAT_RAMP VALUE(width_along_anim.ramp_val)
			LAYOUT(horizontal)  HSTRETCH;

width_along_anim.multiramp = 
{
    LAYOUT(vertical) STRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    ROW
    {
	JUSTIFY(left,center) SPACING(0.1) VMARGIN(0.02) HSTRETCH

	COL
	{
	    JUSTIFY(right,center) WIDTH(1.5)
	    LABEL "Point No.";
	}

	width_along_anim.pointno.gad
	    = INT_SLIDER_FIELD VALUE(width_along_anim.pointno.val) HSTRETCH;
    }
}

width_along_anim.buttons.gad = COL
{
    VSTRETCH

    ICON_BUTTON_STRIP
    {
	LAYOUT(horizontal) INITSIZE(20p, 20p) 

	ACTION_ICONBUTTON "BUTTONS_delete"
		HELP("Remove Point") VALUE(width_along_anim.delpoint.val);
	ACTION_ICONBUTTON "BUTTONS_add"
		HELP("Add Point") VALUE(width_along_anim.addpoint.val);
    }

    { VSTRETCH }

    ROW
    {
	    width_along_anim.toggleparms.gad
	      = ACTION_ICONBUTTON "BUTTONS_show_controls"
		HELP("Hide Controls", "h.pane.parms.toggle_ramp_parms")
		VALUE(width_along_anim.toggle.val)
		LOOKFLAT UI_FLAT_ICON_BTN_SIZE_TINY;

	    width_along_anim.togglerampsize.gad
	      = ACTION_ICONBUTTON "BUTTONS_restore_mini"
		HELP("Maximize ramp", "h.pane.parms.toggle_ramp_size")
		VALUE(width_along_anim.togglerampsize.val)
		LOOKFLAT UI_FLAT_ICON_BTN_SIZE_TINY;
    }
}

width_along_anim.parm =
{
    LAYOUT(vertical) HSTRETCH JUSTIFY(left, center)

    width_along_anim.ramp.gad = ROW
    {
	MARGIN(0.02) SPACING(0.02) JUSTIFY(left, top) HSTRETCH

	width_along_anim.buttons.gad VSTRETCH;

	width_along_anim.si_rampedit HSTRETCH;
    }
}

width_along_anim.gad =
{
    LAYOUT(vertical) MARGIN(2p) HSTRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    {
	LAYOUT(horizontal) HSTRETCH

	PARM_LABEL_SIMPLE("Thickness_along_anim", "width_along_anim");

	{ HSTRETCH }
	ACTION_ICONBUTTON "BUTTONS_ramp_flip_x" VALUE(width_along_anim.reverse.val)
		LOOKFLAT HELP("Reverse Domain") UI_FLAT_ICON_BTN_SIZE_SMALL;
	ACTION_ICONBUTTON "BUTTONS_ramp_flip_y" VALUE(width_along_anim.complement.val)
		LOOKFLAT HELP("Complement Ramp") UI_FLAT_ICON_BTN_SIZE_SMALL;
	width_along_anim.presets
	    = ACTION_MENU_ICONBUTTON "BUTTONS_gear"
		LOOKFLAT HELP("Presets") UI_FLAT_ICON_BTN_SIZE_SMALL;

    }

    {
	LAYOUT(vertical) MARGIN(2p) SPACING(0.02) HSTRETCH

	width_along_anim.parm;

	SWITCHER tight
	{
	    LAYOUT(overlap) VALUE(width_along_anim.hideparms.val) HSTRETCH
	    width_along_anim.multiramp;
	    {}
	}
    }
}

thickness2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 thickness2.label = PARM_LABEL("Thickness Mult", "thickness2") WIDTH(1.5);
 PARM(float, 1, "thickness2", none, none) RANGE(0,10)
	 LABELREF(thickness2.label) HSTRETCH;

  { WIDTH(0.1) }
}

amp2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 amp2.label = PARM_LABEL("Amplitude", "amp2") WIDTH(1.5);
 PARM(float, 1, "amp2", none, none) RANGE(-1,1)
	 LABELREF(amp2.label) HSTRETCH;

  { WIDTH(0.1) }
}

freq.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   freq.label = PARM_LABEL("Frequency", "freq") WIDTH(1.5);
   PARM(float, 3, "freq", none, none, "#1,#2,#3")
	RANGE(0,10)  LABELREF(freq.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

offset.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   offset.label = PARM_LABEL("Offset", "offset") WIDTH(1.5);
   PARM(float, 3, "offset", none, none, "#1,#2,#3")
	RANGE(0,10)  LABELREF(offset.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

rough.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rough.label = PARM_LABEL("Roughness", "rough") WIDTH(1.5);
 PARM(float, 1, "rough", none, none) RANGE(0,1)
	 LABELREF(rough.label) HSTRETCH;

  { WIDTH(0.1) }
}

maxoctave.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxoctave.label = PARM_LABEL("Max Octaves", "maxoctave") WIDTH(1.5);
 PARM(integer, 1, "maxoctave", none, none) RANGE(0,32)
	 LABELREF(maxoctave.label) HSTRETCH;

  { WIDTH(0.1) }
}

iterations2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 iterations2.label = PARM_LABEL("Depth", "iterations2") WIDTH(1.5);
 PARM(integer, 1, "iterations2", none, none) RANGE(0,3)
	LOCK_RANGE_MIN LABELREF(iterations2.label) HSTRETCH;

  { WIDTH(0.1) }
}

input.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 input.label = PARM_LABEL("Select Material", "input") WIDTH(1.5);
 PARM(integer, 1, "input", none, none) RANGE(0,2)
	LOCK_RANGE_MIN LABELREF(input.label) HSTRETCH;

  { WIDTH(0.1) }
}

labelparm.sval := 3;

labelparm.gad = 
{
    LAYOUT(vertical) SPACING(1p) HSTRETCH VMARGIN(0.05, 0)
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    SWITCHER tight
    {
	VALUE(labelparm.sval) HSTRETCH

        {
            LAYOUT(horizontal) HSTRETCH

        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[12]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[13]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[14]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[14]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[15]) JUSTIFY(center,center) HSTRETCH;
        }

    }
}

folder1.gad = 

GROUP simple "Materials" flat 
{ 
    VALUE(folder1.gad.val) LAYOUT(vertical) HSTRETCH 
	    input.gad;		
	    labelparm.gad;		
} 

noise2.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "noise2.gad"
    { 
	VALUE(noise2.gad.val) STRETCH(1,0)

	TAB "Noise"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    amp2.gad;		
	    freq.gad;		
	    offset.gad;		
	    rough.gad;		
	    maxoctave.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Subdivision"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    iterations2.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

thickness.gad = 

GROUP simple "Thickness" flat 
{ 
    VALUE(thickness.gad.val) LAYOUT(vertical) HSTRETCH 
	    remap.gad;		
	    sepparm.gad;		
	    width_along_anim.gad;		
	    thickness2.gad;		
} 

subd.gad = 

GROUP simple "Subdivision" flat 
{ 
    VALUE(subd.gad.val) LAYOUT(vertical) HSTRETCH 
	    iterations.gad;		
} 

noise.gad = 

GROUP simple "Noise" flat 
{ 
    VALUE(noise.gad.val) LAYOUT(vertical) HSTRETCH 
	    amp.gad;		
	    freq4.gad;		
	    noise_along_height.gad;		
	    shape.gad;		
	    noiseSeed.gad;		
	    subd.gad;		
} 

seeds.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "seeds.gad"
    { 
	VALUE(seeds.gad.val) STRETCH(1,0)

	TAB "Seeds"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    noise.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Stem"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    thickness.gad;		
	    noise2.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    seeds.gad; 
    folder1.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
