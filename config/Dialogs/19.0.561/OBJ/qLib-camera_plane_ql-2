// Magic: 4157ee4b
// Automatically generated PSI dialog (PSI version 19.0.561)
// Mon Apr 11 00:34:24 2022


f_tmp = FLOAT_FIELD;	// dialog.top.ui
space_.gad = NULL { }
camera.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

camera.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 camera.label = PARM_LABEL("Camera", "camera") WIDTH(1.5);
 PARM_FIELD(pathstring, "camera") VALUE(camera.val) 
	LABELREF(camera.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(camera.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(camera.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

 {  }
}

camera_presets.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    camera_presets.menu LOOK(menuiconbutton) SIZE(0.26, 0.26);

}
}	// Template join.bot


space.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Space", "space") WIDTH(1.5);
    { WIDTH(0.09) }

    space.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}
plane_distance.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

plane_distance.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 plane_distance.label = PARM_LABEL("Plane Distance", "plane_distance") WIDTH(1.5);
 PARM(float, 1, "plane_distance", none, none) RANGE(1,100)
	 LABELREF(plane_distance.label) HSTRETCH;

  {  }
}

plane_distance_presets.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    plane_distance_presets.menu LOOK(menuiconbutton) SIZE(0.26, 0.26);

}
}	// Template join.bot


center.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   center.label = PARM_LABEL("Center", "center") WIDTH(1.5);
   PARM(float, 2, "center", none, none, "X,Y")
	RANGE(-1,1)  LABELREF(center.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

overscan.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   overscan.label = PARM_LABEL("Overscan", "overscan") WIDTH(1.5);
   PARM(float, 2, "overscan", none, none, "X,Y")
	RANGE(-1,1)  LABELREF(overscan.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

use_screenwindow.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("use_screenwindow", "Use Screen Window Settings") toggle VALUE(use_screenwindow.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

gl_wireframe.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Wireframe Mode", "gl_wireframe") WIDTH(1.5);
    { WIDTH(0.09) }

    gl_wireframe.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}
material.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
material.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
material.gad = PARM_BUTTON("material", "") toggle VALUE(material.val) RETAIN_SIZE_WHEN_HIDDEN;

material_mode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    {  }

    PARM_LABEL_SIMPLE("Material Mode", "material_mode") WIDTH(1.32);
    { WIDTH(0.09) }

    material_mode.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}
}	
}	// Template join.bot


material_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    material_color.label = PARM_LABEL("Tint", "material_color") WIDTH(1.5);
    PARM(float, 4, "material_color", none, COLOR, "R,G,B,A") 
	LABELREF(material_color.label) HSTRETCH;

    { WIDTH(0.1) }
}

texture.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 texture.label = PARM_LABEL("Texture", "texture") WIDTH(1.5);

 PARM_FIELD (pathstring, "texture") LABELREF(texture.label)
	VALUE(texture.val) HSTRETCH;

    texture.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(texture.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

sep_1.sval := 1;

sep_1.gad = 
{
    LAYOUT(vertical) SPACING(1p) HSTRETCH VMARGIN(0.05, 0)
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    SWITCHER tight
    {
	VALUE(sep_1.sval) HSTRETCH

        {
            LAYOUT(horizontal) HSTRETCH

        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[4]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[5]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[6]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[7]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[8]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[9]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[10]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[11]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[12]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[13]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[14]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[14]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(sep_1.val[15]) JUSTIFY(center,center) HSTRETCH;
        }

    }
}
fr_enable.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
fr_enable.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
fr_enable.gad = PARM_BUTTON("fr_enable", "") toggle VALUE(fr_enable.val) RETAIN_SIZE_WHEN_HIDDEN;

fr_range.gad = ROW
{
   HSTRETCH
   {  }

   fr_range.label = PARM_LABEL("Sequence Range", "fr_range") WIDTH(1.32);
   PARM(integer, 2, "fr_range", none, none, "X,Y")
	RANGE(-1,1)  LABELREF(fr_range.label)
	HSTRETCH;

    {  }
}
}	

fr_clamp.gad = ROW
{
    
    {  }

    {  }
    { WIDTH(0.08) }

    PARM_BUTTON("fr_clamp", "Clamp") toggle VALUE(fr_clamp.val);

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot


fr_startframeat.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 fr_startframeat.label = PARM_LABEL("Start at", "fr_startframeat") WIDTH(1.5);
 PARM(integer, 1, "fr_startframeat", none, none) RANGE(1,240)
	 LABELREF(fr_startframeat.label) HSTRETCH;

  { WIDTH(0.1) }
}

fr_currentframe.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 fr_currentframe.label = PARM_LABEL("Current Frame \\#", "fr_currentframe") WIDTH(1.5);
 PARM(integer, 1, "fr_currentframe", none, none) RANGE(0,9999)
	 LABELREF(fr_currentframe.label) HSTRETCH;

  { WIDTH(0.1) }
}
fr_editable.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
fr_editable.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
fr_editable.gad = PARM_BUTTON("fr_editable", "") toggle VALUE(fr_editable.val) RETAIN_SIZE_WHEN_HIDDEN;

fr_texture.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 {  }

 fr_texture.label = PARM_LABEL("Current Texture", "fr_texture") WIDTH(1.32);

 PARM_FIELD (pathstring, "fr_texture") LABELREF(fr_texture.label)
	VALUE(fr_texture.val) HSTRETCH;

    fr_texture.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(fr_texture.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}
}	
}	// Template join.bot

type.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

type.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Primitive Type", "type") WIDTH(1.5);
    { WIDTH(0.09) }

    type.menu;

    {  }

    {  }
}

surftype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    surftype.menu;

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot


rows.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rows.label = PARM_LABEL("Rows", "rows") WIDTH(1.5);
 PARM(integer, 1, "rows", none, none) RANGE(1,50)
	LOCK_RANGE_MIN LABELREF(rows.label) HSTRETCH;

  { WIDTH(0.1) }
}

cols.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 cols.label = PARM_LABEL("Columns", "cols") WIDTH(1.5);
 PARM(integer, 1, "cols", none, none) RANGE(1,50)
	LOCK_RANGE_MIN LABELREF(cols.label) HSTRETCH;

  { WIDTH(0.1) }
}

orderu.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 orderu.label = PARM_LABEL("U Order", "orderu") WIDTH(1.5);
 PARM(integer, 1, "orderu", none, none) RANGE(2,11)
	LOCK_RANGE LABELREF(orderu.label) HSTRETCH;

  { WIDTH(0.1) }
}

orderv.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 orderv.label = PARM_LABEL("V Order", "orderv") WIDTH(1.5);
 PARM(integer, 1, "orderv", none, none) RANGE(2,11)
	LOCK_RANGE LABELREF(orderv.label) HSTRETCH;

  { WIDTH(0.1) }
}

cam_crop.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("cam_crop", "Use Camera Crop") toggle VALUE(cam_crop.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

cropl.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 cropl.label = PARM_LABEL("Left Crop", "cropl") WIDTH(1.5);
 PARM(float, 1, "cropl", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(cropl.label) HSTRETCH;

  { WIDTH(0.1) }
}

cropr.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 cropr.label = PARM_LABEL("Right Crop", "cropr") WIDTH(1.5);
 PARM(float, 1, "cropr", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(cropr.label) HSTRETCH;

  { WIDTH(0.1) }
}

cropb.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 cropb.label = PARM_LABEL("Bottom Crop", "cropb") WIDTH(1.5);
 PARM(float, 1, "cropb", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(cropb.label) HSTRETCH;

  { WIDTH(0.1) }
}

cropt.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 cropt.label = PARM_LABEL("Top Crop", "cropt") WIDTH(1.5);
 PARM(float, 1, "cropt", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(cropt.label) HSTRETCH;

  { WIDTH(0.1) }
}

viewport.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("viewport", "Viewport Display") toggle VALUE(viewport.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

renderable.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("renderable", "Renderable") toggle VALUE(renderable.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}
xOrd.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

xOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Transform Order", "xOrd") WIDTH(1.5);
    { WIDTH(0.09) }

    xOrd.menu;

    {  }

    {  }
}

rOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    rOrd.menu;

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot


t.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   t.label = PARM_LABEL("Translate", "t") WIDTH(1.5);
   PARM(float, 3, "t", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(t.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_transform" VALUE(t.script_action)
	HELP("Select an object to match the translation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

r.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   r.label = PARM_LABEL("Rotate", "r") WIDTH(1.5);
   PARM(float, 3, "r", none, none, "X,Y,Z")
	RANGE(0,360)  LABELREF(r.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_rotation" VALUE(r.script_action)
	HELP("Select an object to match the rotation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

s.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   s.label = PARM_LABEL("Scale", "s") WIDTH(1.5);
   PARM(float, 3, "s", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(s.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_scale" VALUE(s.script_action)
	HELP("Select an object to match the scale with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

p.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   p.label = PARM_LABEL("Pivot", "p") WIDTH(1.5);
   PARM(float, 3, "p", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(p.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_pivot" VALUE(p.script_action)
	HELP("Select an object to match the pivot with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

scale.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 scale.label = PARM_LABEL("Uniform Scale", "scale") WIDTH(1.5);
 PARM(float, 1, "scale", none, none) RANGE(0,1)
	 LABELREF(scale.label) HSTRETCH;

  { WIDTH(0.1) }
}
lookatpath.gad = NULL { }
lookup.gad = NULL { }
pathobjpath.gad = NULL { }
roll.gad = NULL { }
pos.gad = NULL { }
uparmtype.gad = NULL { }
pathorient.gad = NULL { }
up.gad = NULL { }
bank.gad = NULL { }

pre_xform.gad = ROW
{
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.099) }

    pre_xform.menu;
}

keeppos.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("keeppos", "Keep Position When Parenting") toggle VALUE(keeppos.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}
label1.gad = NULL { }
label2.gad = NULL { }
label3.gad = NULL { }
label4.gad = NULL { }
tdisplay.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
tdisplay.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
tdisplay.gad = PARM_BUTTON("tdisplay", "") toggle VALUE(tdisplay.val) RETAIN_SIZE_WHEN_HIDDEN;

display.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 display.label = PARM_LABEL("Display", "display") WIDTH(1.32);
 PARM(integer, 1, "display", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(display.label) HSTRETCH;

  { WIDTH(0.1) }
}
}	
}	// Template join.bot


outputobj.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Output Transform", "outputobj") WIDTH(1.5);
    { WIDTH(0.09) }

    outputobj.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

visibleobjects.gad = 
{
 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 visibleobjects.label = PARM_LABEL("Visible Children", "visibleobjects") WIDTH(1.5);
 PARM_FIELD (pathstring, "visibleobjects") LABELREF(visibleobjects.label) 
	VALUE(visibleobjects.val) HSTRETCH;

    visibleobjects.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(visibleobjects.plus) LOOKFLAT
    HELP("Open floating bundle chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

picking.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("picking", "Viewport Selecting Enabled") toggle VALUE(picking.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

pickscript.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 pickscript.label = PARM_LABEL("Select Script", "pickscript") WIDTH(1.5);

 PARM_FIELD (pathstring, "pickscript") LABELREF(pickscript.label)
	VALUE(pickscript.val) HSTRETCH;

    pickscript.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(pickscript.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

caching.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("caching", "Cache Object Transform") toggle VALUE(caching.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}
use_dcolor.gad = NULL { }
dcolor.gad = NULL { }
childcomp.gad = NULL { }
lookupobjpath.gad = NULL { }
pr.gad = NULL { }
constraints_on.gad = NULL { }
constraints_path.gad = NULL { }

folder0_2.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "folder0_2.gad"
    { 
	VALUE(folder0_2.gad.val) STRETCH(1,0)

	TAB "Shading"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    gl_wireframe.gad;		
	    material.row.join;		
	    material_color.gad;		
	    texture.gad;		
	    sep_1.gad;		
	    fr_enable.row.join;		
	    fr_startframeat.gad;		
	    fr_currentframe.gad;		
	    fr_editable.row.join;		

	    { STRETCH(1,1) }
	}

	TAB "Geometry"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    type.row.join;		
	    rows.gad;		
	    cols.gad;		
	    orderu.gad;		
	    orderv.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Cropping"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    cam_crop.gad;		
	    cropl.gad;		
	    cropr.gad;		
	    cropb.gad;		
	    cropt.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

folder0.gad = 

GROUP simple "Plane Settings" flat 
{ 
    VALUE(folder0.gad.val) LAYOUT(vertical) HSTRETCH 
	    space.gad;		
	    plane_distance.row.join;		
	    center.gad;		
	    overscan.gad;		
	    use_screenwindow.gad;		
	    folder0_2.gad;		
	    viewport.gad;		
	    renderable.gad;		
} 

folder1.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "folder1.gad"
    { 
	VALUE(folder1.gad.val) STRETCH(1,0)

	TAB "Camera Plane"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    space_.gad;		
	    camera.row.join;		
	    folder0.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Transform"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    xOrd.row.join;		
	    t.gad;		
	    r.gad;		
	    s.gad;		
	    p.gad;		
	    scale.gad;		
	    lookatpath.gad;		
	    lookup.gad;		
	    pathobjpath.gad;		
	    roll.gad;		
	    pos.gad;		
	    uparmtype.gad;		
	    pathorient.gad;		
	    up.gad;		
	    bank.gad;		
	    pre_xform.gad;		
	    keeppos.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Subnet"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    label1.gad;		
	    label2.gad;		
	    label3.gad;		
	    label4.gad;		
	    tdisplay.row.join;		
	    outputobj.gad;		
	    visibleobjects.gad;		
	    picking.gad;		
	    pickscript.gad;		
	    caching.gad;		
	    use_dcolor.gad;		
	    dcolor.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    folder1.gad; 
    childcomp.gad; 
    lookupobjpath.gad; 
    pr.gad; 
    constraints_on.gad; 
    constraints_path.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
