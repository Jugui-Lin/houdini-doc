// Magic: ddc28f7f
// Automatically generated PSI dialog (PSI version 19.0.561)
// Mon Apr 11 19:30:02 2022


f_tmp = FLOAT_FIELD;	// dialog.top.ui

parmKernel.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Kernel ", "parmKernel") WIDTH(1.5);
    { WIDTH(0.09) }

    parmKernel.menu;

    { HSTRETCH }

    parmKernel.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(parmKernel.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

parmCamera.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Camera ", "parmCamera") WIDTH(1.5);
    { WIDTH(0.09) }

    parmCamera.menu;

    { HSTRETCH }

    parmCamera.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(parmCamera.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

parmEnvironment.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Environment", "parmEnvironment") WIDTH(1.5);
    { WIDTH(0.09) }

    parmEnvironment.menu;

    { HSTRETCH }

    parmEnvironment.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(parmEnvironment.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enableCameraEnvironment.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enableCameraEnvironment", "Camera texture environment") toggle VALUE(enableCameraEnvironment.val);

    { HSTRETCH }

    enableCameraEnvironment.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enableCameraEnvironment.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

maxsamples.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxsamples.label = PARM_LABEL("Max. samples", "maxsamples") WIDTH(1.5);
 PARM(integer, 1, "maxsamples", none, none) RANGE(1,100000)
	 LABELREF(maxsamples.label) HSTRETCH;

    maxsamples.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxsamples.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

GI_mode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Global illumination mode", "GI_mode") WIDTH(1.5);
    { WIDTH(0.09) }

    GI_mode.menu;

    { HSTRETCH }

    GI_mode.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(GI_mode.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

speculardepth.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 speculardepth.label = PARM_LABEL("Specular depth", "speculardepth") WIDTH(1.5);
 PARM(integer, 1, "speculardepth", none, none) RANGE(1,1024)
	 LABELREF(speculardepth.label) HSTRETCH;

    speculardepth.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(speculardepth.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

glossydepth.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 glossydepth.label = PARM_LABEL("Glossy depth", "glossydepth") WIDTH(1.5);
 PARM(integer, 1, "glossydepth", none, none) RANGE(1,1024)
	 LABELREF(glossydepth.label) HSTRETCH;

    glossydepth.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(glossydepth.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

diffusedepth.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 diffusedepth.label = PARM_LABEL("Diffuse depth", "diffusedepth") WIDTH(1.5);
 PARM(integer, 1, "diffusedepth", none, none) RANGE(1,8)
	 LABELREF(diffusedepth.label) HSTRETCH;

    diffusedepth.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(diffusedepth.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxOverlappingVolumes.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxOverlappingVolumes.label = PARM_LABEL("Maximal overlapping volumes", "maxOverlappingVolumes") WIDTH(1.5);
 PARM(integer, 1, "maxOverlappingVolumes", none, none) RANGE(4,16)
	 LABELREF(maxOverlappingVolumes.label) HSTRETCH;

    maxOverlappingVolumes.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxOverlappingVolumes.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

rayepsilon.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rayepsilon.label = PARM_LABEL("Ray epsilon", "rayepsilon") WIDTH(1.5);
 PARM(float, 1, "rayepsilon", none, none) RANGE(9.9999999999999995e-07,0.10000000000000001)
	 LABELREF(rayepsilon.label) HSTRETCH;

    rayepsilon.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rayepsilon.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

filtersize.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 filtersize.label = PARM_LABEL("Filter size", "filtersize") WIDTH(1.5);
 PARM(float, 1, "filtersize", none, none) RANGE(1,8)
	 LABELREF(filtersize.label) HSTRETCH;

    filtersize.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(filtersize.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

aodist.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 aodist.label = PARM_LABEL("AO distance", "aodist") WIDTH(1.5);
 PARM(float, 1, "aodist", none, none) RANGE(0.01,1024)
	 LABELREF(aodist.label) HSTRETCH;

    aodist.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aodist.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

alphashadows.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("alphashadows", "Alpha shadows") toggle VALUE(alphashadows.val);

    { HSTRETCH }

    alphashadows.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(alphashadows.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

nestedDielectrics.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("nestedDielectrics", "Nested dielectrics") toggle VALUE(nestedDielectrics.val);

    { HSTRETCH }

    nestedDielectrics.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(nestedDielectrics.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

irradiance.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("irradiance", "Irradiance mode") toggle VALUE(irradiance.val);

    { HSTRETCH }

    irradiance.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(irradiance.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

MaxsubdLevel.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 MaxsubdLevel.label = PARM_LABEL("Max subdivision level", "MaxsubdLevel") WIDTH(1.5);
 PARM(integer, 1, "MaxsubdLevel", none, none) RANGE(0,10)
	 LABELREF(MaxsubdLevel.label) HSTRETCH;

    MaxsubdLevel.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(MaxsubdLevel.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

alphachannel.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("alphachannel", "Alpha channel") toggle VALUE(alphachannel.val);

    { HSTRETCH }

    alphachannel.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(alphachannel.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

keep_environment.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("keep_environment", "Keep environment") toggle VALUE(keep_environment.val);

    { HSTRETCH }

    keep_environment.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(keep_environment.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

aiLight.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("aiLight", "AI light") toggle VALUE(aiLight.val);

    { HSTRETCH }

    aiLight.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aiLight.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

aiLightUpdate.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("aiLightUpdate", "AI light update") toggle VALUE(aiLightUpdate.val);

    { HSTRETCH }

    aiLightUpdate.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aiLightUpdate.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

globalLightIdMaskAction.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Light IDs action", "globalLightIdMaskAction") WIDTH(1.5);
    { WIDTH(0.09) }

    globalLightIdMaskAction.menu;

    { HSTRETCH }

    globalLightIdMaskAction.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(globalLightIdMaskAction.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

pathTermPower.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 pathTermPower.label = PARM_LABEL("Path term. power", "pathTermPower") WIDTH(1.5);
 PARM(float, 1, "pathTermPower", none, none) RANGE(0,1)
	 LABELREF(pathTermPower.label) HSTRETCH;

    pathTermPower.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(pathTermPower.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

coherentRatio.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 coherentRatio.label = PARM_LABEL("Coherent ratio", "coherentRatio") WIDTH(1.5);
 PARM(float, 1, "coherentRatio", none, none) RANGE(0,1)
	 LABELREF(coherentRatio.label) HSTRETCH;

    coherentRatio.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(coherentRatio.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

staticNoise.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("staticNoise", "Static noise") toggle VALUE(staticNoise.val);

    { HSTRETCH }

    staticNoise.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(staticNoise.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

parallelSamples.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 parallelSamples.label = PARM_LABEL("Parallel samples", "parallelSamples") WIDTH(1.5);
 PARM(integer, 1, "parallelSamples", none, none) RANGE(1,32)
	 LABELREF(parallelSamples.label) HSTRETCH;

    parallelSamples.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(parallelSamples.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxTileSamples.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxTileSamples.label = PARM_LABEL("Max. tile samples", "maxTileSamples") WIDTH(1.5);
 PARM(integer, 1, "maxTileSamples", none, none) RANGE(1,64)
	 LABELREF(maxTileSamples.label) HSTRETCH;

    maxTileSamples.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxTileSamples.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

minimizeNetTraffic.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("minimizeNetTraffic", "Minimize net traffic") toggle VALUE(minimizeNetTraffic.val);

    { HSTRETCH }

    minimizeNetTraffic.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(minimizeNetTraffic.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

adaptiveSampling.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("adaptiveSampling", "Adaptive sampling") toggle VALUE(adaptiveSampling.val);

    { HSTRETCH }

    adaptiveSampling.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(adaptiveSampling.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

noiseThreshold.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 noiseThreshold.label = PARM_LABEL("Noise threshold", "noiseThreshold") WIDTH(1.5);
 PARM(float, 1, "noiseThreshold", none, none) RANGE(0,1)
	 LABELREF(noiseThreshold.label) HSTRETCH;

    noiseThreshold.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(noiseThreshold.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

minAdaptiveSamples.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 minAdaptiveSamples.label = PARM_LABEL("Min. adaptive samples", "minAdaptiveSamples") WIDTH(1.5);
 PARM(integer, 1, "minAdaptiveSamples", none, none) RANGE(2,100000)
	 LABELREF(minAdaptiveSamples.label) HSTRETCH;

    minAdaptiveSamples.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(minAdaptiveSamples.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

adaptiveSamplingPixelGroup.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Pixel grouping", "adaptiveSamplingPixelGroup") WIDTH(1.5);
    { WIDTH(0.09) }

    adaptiveSamplingPixelGroup.menu;

    { HSTRETCH }

    adaptiveSamplingPixelGroup.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(adaptiveSamplingPixelGroup.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

adaptiveSamplingExposure.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 adaptiveSamplingExposure.label = PARM_LABEL("Expected exposure", "adaptiveSamplingExposure") WIDTH(1.5);
 PARM(float, 1, "adaptiveSamplingExposure", none, none) RANGE(0,4096)
	 LABELREF(adaptiveSamplingExposure.label) HSTRETCH;

    adaptiveSamplingExposure.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(adaptiveSamplingExposure.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

whiteLightSpectrum.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("White light spectrum", "whiteLightSpectrum") WIDTH(1.5);
    { WIDTH(0.09) }

    whiteLightSpectrum.menu;

    { HSTRETCH }

    whiteLightSpectrum.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(whiteLightSpectrum.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

useOldColorPipeline.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("useOldColorPipeline", "Use old color pipeline") toggle VALUE(useOldColorPipeline.val);

    { HSTRETCH }

    useOldColorPipeline.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(useOldColorPipeline.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

deepEnable.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("deepEnable", "Deep image") toggle VALUE(deepEnable.val);

    { HSTRETCH }

    deepEnable.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(deepEnable.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

maxDepthSamples.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxDepthSamples.label = PARM_LABEL("Max. depth samples", "maxDepthSamples") WIDTH(1.5);
 PARM(integer, 1, "maxDepthSamples", none, none) RANGE(1,32)
	 LABELREF(maxDepthSamples.label) HSTRETCH;

    maxDepthSamples.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxDepthSamples.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

depthTolerance.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 depthTolerance.label = PARM_LABEL("Depth tolerance", "depthTolerance") WIDTH(1.5);
 PARM(float, 1, "depthTolerance", none, none) RANGE(0.001,1)
	 LABELREF(depthTolerance.label) HSTRETCH;

    depthTolerance.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(depthTolerance.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

deepEnablePasses.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("deepEnablePasses", "Deep render passes") toggle VALUE(deepEnablePasses.val);

    { HSTRETCH }

    deepEnablePasses.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(deepEnablePasses.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

toonShadowAmbient.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   toonShadowAmbient.label = PARM_LABEL("Toon shadow ambient", "toonShadowAmbient") WIDTH(1.5);
   PARM(float, 3, "toonShadowAmbient", none, none, "#1,#2,#3")
	RANGE(0,1)  LABELREF(toonShadowAmbient.label)
	HSTRETCH;

    toonShadowAmbient.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(toonShadowAmbient.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

maxsamples2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxsamples2.label = PARM_LABEL("Max. samples", "maxsamples2") WIDTH(1.5);
 PARM(integer, 1, "maxsamples2", none, none) RANGE(1,100000)
	 LABELREF(maxsamples2.label) HSTRETCH;

    maxsamples2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxsamples2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxDiffuseDepth.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxDiffuseDepth.label = PARM_LABEL("Diffuse depth", "maxDiffuseDepth") WIDTH(1.5);
 PARM(integer, 1, "maxDiffuseDepth", none, none) RANGE(1,2048)
	 LABELREF(maxDiffuseDepth.label) HSTRETCH;

    maxDiffuseDepth.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxDiffuseDepth.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxGlossyDepth.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxGlossyDepth.label = PARM_LABEL("Specular depth", "maxGlossyDepth") WIDTH(1.5);
 PARM(integer, 1, "maxGlossyDepth", none, none) RANGE(1,2048)
	 LABELREF(maxGlossyDepth.label) HSTRETCH;

    maxGlossyDepth.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxGlossyDepth.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxScatterDepth.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxScatterDepth.label = PARM_LABEL("Scatter depth", "maxScatterDepth") WIDTH(1.5);
 PARM(integer, 1, "maxScatterDepth", none, none) RANGE(1,256)
	 LABELREF(maxScatterDepth.label) HSTRETCH;

    maxScatterDepth.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxScatterDepth.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxOverlappingVolumes2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxOverlappingVolumes2.label = PARM_LABEL("Maximal overlapping volumes", "maxOverlappingVolumes2") WIDTH(1.5);
 PARM(integer, 1, "maxOverlappingVolumes2", none, none) RANGE(4,16)
	 LABELREF(maxOverlappingVolumes2.label) HSTRETCH;

    maxOverlappingVolumes2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxOverlappingVolumes2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

rayepsilon2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rayepsilon2.label = PARM_LABEL("Ray epsilon", "rayepsilon2") WIDTH(1.5);
 PARM(float, 1, "rayepsilon2", none, none) RANGE(9.9999999999999995e-07,0.10000000000000001)
	 LABELREF(rayepsilon2.label) HSTRETCH;

    rayepsilon2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rayepsilon2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

filtersize2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 filtersize2.label = PARM_LABEL("Filter size", "filtersize2") WIDTH(1.5);
 PARM(float, 1, "filtersize2", none, none) RANGE(1,8)
	 LABELREF(filtersize2.label) HSTRETCH;

    filtersize2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(filtersize2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

alphashadows2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("alphashadows2", "Alpha shadows") toggle VALUE(alphashadows2.val);

    { HSTRETCH }

    alphashadows2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(alphashadows2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

caustic_blur.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 caustic_blur.label = PARM_LABEL("Caustic blur", "caustic_blur") WIDTH(1.5);
 PARM(float, 1, "caustic_blur", none, none) RANGE(0,1)
	 LABELREF(caustic_blur.label) HSTRETCH;

    caustic_blur.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(caustic_blur.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

giClamp.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 giClamp.label = PARM_LABEL("GI clamp", "giClamp") WIDTH(1.5);
 PARM(float, 1, "giClamp", none, none) RANGE(0.001,1000000)
	 LABELREF(giClamp.label) HSTRETCH;

    giClamp.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(giClamp.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

nestedDielectrics2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("nestedDielectrics2", "Nested dielectrics") toggle VALUE(nestedDielectrics2.val);

    { HSTRETCH }

    nestedDielectrics2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(nestedDielectrics2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

irradiance2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("irradiance2", "Irradiance mode") toggle VALUE(irradiance2.val);

    { HSTRETCH }

    irradiance2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(irradiance2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

MaxsubdLevel2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 MaxsubdLevel2.label = PARM_LABEL("Max subdivision level", "MaxsubdLevel2") WIDTH(1.5);
 PARM(integer, 1, "MaxsubdLevel2", none, none) RANGE(0,10)
	 LABELREF(MaxsubdLevel2.label) HSTRETCH;

    MaxsubdLevel2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(MaxsubdLevel2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

alphachannel2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("alphachannel2", "Alpha channel") toggle VALUE(alphachannel2.val);

    { HSTRETCH }

    alphachannel2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(alphachannel2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

keep_environment2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("keep_environment2", "Keep environment") toggle VALUE(keep_environment2.val);

    { HSTRETCH }

    keep_environment2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(keep_environment2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

aiLight2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("aiLight2", "AI light") toggle VALUE(aiLight2.val);

    { HSTRETCH }

    aiLight2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aiLight2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

aiLightUpdate2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("aiLightUpdate2", "AI light update") toggle VALUE(aiLightUpdate2.val);

    { HSTRETCH }

    aiLightUpdate2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aiLightUpdate2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

globalLightIdMaskAction2.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Light IDs action", "globalLightIdMaskAction2") WIDTH(1.5);
    { WIDTH(0.09) }

    globalLightIdMaskAction2.menu;

    { HSTRETCH }

    globalLightIdMaskAction2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(globalLightIdMaskAction2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

pathTermPower2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 pathTermPower2.label = PARM_LABEL("Path term. power", "pathTermPower2") WIDTH(1.5);
 PARM(float, 1, "pathTermPower2", none, none) RANGE(0,1)
	 LABELREF(pathTermPower2.label) HSTRETCH;

    pathTermPower2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(pathTermPower2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

coherentRatio2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 coherentRatio2.label = PARM_LABEL("Coherent ratio", "coherentRatio2") WIDTH(1.5);
 PARM(float, 1, "coherentRatio2", none, none) RANGE(0,1)
	 LABELREF(coherentRatio2.label) HSTRETCH;

    coherentRatio2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(coherentRatio2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

staticNoise2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("staticNoise2", "Static noise") toggle VALUE(staticNoise2.val);

    { HSTRETCH }

    staticNoise2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(staticNoise2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

parallelSamples2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 parallelSamples2.label = PARM_LABEL("Parallel samples", "parallelSamples2") WIDTH(1.5);
 PARM(integer, 1, "parallelSamples2", none, none) RANGE(1,32)
	 LABELREF(parallelSamples2.label) HSTRETCH;

    parallelSamples2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(parallelSamples2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxTileSamples2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxTileSamples2.label = PARM_LABEL("Max. tile samples", "maxTileSamples2") WIDTH(1.5);
 PARM(integer, 1, "maxTileSamples2", none, none) RANGE(1,64)
	 LABELREF(maxTileSamples2.label) HSTRETCH;

    maxTileSamples2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxTileSamples2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

minimizeNetTraffic2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("minimizeNetTraffic2", "Minimize net traffic") toggle VALUE(minimizeNetTraffic2.val);

    { HSTRETCH }

    minimizeNetTraffic2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(minimizeNetTraffic2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

adaptiveSampling2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("adaptiveSampling2", "Adaptive sampling") toggle VALUE(adaptiveSampling2.val);

    { HSTRETCH }

    adaptiveSampling2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(adaptiveSampling2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

noiseThreshold2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 noiseThreshold2.label = PARM_LABEL("Noise threshold", "noiseThreshold2") WIDTH(1.5);
 PARM(float, 1, "noiseThreshold2", none, none) RANGE(0,1)
	 LABELREF(noiseThreshold2.label) HSTRETCH;

    noiseThreshold2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(noiseThreshold2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

minAdaptiveSamples2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 minAdaptiveSamples2.label = PARM_LABEL("Min. adaptive samples", "minAdaptiveSamples2") WIDTH(1.5);
 PARM(integer, 1, "minAdaptiveSamples2", none, none) RANGE(2,100000)
	 LABELREF(minAdaptiveSamples2.label) HSTRETCH;

    minAdaptiveSamples2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(minAdaptiveSamples2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

adaptiveSamplingPixelGroup2.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Pixel grouping", "adaptiveSamplingPixelGroup2") WIDTH(1.5);
    { WIDTH(0.09) }

    adaptiveSamplingPixelGroup2.menu;

    { HSTRETCH }

    adaptiveSamplingPixelGroup2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(adaptiveSamplingPixelGroup2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

adaptiveSamplingExposure2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 adaptiveSamplingExposure2.label = PARM_LABEL("Expected exposure", "adaptiveSamplingExposure2") WIDTH(1.5);
 PARM(float, 1, "adaptiveSamplingExposure2", none, none) RANGE(0,4096)
	 LABELREF(adaptiveSamplingExposure2.label) HSTRETCH;

    adaptiveSamplingExposure2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(adaptiveSamplingExposure2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

whiteLightSpectrum2.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("White light spectrum", "whiteLightSpectrum2") WIDTH(1.5);
    { WIDTH(0.09) }

    whiteLightSpectrum2.menu;

    { HSTRETCH }

    whiteLightSpectrum2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(whiteLightSpectrum2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

useOldColorPipeline2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("useOldColorPipeline2", "Use old color pipeline") toggle VALUE(useOldColorPipeline2.val);

    { HSTRETCH }

    useOldColorPipeline2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(useOldColorPipeline2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

deepEnable2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("deepEnable2", "Deep image") toggle VALUE(deepEnable2.val);

    { HSTRETCH }

    deepEnable2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(deepEnable2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

maxDepthSamples2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxDepthSamples2.label = PARM_LABEL("Max. depth samples", "maxDepthSamples2") WIDTH(1.5);
 PARM(integer, 1, "maxDepthSamples2", none, none) RANGE(1,32)
	 LABELREF(maxDepthSamples2.label) HSTRETCH;

    maxDepthSamples2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxDepthSamples2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

depthTolerance2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 depthTolerance2.label = PARM_LABEL("Depth tolerance", "depthTolerance2") WIDTH(1.5);
 PARM(float, 1, "depthTolerance2", none, none) RANGE(0.001,1)
	 LABELREF(depthTolerance2.label) HSTRETCH;

    depthTolerance2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(depthTolerance2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

deepEnablePasses2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("deepEnablePasses2", "Deep render passes") toggle VALUE(deepEnablePasses2.val);

    { HSTRETCH }

    deepEnablePasses2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(deepEnablePasses2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

toonShadowAmbient4.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   toonShadowAmbient4.label = PARM_LABEL("Toon shadow ambient", "toonShadowAmbient4") WIDTH(1.5);
   PARM(float, 3, "toonShadowAmbient4", none, none, "#1,#2,#3")
	RANGE(0,1)  LABELREF(toonShadowAmbient4.label)
	HSTRETCH;

    toonShadowAmbient4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(toonShadowAmbient4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

maxsamples3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxsamples3.label = PARM_LABEL("Max. samples", "maxsamples3") WIDTH(1.5);
 PARM(integer, 1, "maxsamples3", none, none) RANGE(1,100000)
	 LABELREF(maxsamples3.label) HSTRETCH;

    maxsamples3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxsamples3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxDiffuseDepth2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxDiffuseDepth2.label = PARM_LABEL("Diffuse depth", "maxDiffuseDepth2") WIDTH(1.5);
 PARM(integer, 1, "maxDiffuseDepth2", none, none) RANGE(1,2048)
	 LABELREF(maxDiffuseDepth2.label) HSTRETCH;

    maxDiffuseDepth2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxDiffuseDepth2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxGlossyDepth2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxGlossyDepth2.label = PARM_LABEL("Specular depth", "maxGlossyDepth2") WIDTH(1.5);
 PARM(integer, 1, "maxGlossyDepth2", none, none) RANGE(1,2048)
	 LABELREF(maxGlossyDepth2.label) HSTRETCH;

    maxGlossyDepth2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxGlossyDepth2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxScatterDepth2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxScatterDepth2.label = PARM_LABEL("Scatter depth", "maxScatterDepth2") WIDTH(1.5);
 PARM(integer, 1, "maxScatterDepth2", none, none) RANGE(1,256)
	 LABELREF(maxScatterDepth2.label) HSTRETCH;

    maxScatterDepth2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxScatterDepth2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxOverlappingVolumes3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxOverlappingVolumes3.label = PARM_LABEL("Maximal overlapping volumes", "maxOverlappingVolumes3") WIDTH(1.5);
 PARM(integer, 1, "maxOverlappingVolumes3", none, none) RANGE(4,16)
	 LABELREF(maxOverlappingVolumes3.label) HSTRETCH;

    maxOverlappingVolumes3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxOverlappingVolumes3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

rayepsilon3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rayepsilon3.label = PARM_LABEL("Ray epsilon", "rayepsilon3") WIDTH(1.5);
 PARM(float, 1, "rayepsilon3", none, none) RANGE(9.9999999999999995e-07,0.10000000000000001)
	 LABELREF(rayepsilon3.label) HSTRETCH;

    rayepsilon3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rayepsilon3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

filtersize3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 filtersize3.label = PARM_LABEL("Filter size", "filtersize3") WIDTH(1.5);
 PARM(float, 1, "filtersize3", none, none) RANGE(1,8)
	 LABELREF(filtersize3.label) HSTRETCH;

    filtersize3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(filtersize3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

alphashadows3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("alphashadows3", "Alpha shadows") toggle VALUE(alphashadows3.val);

    { HSTRETCH }

    alphashadows3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(alphashadows3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

caustic_blur2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 caustic_blur2.label = PARM_LABEL("Caustic blur", "caustic_blur2") WIDTH(1.5);
 PARM(float, 1, "caustic_blur2", none, none) RANGE(0,1)
	 LABELREF(caustic_blur2.label) HSTRETCH;

    caustic_blur2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(caustic_blur2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

giClamp2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 giClamp2.label = PARM_LABEL("GI clamp", "giClamp2") WIDTH(1.5);
 PARM(float, 1, "giClamp2", none, none) RANGE(0.001,1000000)
	 LABELREF(giClamp2.label) HSTRETCH;

    giClamp2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(giClamp2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

nestedDielectrics3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("nestedDielectrics3", "Nested dielectrics") toggle VALUE(nestedDielectrics3.val);

    { HSTRETCH }

    nestedDielectrics3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(nestedDielectrics3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

irradiance3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("irradiance3", "Irradiance mode") toggle VALUE(irradiance3.val);

    { HSTRETCH }

    irradiance3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(irradiance3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

MaxsubdLevel3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 MaxsubdLevel3.label = PARM_LABEL("Max subdivision level", "MaxsubdLevel3") WIDTH(1.5);
 PARM(integer, 1, "MaxsubdLevel3", none, none) RANGE(0,10)
	 LABELREF(MaxsubdLevel3.label) HSTRETCH;

    MaxsubdLevel3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(MaxsubdLevel3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

alphachannel3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("alphachannel3", "Alpha channel") toggle VALUE(alphachannel3.val);

    { HSTRETCH }

    alphachannel3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(alphachannel3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

keep_environment3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("keep_environment3", "Keep environment") toggle VALUE(keep_environment3.val);

    { HSTRETCH }

    keep_environment3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(keep_environment3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

aiLight3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("aiLight3", "AI light") toggle VALUE(aiLight3.val);

    { HSTRETCH }

    aiLight3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aiLight3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

aiLightUpdate3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("aiLightUpdate3", "AI light update") toggle VALUE(aiLightUpdate3.val);

    { HSTRETCH }

    aiLightUpdate3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aiLightUpdate3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

globalLightIdMaskAction3.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Light IDs action", "globalLightIdMaskAction3") WIDTH(1.5);
    { WIDTH(0.09) }

    globalLightIdMaskAction3.menu;

    { HSTRETCH }

    globalLightIdMaskAction3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(globalLightIdMaskAction3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

pathTermPower3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 pathTermPower3.label = PARM_LABEL("Path term. power", "pathTermPower3") WIDTH(1.5);
 PARM(float, 1, "pathTermPower3", none, none) RANGE(0,1)
	 LABELREF(pathTermPower3.label) HSTRETCH;

    pathTermPower3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(pathTermPower3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

exploration_strength.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 exploration_strength.label = PARM_LABEL("Exploration strength", "exploration_strength") WIDTH(1.5);
 PARM(float, 1, "exploration_strength", none, none) RANGE(0,1)
	 LABELREF(exploration_strength.label) HSTRETCH;

    exploration_strength.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(exploration_strength.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

direct_light_importance.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 direct_light_importance.label = PARM_LABEL("Direct light importance", "direct_light_importance") WIDTH(1.5);
 PARM(float, 1, "direct_light_importance", none, none) RANGE(0.01,1)
	 LABELREF(direct_light_importance.label) HSTRETCH;

    direct_light_importance.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(direct_light_importance.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxrejects.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxrejects.label = PARM_LABEL("Max. rejects", "maxrejects") WIDTH(1.5);
 PARM(integer, 1, "maxrejects", none, none) RANGE(100,10000)
	 LABELREF(maxrejects.label) HSTRETCH;

    maxrejects.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxrejects.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

parallelism.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 parallelism.label = PARM_LABEL("Parallel samples", "parallelism") WIDTH(1.5);
 PARM(integer, 1, "parallelism", none, none) RANGE(1,8)
	 LABELREF(parallelism.label) HSTRETCH;

    parallelism.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(parallelism.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

workChunkSize.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 workChunkSize.label = PARM_LABEL("Work chunk size", "workChunkSize") WIDTH(1.5);
 PARM(integer, 1, "workChunkSize", none, none) RANGE(1,64)
	 LABELREF(workChunkSize.label) HSTRETCH;

    workChunkSize.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(workChunkSize.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

whiteLightSpectrum3.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("White light spectrum", "whiteLightSpectrum3") WIDTH(1.5);
    { WIDTH(0.09) }

    whiteLightSpectrum3.menu;

    { HSTRETCH }

    whiteLightSpectrum3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(whiteLightSpectrum3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

useOldColorPipeline3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("useOldColorPipeline3", "Use old color pipeline") toggle VALUE(useOldColorPipeline3.val);

    { HSTRETCH }

    useOldColorPipeline3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(useOldColorPipeline3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

toonShadowAmbient5.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   toonShadowAmbient5.label = PARM_LABEL("Toon shadow ambient", "toonShadowAmbient5") WIDTH(1.5);
   PARM(float, 3, "toonShadowAmbient5", none, none, "#1,#2,#3")
	RANGE(0,1)  LABELREF(toonShadowAmbient5.label)
	HSTRETCH;

    toonShadowAmbient5.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(toonShadowAmbient5.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

maxsamples4.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxsamples4.label = PARM_LABEL("Max. samples", "maxsamples4") WIDTH(1.5);
 PARM(integer, 1, "maxsamples4", none, none) RANGE(1,100000)
	 LABELREF(maxsamples4.label) HSTRETCH;

    maxsamples4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxsamples4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

type.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Type", "type") WIDTH(1.5);
    { WIDTH(0.09) }

    type.menu;

    { HSTRETCH }

    type.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(type.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

rayepsilon4.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rayepsilon4.label = PARM_LABEL("Ray epsilon", "rayepsilon4") WIDTH(1.5);
 PARM(float, 1, "rayepsilon4", none, none) RANGE(9.9999999999999995e-07,0.10000000000000001)
	 LABELREF(rayepsilon4.label) HSTRETCH;

    rayepsilon4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rayepsilon4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

filtersize4.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 filtersize4.label = PARM_LABEL("Filter size", "filtersize4") WIDTH(1.5);
 PARM(float, 1, "filtersize4", none, none) RANGE(1,8)
	 LABELREF(filtersize4.label) HSTRETCH;

    filtersize4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(filtersize4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

aodist2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 aodist2.label = PARM_LABEL("AO distance", "aodist2") WIDTH(1.5);
 PARM(float, 1, "aodist2", none, none) RANGE(0.01,1024)
	 LABELREF(aodist2.label) HSTRETCH;

    aodist2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aodist2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

aoAlphaShadows.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("aoAlphaShadows", "AO alpha shadows") toggle VALUE(aoAlphaShadows.val);

    { HSTRETCH }

    aoAlphaShadows.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aoAlphaShadows.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

opacity.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 opacity.label = PARM_LABEL("Opacity threshold", "opacity") WIDTH(1.5);
 PARM(float, 1, "opacity", none, none) RANGE(0,1)
	 LABELREF(opacity.label) HSTRETCH;

    opacity.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(opacity.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

Z_depth_max.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 Z_depth_max.label = PARM_LABEL("Maximum Z-depth", "Z_depth_max") WIDTH(1.5);
 PARM(float, 1, "Z_depth_max", none, none) RANGE(0.001,100000)
	 LABELREF(Z_depth_max.label) HSTRETCH;

    Z_depth_max.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Z_depth_max.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

UV_max.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 UV_max.label = PARM_LABEL("UV max", "UV_max") WIDTH(1.5);
 PARM(float, 1, "UV_max", none, none) RANGE(1.0000000000000001e-05,1000)
	 LABELREF(UV_max.label) HSTRETCH;

    UV_max.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(UV_max.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

uvSet.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 uvSet.label = PARM_LABEL("UV coordinate selection", "uvSet") WIDTH(1.5);
 PARM(integer, 1, "uvSet", none, none) RANGE(1,3)
	 LABELREF(uvSet.label) HSTRETCH;

    uvSet.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(uvSet.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxSpeed.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxSpeed.label = PARM_LABEL("Max speed", "maxSpeed") WIDTH(1.5);
 PARM(float, 1, "maxSpeed", none, none) RANGE(1.0000000000000001e-05,10000)
	 LABELREF(maxSpeed.label) HSTRETCH;

    maxSpeed.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxSpeed.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

samplingMode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Sampling mode", "samplingMode") WIDTH(1.5);
    { WIDTH(0.09) }

    samplingMode.menu;

    { HSTRETCH }

    samplingMode.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(samplingMode.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

bump.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bump", "Bump and normal mapping") toggle VALUE(bump.val);

    { HSTRETCH }

    bump.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bump.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

highlightBackfaces.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("highlightBackfaces", "Wireframe backface highlighting") toggle VALUE(highlightBackfaces.val);

    { HSTRETCH }

    highlightBackfaces.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(highlightBackfaces.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

MaxsubdLevel4.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 MaxsubdLevel4.label = PARM_LABEL("Max subdivision level", "MaxsubdLevel4") WIDTH(1.5);
 PARM(integer, 1, "MaxsubdLevel4", none, none) RANGE(0,10)
	 LABELREF(MaxsubdLevel4.label) HSTRETCH;

    MaxsubdLevel4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(MaxsubdLevel4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

alphachannel4.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("alphachannel4", "Alpha channel") toggle VALUE(alphachannel4.val);

    { HSTRETCH }

    alphachannel4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(alphachannel4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

parallelSamples3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 parallelSamples3.label = PARM_LABEL("Parallel samples", "parallelSamples3") WIDTH(1.5);
 PARM(integer, 1, "parallelSamples3", none, none) RANGE(1,32)
	 LABELREF(parallelSamples3.label) HSTRETCH;

    parallelSamples3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(parallelSamples3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxTileSamples3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxTileSamples3.label = PARM_LABEL("Max. tile samples", "maxTileSamples3") WIDTH(1.5);
 PARM(integer, 1, "maxTileSamples3", none, none) RANGE(1,64)
	 LABELREF(maxTileSamples3.label) HSTRETCH;

    maxTileSamples3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxTileSamples3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

minimizeNetTraffic3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("minimizeNetTraffic3", "Minimize net traffic") toggle VALUE(minimizeNetTraffic3.val);

    { HSTRETCH }

    minimizeNetTraffic3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(minimizeNetTraffic3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

whiteLightSpectrum4.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("White light spectrum", "whiteLightSpectrum4") WIDTH(1.5);
    { WIDTH(0.09) }

    whiteLightSpectrum4.menu;

    { HSTRETCH }

    whiteLightSpectrum4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(whiteLightSpectrum4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

useOldColorPipeline4.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("useOldColorPipeline4", "Use old color pipeline") toggle VALUE(useOldColorPipeline4.val);

    { HSTRETCH }

    useOldColorPipeline4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(useOldColorPipeline4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

deepEnable3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("deepEnable3", "Deep image") toggle VALUE(deepEnable3.val);

    { HSTRETCH }

    deepEnable3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(deepEnable3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

deepEnablePasses3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("deepEnablePasses3", "Deep render passes") toggle VALUE(deepEnablePasses3.val);

    { HSTRETCH }

    deepEnablePasses3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(deepEnablePasses3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

maxDepthSamples3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxDepthSamples3.label = PARM_LABEL("Max. depth samples", "maxDepthSamples3") WIDTH(1.5);
 PARM(integer, 1, "maxDepthSamples3", none, none) RANGE(1,32)
	 LABELREF(maxDepthSamples3.label) HSTRETCH;

    maxDepthSamples3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxDepthSamples3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

depthTolerance3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 depthTolerance3.label = PARM_LABEL("Depth tolerance", "depthTolerance3") WIDTH(1.5);
 PARM(float, 1, "depthTolerance3", none, none) RANGE(0.001,1)
	 LABELREF(depthTolerance3.label) HSTRETCH;

    depthTolerance3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(depthTolerance3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

distortion.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 distortion.label = PARM_LABEL("Distortion", "distortion") WIDTH(1.5);
 PARM(float, 1, "distortion", none, none) RANGE(0,1)
	 LABELREF(distortion.label) HSTRETCH;

    distortion.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(distortion.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

perspectiveCorrection.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("perspectiveCorrection", "Perspective correction") toggle VALUE(perspectiveCorrection.val);

    { HSTRETCH }

    perspectiveCorrection.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(perspectiveCorrection.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

autofocus.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("autofocus", "Auto-focus") toggle VALUE(autofocus.val);

    { HSTRETCH }

    autofocus.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(autofocus.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

apertureAspectRatio.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 apertureAspectRatio.label = PARM_LABEL("Aperture aspect ratio", "apertureAspectRatio") WIDTH(1.5);
 PARM(float, 1, "apertureAspectRatio", none, none) RANGE(0.10000000000000001,10)
	 LABELREF(apertureAspectRatio.label) HSTRETCH;

    apertureAspectRatio.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(apertureAspectRatio.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

aperture_edge.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 aperture_edge.label = PARM_LABEL("Aperture edge", "aperture_edge") WIDTH(1.5);
 PARM(float, 1, "aperture_edge", none, none) RANGE(0,3)
	 LABELREF(aperture_edge.label) HSTRETCH;

    aperture_edge.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aperture_edge.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

bokehSidecount.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 bokehSidecount.label = PARM_LABEL("Bokeh side count", "bokehSidecount") WIDTH(1.5);
 PARM(integer, 1, "bokehSidecount", none, none) RANGE(3,12)
	 LABELREF(bokehSidecount.label) HSTRETCH;

    bokehSidecount.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bokehSidecount.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

bokehRotation.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 bokehRotation.label = PARM_LABEL("Bokeh rotation", "bokehRotation") WIDTH(1.5);
 PARM(float, 1, "bokehRotation", none, none) RANGE(0,1)
	 LABELREF(bokehRotation.label) HSTRETCH;

    bokehRotation.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bokehRotation.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

bokehRoundedness.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 bokehRoundedness.label = PARM_LABEL("Bokeh roundedness", "bokehRoundedness") WIDTH(1.5);
 PARM(float, 1, "bokehRoundedness", none, none) RANGE(0,1)
	 LABELREF(bokehRoundedness.label) HSTRETCH;

    bokehRoundedness.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bokehRoundedness.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

stereoOutput.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Stereo output", "stereoOutput") WIDTH(1.5);
    { WIDTH(0.09) }

    stereoOutput.menu;

    { HSTRETCH }

    stereoOutput.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereoOutput.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

stereoMode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Stereo mode", "stereoMode") WIDTH(1.5);
    { WIDTH(0.09) }

    stereoMode.menu;

    { HSTRETCH }

    stereoMode.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereoMode.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

stereodist.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 stereodist.label = PARM_LABEL("Eye distance", "stereodist") WIDTH(1.5);
 PARM(float, 1, "stereodist", none, none) RANGE(-1,1)
	 LABELREF(stereodist.label) HSTRETCH;

    stereodist.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereodist.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

stereoSwitchEyes.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("stereoSwitchEyes", "Swap eyes") toggle VALUE(stereoSwitchEyes.val);

    { HSTRETCH }

    stereoSwitchEyes.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereoSwitchEyes.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

leftFilter.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    leftFilter.label = PARM_LABEL("Left stereo filter", "leftFilter") WIDTH(1.5);
    PARM(float, 3, "leftFilter", none, COLOR, "R,G,B") 
	LABELREF(leftFilter.label) HSTRETCH;

    leftFilter.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(leftFilter.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

rightFilter.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    rightFilter.label = PARM_LABEL("Right stereo filter", "rightFilter") WIDTH(1.5);
    PARM(float, 3, "rightFilter", none, COLOR, "R,G,B") 
	LABELREF(rightFilter.label) HSTRETCH;

    rightFilter.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rightFilter.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

cameramode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Projection", "cameramode") WIDTH(1.5);
    { WIDTH(0.09) }

    cameramode.menu;

    { HSTRETCH }

    cameramode.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(cameramode.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

fovx.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 fovx.label = PARM_LABEL("Horizontal field of view", "fovx") WIDTH(1.5);
 PARM(float, 1, "fovx", none, none) RANGE(1,360)
	 LABELREF(fovx.label) HSTRETCH;

    fovx.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(fovx.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

fovy.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 fovy.label = PARM_LABEL("Vertical field of view", "fovy") WIDTH(1.5);
 PARM(float, 1, "fovy", none, none) RANGE(1,180)
	 LABELREF(fovy.label) HSTRETCH;

    fovy.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(fovy.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

keepUpright.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("keepUpright", "Keep upright") toggle VALUE(keepUpright.val);

    { HSTRETCH }

    keepUpright.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(keepUpright.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

autofocus2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("autofocus2", "Auto-focus") toggle VALUE(autofocus2.val);

    { HSTRETCH }

    autofocus2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(autofocus2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

apertureAspectRatio2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 apertureAspectRatio2.label = PARM_LABEL("Aperture aspect ratio", "apertureAspectRatio2") WIDTH(1.5);
 PARM(float, 1, "apertureAspectRatio2", none, none) RANGE(0.10000000000000001,10)
	 LABELREF(apertureAspectRatio2.label) HSTRETCH;

    apertureAspectRatio2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(apertureAspectRatio2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

aperture_edge2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 aperture_edge2.label = PARM_LABEL("Aperture edge", "aperture_edge2") WIDTH(1.5);
 PARM(float, 1, "aperture_edge2", none, none) RANGE(0,3)
	 LABELREF(aperture_edge2.label) HSTRETCH;

    aperture_edge2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aperture_edge2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

bokehSidecount2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 bokehSidecount2.label = PARM_LABEL("Bokeh side count", "bokehSidecount2") WIDTH(1.5);
 PARM(integer, 1, "bokehSidecount2", none, none) RANGE(3,12)
	 LABELREF(bokehSidecount2.label) HSTRETCH;

    bokehSidecount2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bokehSidecount2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

bokehRotation2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 bokehRotation2.label = PARM_LABEL("Bokeh rotation", "bokehRotation2") WIDTH(1.5);
 PARM(float, 1, "bokehRotation2", none, none) RANGE(0,1)
	 LABELREF(bokehRotation2.label) HSTRETCH;

    bokehRotation2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bokehRotation2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

bokehRoundedness2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 bokehRoundedness2.label = PARM_LABEL("Bokeh roundedness", "bokehRoundedness2") WIDTH(1.5);
 PARM(float, 1, "bokehRoundedness2", none, none) RANGE(0,1)
	 LABELREF(bokehRoundedness2.label) HSTRETCH;

    bokehRoundedness2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bokehRoundedness2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

stereoOutput2.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Stereo output", "stereoOutput2") WIDTH(1.5);
    { WIDTH(0.09) }

    stereoOutput2.menu;

    { HSTRETCH }

    stereoOutput2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereoOutput2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

stereodist2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 stereodist2.label = PARM_LABEL("Eye distance", "stereodist2") WIDTH(1.5);
 PARM(float, 1, "stereodist2", none, none) RANGE(-1,1)
	 LABELREF(stereodist2.label) HSTRETCH;

    stereodist2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereodist2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

stereoDistFalloff.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 stereoDistFalloff.label = PARM_LABEL("Eye distance falloff", "stereoDistFalloff") WIDTH(1.5);
 PARM(float, 1, "stereoDistFalloff", none, none) RANGE(0.001,1)
	 LABELREF(stereoDistFalloff.label) HSTRETCH;

    stereoDistFalloff.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereoDistFalloff.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

stereoCutoffLatitude.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 stereoCutoffLatitude.label = PARM_LABEL("Pano blackout latitude", "stereoCutoffLatitude") WIDTH(1.5);
 PARM(float, 1, "stereoCutoffLatitude", none, none) RANGE(1,90)
	 LABELREF(stereoCutoffLatitude.label) HSTRETCH;

    stereoCutoffLatitude.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereoCutoffLatitude.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

stereoSwitchEyes2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("stereoSwitchEyes2", "Swap eyes") toggle VALUE(stereoSwitchEyes2.val);

    { HSTRETCH }

    stereoSwitchEyes2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereoSwitchEyes2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

leftFilter2.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    leftFilter2.label = PARM_LABEL("Left stereo filter", "leftFilter2") WIDTH(1.5);
    PARM(float, 3, "leftFilter2", none, COLOR, "R,G,B") 
	LABELREF(leftFilter2.label) HSTRETCH;

    leftFilter2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(leftFilter2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

rightFilter2.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    rightFilter2.label = PARM_LABEL("Right stereo filter", "rightFilter2") WIDTH(1.5);
    PARM(float, 3, "rightFilter2", none, COLOR, "R,G,B") 
	LABELREF(rightFilter2.label) HSTRETCH;

    rightFilter2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rightFilter2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

bakingGroupId.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 bakingGroupId.label = PARM_LABEL("Baking group ID", "bakingGroupId") WIDTH(1.5);
 PARM(integer, 1, "bakingGroupId", none, none) RANGE(1,65535)
	 LABELREF(bakingGroupId.label) HSTRETCH;

    bakingGroupId.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bakingGroupId.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

uvSet2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 uvSet2.label = PARM_LABEL("UV set", "uvSet2") WIDTH(1.5);
 PARM(integer, 1, "uvSet2", none, none) RANGE(1,3)
	 LABELREF(uvSet2.label) HSTRETCH;

    uvSet2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(uvSet2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

bakeOutwards.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bakeOutwards", "Revert baking") toggle VALUE(bakeOutwards.val);

    { HSTRETCH }

    bakeOutwards.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bakeOutwards.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

padding.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 padding.label = PARM_LABEL("Size", "padding") WIDTH(1.5);
 PARM(integer, 1, "padding", none, none) RANGE(0,16)
	 LABELREF(padding.label) HSTRETCH;

    padding.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(padding.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

tolerance.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 tolerance.label = PARM_LABEL("Edge noise tolerance", "tolerance") WIDTH(1.5);
 PARM(float, 1, "tolerance", none, none) RANGE(0,1)
	 LABELREF(tolerance.label) HSTRETCH;

    tolerance.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(tolerance.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

bakingUvBoxMin.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   bakingUvBoxMin.label = PARM_LABEL("Minimum", "bakingUvBoxMin") WIDTH(1.5);
   PARM(float, 2, "bakingUvBoxMin", none, none, "#1,#2")
	RANGE(-1,1)  LABELREF(bakingUvBoxMin.label)
	HSTRETCH;

    bakingUvBoxMin.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bakingUvBoxMin.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

bakingUvBoxSize.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   bakingUvBoxSize.label = PARM_LABEL("Size", "bakingUvBoxSize") WIDTH(1.5);
   PARM(float, 2, "bakingUvBoxSize", none, none, "#1,#2")
	RANGE(0.0001,1)  LABELREF(bakingUvBoxSize.label)
	HSTRETCH;

    bakingUvBoxSize.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bakingUvBoxSize.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

bakeFromPosition.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bakeFromPosition", "Use baking position") toggle VALUE(bakeFromPosition.val);

    { HSTRETCH }

    bakeFromPosition.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bakeFromPosition.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

pos.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   pos.label = PARM_LABEL("Position", "pos") WIDTH(1.5);
   PARM(float, 3, "pos", none, none, "#1,#2,#3")
	RANGE(-1,1)  LABELREF(pos.label)
	HSTRETCH;

    pos.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(pos.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

bakeBackfaceCulling.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bakeBackfaceCulling", "Backface culling") toggle VALUE(bakeBackfaceCulling.val);

    { HSTRETCH }

    bakeBackfaceCulling.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bakeBackfaceCulling.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

mode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Camera mode", "mode") WIDTH(1.5);
    { WIDTH(0.09) }

    mode.menu;

    { HSTRETCH }

    mode.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(mode.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

fisheyeAngle.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 fisheyeAngle.label = PARM_LABEL("Fisheye angle", "fisheyeAngle") WIDTH(1.5);
 PARM(float, 1, "fisheyeAngle", none, none) RANGE(1,360)
	 LABELREF(fisheyeAngle.label) HSTRETCH;

    fisheyeAngle.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(fisheyeAngle.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

fisheyeType.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Fisheye type", "fisheyeType") WIDTH(1.5);
    { WIDTH(0.09) }

    fisheyeType.menu;

    { HSTRETCH }

    fisheyeType.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(fisheyeType.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

hardVignette.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("hardVignette", "Hard vignette") toggle VALUE(hardVignette.val);

    { HSTRETCH }

    hardVignette.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(hardVignette.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

fisheyeProjection.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Fisheye projection", "fisheyeProjection") WIDTH(1.5);
    { WIDTH(0.09) }

    fisheyeProjection.menu;

    { HSTRETCH }

    fisheyeProjection.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(fisheyeProjection.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

fovx2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 fovx2.label = PARM_LABEL("Horizontal field of view", "fovx2") WIDTH(1.5);
 PARM(float, 1, "fovx2", none, none) RANGE(1,360)
	 LABELREF(fovx2.label) HSTRETCH;

    fovx2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(fovx2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

fovy2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 fovy2.label = PARM_LABEL("Vertical field of view", "fovy2") WIDTH(1.5);
 PARM(float, 1, "fovy2", none, none) RANGE(1,180)
	 LABELREF(fovy2.label) HSTRETCH;

    fovy2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(fovy2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

cubemapLayout.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Cubemap layout", "cubemapLayout") WIDTH(1.5);
    { WIDTH(0.09) }

    cubemapLayout.menu;

    { HSTRETCH }

    cubemapLayout.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(cubemapLayout.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

equiAngularCubemap.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("equiAngularCubemap", "Equi-angular cubemap") toggle VALUE(equiAngularCubemap.val);

    { HSTRETCH }

    equiAngularCubemap.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(equiAngularCubemap.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

useDistortionTexture.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("useDistortionTexture", "Use distortion texture") toggle VALUE(useDistortionTexture.val);

    { HSTRETCH }

    useDistortionTexture.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(useDistortionTexture.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

distortionTexture.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    distortionTexture.label = PARM_LABEL("Distortion texture", "distortionTexture") WIDTH(1.5);
    PARM(float, 3, "distortionTexture", none, COLOR, "R,G,B") 
	LABELREF(distortionTexture.label) HSTRETCH;

    distortionTexture.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(distortionTexture.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sphericalDistortion.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 sphericalDistortion.label = PARM_LABEL("Spherical distortion", "sphericalDistortion") WIDTH(1.5);
 PARM(float, 1, "sphericalDistortion", none, none) RANGE(0,1)
	 LABELREF(sphericalDistortion.label) HSTRETCH;

    sphericalDistortion.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(sphericalDistortion.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

barrelDistortion.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 barrelDistortion.label = PARM_LABEL("Barrel distortion", "barrelDistortion") WIDTH(1.5);
 PARM(float, 1, "barrelDistortion", none, none) RANGE(-0.5,0.5)
	 LABELREF(barrelDistortion.label) HSTRETCH;

    barrelDistortion.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(barrelDistortion.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

barrelDistortionCorners.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 barrelDistortionCorners.label = PARM_LABEL("Barrel distortion corners", "barrelDistortionCorners") WIDTH(1.5);
 PARM(float, 1, "barrelDistortionCorners", none, none) RANGE(-0.5,0.5)
	 LABELREF(barrelDistortionCorners.label) HSTRETCH;

    barrelDistortionCorners.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(barrelDistortionCorners.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

sphericalAberration.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 sphericalAberration.label = PARM_LABEL("Spherical aberration", "sphericalAberration") WIDTH(1.5);
 PARM(float, 1, "sphericalAberration", none, none) RANGE(-0.20000000000000001,0.20000000000000001)
	 LABELREF(sphericalAberration.label) HSTRETCH;

    sphericalAberration.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(sphericalAberration.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

coma.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 coma.label = PARM_LABEL("Coma", "coma") WIDTH(1.5);
 PARM(float, 1, "coma", none, none) RANGE(-0.25,0.25)
	 LABELREF(coma.label) HSTRETCH;

    coma.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(coma.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

astigmatism.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 astigmatism.label = PARM_LABEL("Astigmatism", "astigmatism") WIDTH(1.5);
 PARM(float, 1, "astigmatism", none, none) RANGE(-1,1)
	 LABELREF(astigmatism.label) HSTRETCH;

    astigmatism.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(astigmatism.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

fieldCurvature.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 fieldCurvature.label = PARM_LABEL("Field curvature", "fieldCurvature") WIDTH(1.5);
 PARM(float, 1, "fieldCurvature", none, none) RANGE(-1,1)
	 LABELREF(fieldCurvature.label) HSTRETCH;

    fieldCurvature.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(fieldCurvature.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

autofocus3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("autofocus3", "Auto-focus") toggle VALUE(autofocus3.val);

    { HSTRETCH }

    autofocus3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(autofocus3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

apertureAspectRatio3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 apertureAspectRatio3.label = PARM_LABEL("Aperture aspect ratio", "apertureAspectRatio3") WIDTH(1.5);
 PARM(float, 1, "apertureAspectRatio3", none, none) RANGE(0.10000000000000001,10)
	 LABELREF(apertureAspectRatio3.label) HSTRETCH;

    apertureAspectRatio3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(apertureAspectRatio3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

apertureShape.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Aperture shape", "apertureShape") WIDTH(1.5);
    { WIDTH(0.09) }

    apertureShape.menu;

    { HSTRETCH }

    apertureShape.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(apertureShape.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

aperture_edge3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 aperture_edge3.label = PARM_LABEL("Aperture edge", "aperture_edge3") WIDTH(1.5);
 PARM(float, 1, "aperture_edge3", none, none) RANGE(0,3)
	 LABELREF(aperture_edge3.label) HSTRETCH;

    aperture_edge3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aperture_edge3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

bokehSidecount3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 bokehSidecount3.label = PARM_LABEL("Aperture blade count", "bokehSidecount3") WIDTH(1.5);
 PARM(integer, 1, "bokehSidecount3", none, none) RANGE(3,12)
	 LABELREF(bokehSidecount3.label) HSTRETCH;

    bokehSidecount3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bokehSidecount3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

bokehRotation3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 bokehRotation3.label = PARM_LABEL("Aperture rotation", "bokehRotation3") WIDTH(1.5);
 PARM(float, 1, "bokehRotation3", none, none) RANGE(-360,360)
	 LABELREF(bokehRotation3.label) HSTRETCH;

    bokehRotation3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bokehRotation3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

bokehRoundedness3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 bokehRoundedness3.label = PARM_LABEL("Aperture roundedness", "bokehRoundedness3") WIDTH(1.5);
 PARM(float, 1, "bokehRoundedness3", none, none) RANGE(-1,1)
	 LABELREF(bokehRoundedness3.label) HSTRETCH;

    bokehRoundedness3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bokehRoundedness3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

centralObstruction.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 centralObstruction.label = PARM_LABEL("Central obstruction", "centralObstruction") WIDTH(1.5);
 PARM(float, 1, "centralObstruction", none, none) RANGE(0,1)
	 LABELREF(centralObstruction.label) HSTRETCH;

    centralObstruction.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(centralObstruction.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

notchPosition.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 notchPosition.label = PARM_LABEL("Notch position", "notchPosition") WIDTH(1.5);
 PARM(float, 1, "notchPosition", none, none) RANGE(-1,1)
	 LABELREF(notchPosition.label) HSTRETCH;

    notchPosition.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(notchPosition.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

notchScale.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 notchScale.label = PARM_LABEL("Notch scale", "notchScale") WIDTH(1.5);
 PARM(float, 1, "notchScale", none, none) RANGE(0,1)
	 LABELREF(notchScale.label) HSTRETCH;

    notchScale.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(notchScale.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

customAperture.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    customAperture.label = PARM_LABEL("Custom aperture", "customAperture") WIDTH(1.5);
    PARM(float, 3, "customAperture", none, COLOR, "R,G,B") 
	LABELREF(customAperture.label) HSTRETCH;

    customAperture.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(customAperture.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

opticalVignetteDistance.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 opticalVignetteDistance.label = PARM_LABEL("Optical vignette distance", "opticalVignetteDistance") WIDTH(1.5);
 PARM(float, 1, "opticalVignetteDistance", none, none) RANGE(-0.5,0.5)
	 LABELREF(opticalVignetteDistance.label) HSTRETCH;

    opticalVignetteDistance.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(opticalVignetteDistance.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

opticalVignetteScale.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 opticalVignetteScale.label = PARM_LABEL("Optical vignette scale", "opticalVignetteScale") WIDTH(1.5);
 PARM(float, 1, "opticalVignetteScale", none, none) RANGE(1,4)
	 LABELREF(opticalVignetteScale.label) HSTRETCH;

    opticalVignetteScale.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(opticalVignetteScale.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

diopterEnable.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("diopterEnable", "Enable split-focus diopter") toggle VALUE(diopterEnable.val);

    { HSTRETCH }

    diopterEnable.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(diopterEnable.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

diopterFocalDepth.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 diopterFocalDepth.label = PARM_LABEL("Diopter focal depth", "diopterFocalDepth") WIDTH(1.5);
 PARM(float, 1, "diopterFocalDepth", none, none) RANGE(0.01,1000)
	 LABELREF(diopterFocalDepth.label) HSTRETCH;

    diopterFocalDepth.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(diopterFocalDepth.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

diopterRotation.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 diopterRotation.label = PARM_LABEL("Diopter rotation", "diopterRotation") WIDTH(1.5);
 PARM(float, 1, "diopterRotation", none, none) RANGE(-360,360)
	 LABELREF(diopterRotation.label) HSTRETCH;

    diopterRotation.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(diopterRotation.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

diopterTranslation.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   diopterTranslation.label = PARM_LABEL("Diopter translation", "diopterTranslation") WIDTH(1.5);
   PARM(float, 2, "diopterTranslation", none, none, "#1,#2")
	RANGE(-1,1)  LABELREF(diopterTranslation.label)
	HSTRETCH;

    diopterTranslation.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(diopterTranslation.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

diopterBoundaryWidth.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 diopterBoundaryWidth.label = PARM_LABEL("Diopter boundary width", "diopterBoundaryWidth") WIDTH(1.5);
 PARM(float, 1, "diopterBoundaryWidth", none, none) RANGE(0,1)
	 LABELREF(diopterBoundaryWidth.label) HSTRETCH;

    diopterBoundaryWidth.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(diopterBoundaryWidth.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

diopterBoundaryFalloff.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 diopterBoundaryFalloff.label = PARM_LABEL("Diopter boundary falloff", "diopterBoundaryFalloff") WIDTH(1.5);
 PARM(float, 1, "diopterBoundaryFalloff", none, none) RANGE(0,1)
	 LABELREF(diopterBoundaryFalloff.label) HSTRETCH;

    diopterBoundaryFalloff.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(diopterBoundaryFalloff.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

diopterShowGuide.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("diopterShowGuide", "Show diopter guide") toggle VALUE(diopterShowGuide.val);

    { HSTRETCH }

    diopterShowGuide.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(diopterShowGuide.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

keepUpright2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("keepUpright2", "Keep upright") toggle VALUE(keepUpright2.val);

    { HSTRETCH }

    keepUpright2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(keepUpright2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

A_FILENAME.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 A_FILENAME.label = PARM_LABEL("filename", "A_FILENAME") WIDTH(1.5);

 PARM_FIELD (pathstring, "A_FILENAME") LABELREF(A_FILENAME.label)
	VALUE(A_FILENAME.val) HSTRETCH;

    A_FILENAME.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(A_FILENAME.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

    A_FILENAME.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(A_FILENAME.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

HO_OSL_rawCode.gad = ROW
{

    HSTRETCH JUSTIFY(left, top) HMARGIN(0.18, 0.1)
        NO_MARGIN_SPACING_SCALE

    HO_OSL_rawCode.label = PARM_LABEL("OSL Code", "HO_OSL_rawCode");

    MULTILINE_PARM_FIELD ("HO_OSL_rawCode") 

    	LABELREF(HO_OSL_rawCode.label) 

    	VALUE(HO_OSL_rawCode.val) 
    	SYNTAX("") 
    	LINES(8,40) 
    	HSTRETCH;

    {

	LAYOUT(vertical)
	{
	    SIZE(0, 0.26)
	}

    HO_OSL_rawCode.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(HO_OSL_rawCode.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    }

}

sepparm2.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

HO_OSL_compile.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("HO_OSL_compile", "Compile and Build GUI")
	push VALUE(HO_OSL_compile.val);

    { WIDTH(0.1) }
}

sepparm3.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

stereoOutput3.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Stereo output", "stereoOutput3") WIDTH(1.5);
    { WIDTH(0.09) }

    stereoOutput3.menu;

    { HSTRETCH }

    stereoOutput3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereoOutput3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

stereoMode2.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Stereo mode", "stereoMode2") WIDTH(1.5);
    { WIDTH(0.09) }

    stereoMode2.menu;

    { HSTRETCH }

    stereoMode2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereoMode2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

stereodist3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 stereodist3.label = PARM_LABEL("Eye distance", "stereodist3") WIDTH(1.5);
 PARM(float, 1, "stereodist3", none, none) RANGE(0,1)
	 LABELREF(stereodist3.label) HSTRETCH;

    stereodist3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereodist3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

stereoSwitchEyes3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("stereoSwitchEyes3", "Swap eyes") toggle VALUE(stereoSwitchEyes3.val);

    { HSTRETCH }

    stereoSwitchEyes3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(stereoSwitchEyes3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

leftFilter3.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    leftFilter3.label = PARM_LABEL("Left stereo filter", "leftFilter3") WIDTH(1.5);
    PARM(float, 3, "leftFilter3", none, COLOR, "R,G,B") 
	LABELREF(leftFilter3.label) HSTRETCH;

    leftFilter3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(leftFilter3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

rightFilter3.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    rightFilter3.label = PARM_LABEL("Right stereo filter", "rightFilter3") WIDTH(1.5);
    PARM(float, 3, "rightFilter3", none, COLOR, "R,G,B") 
	LABELREF(rightFilter3.label) HSTRETCH;

    rightFilter3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rightFilter3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

exposure.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 exposure.label = PARM_LABEL("Exposure", "exposure") WIDTH(1.5);
 PARM(float, 1, "exposure", none, none) RANGE(1.0000000000000001e-05,4096)
	 LABELREF(exposure.label) HSTRETCH;

    exposure.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(exposure.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

hotpixel_removal.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 hotpixel_removal.label = PARM_LABEL("Hot pixel removal", "hotpixel_removal") WIDTH(1.5);
 PARM(float, 1, "hotpixel_removal", none, none) RANGE(0,1)
	 LABELREF(hotpixel_removal.label) HSTRETCH;

    hotpixel_removal.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(hotpixel_removal.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

vignetting.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 vignetting.label = PARM_LABEL("Vignetting", "vignetting") WIDTH(1.5);
 PARM(float, 1, "vignetting", none, none) RANGE(0,1)
	 LABELREF(vignetting.label) HSTRETCH;

    vignetting.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(vignetting.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

white_balance.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    white_balance.label = PARM_LABEL("White point", "white_balance") WIDTH(1.5);
    PARM(float, 3, "white_balance", none, COLOR, "R,G,B") 
	LABELREF(white_balance.label) HSTRETCH;

    white_balance.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(white_balance.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

saturation.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 saturation.label = PARM_LABEL("Saturation", "saturation") WIDTH(1.5);
 PARM(float, 1, "saturation", none, none) RANGE(0,4)
	 LABELREF(saturation.label) HSTRETCH;

    saturation.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(saturation.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

premultiplied_alpha.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("premultiplied_alpha", "Pre-multiplied alpha") toggle VALUE(premultiplied_alpha.val);

    { HSTRETCH }

    premultiplied_alpha.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(premultiplied_alpha.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

disablePartialAlpha.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("disablePartialAlpha", "Disable partial alpha") toggle VALUE(disablePartialAlpha.val);

    { HSTRETCH }

    disablePartialAlpha.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(disablePartialAlpha.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

dithering.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("dithering", "Dithering") toggle VALUE(dithering.val);

    { HSTRETCH }

    dithering.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(dithering.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

min_display_samples.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 min_display_samples.label = PARM_LABEL("Minimum display samples", "min_display_samples") WIDTH(1.5);
 PARM(integer, 1, "min_display_samples", none, none) RANGE(1,32)
	 LABELREF(min_display_samples.label) HSTRETCH;

    min_display_samples.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(min_display_samples.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxTonemapInterval.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxTonemapInterval.label = PARM_LABEL("Max. image interval", "maxTonemapInterval") WIDTH(1.5);
 PARM(integer, 1, "maxTonemapInterval", none, none) RANGE(1,120)
	 LABELREF(maxTonemapInterval.label) HSTRETCH;

    maxTonemapInterval.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxTonemapInterval.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

A_OCIO_DISPLAY_NAME.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("ocioDisplayName", "A_OCIO_DISPLAY_NAME") WIDTH(1.5);
    { WIDTH(0.09) }

    A_OCIO_DISPLAY_NAME.menu;

    { HSTRETCH }

    A_OCIO_DISPLAY_NAME.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(A_OCIO_DISPLAY_NAME.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

A_OCIO_VIEW_NAME.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("ocioViewName", "A_OCIO_VIEW_NAME") WIDTH(1.5);
    { WIDTH(0.09) }

    A_OCIO_VIEW_NAME.menu;

    { HSTRETCH }

    A_OCIO_VIEW_NAME.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(A_OCIO_VIEW_NAME.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

A_OCIO_USE_VIEW_LOOK.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("A_OCIO_USE_VIEW_LOOK", "ocioUseViewLook") toggle VALUE(A_OCIO_USE_VIEW_LOOK.val);

    { HSTRETCH }

    A_OCIO_USE_VIEW_LOOK.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(A_OCIO_USE_VIEW_LOOK.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

A_OCIO_LOOK_NAME.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("ocioLookName", "A_OCIO_LOOK_NAME") WIDTH(1.5);
    { WIDTH(0.09) }

    A_OCIO_LOOK_NAME.menu;

    { HSTRETCH }

    A_OCIO_LOOK_NAME.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(A_OCIO_LOOK_NAME.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

ocioForceToneMapping.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("ocioForceToneMapping", "Force tone mapping") toggle VALUE(ocioForceToneMapping.val);

    { HSTRETCH }

    ocioForceToneMapping.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(ocioForceToneMapping.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

highlightCompression.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 highlightCompression.label = PARM_LABEL("Highlight compression", "highlightCompression") WIDTH(1.5);
 PARM(float, 1, "highlightCompression", none, none) RANGE(0,1)
	 LABELREF(highlightCompression.label) HSTRETCH;

    highlightCompression.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(highlightCompression.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

saturate_to_white.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 saturate_to_white.label = PARM_LABEL("Saturate to white", "saturate_to_white") WIDTH(1.5);
 PARM(float, 1, "saturate_to_white", none, none) RANGE(0,1)
	 LABELREF(saturate_to_white.label) HSTRETCH;

    saturate_to_white.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(saturate_to_white.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

order.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Order", "order") WIDTH(1.5);
    { WIDTH(0.09) }

    order.menu;

    { HSTRETCH }

    order.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(order.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

response.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Response curve", "response") WIDTH(1.5);
    { WIDTH(0.09) }

    response.menu;

    { HSTRETCH }

    response.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(response.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

neutralResponse.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("neutralResponse", "Neutral response") toggle VALUE(neutralResponse.val);

    { HSTRETCH }

    neutralResponse.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(neutralResponse.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

gamma.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 gamma.label = PARM_LABEL("Gamma", "gamma") WIDTH(1.5);
 PARM(float, 1, "gamma", none, none) RANGE(0.10000000000000001,32)
	 LABELREF(gamma.label) HSTRETCH;

    gamma.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(gamma.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

switch.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("switch", "Enable") toggle VALUE(switch.val);

    { HSTRETCH }

    switch.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(switch.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

strength.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 strength.label = PARM_LABEL("Strength", "strength") WIDTH(1.5);
 PARM(float, 1, "strength", none, none) RANGE(0,1)
	 LABELREF(strength.label) HSTRETCH;

    strength.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(strength.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

A_FILENAME2.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 A_FILENAME2.label = PARM_LABEL("filename", "A_FILENAME2") WIDTH(1.5);

 PARM_FIELD (pathstring, "A_FILENAME2") LABELREF(A_FILENAME2.label)
	VALUE(A_FILENAME2.val) HSTRETCH;

    A_FILENAME2.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(A_FILENAME2.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

    A_FILENAME2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(A_FILENAME2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

denoiser.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("denoiser", "Enable denoising") toggle VALUE(denoiser.val);

    { HSTRETCH }

    denoiser.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(denoiser.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

denoiseVolume.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("denoiseVolume", "Denoise volumes") toggle VALUE(denoiseVolume.val);

    { HSTRETCH }

    denoiseVolume.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(denoiseVolume.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

denoiserOnce.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("denoiserOnce", "Denoise on completion") toggle VALUE(denoiserOnce.val);

    { HSTRETCH }

    denoiserOnce.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(denoiserOnce.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

minDenoiserSamples.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 minDenoiserSamples.label = PARM_LABEL("Min. denoiser samples", "minDenoiserSamples") WIDTH(1.5);
 PARM(integer, 1, "minDenoiserSamples", none, none) RANGE(1,100000)
	 LABELREF(minDenoiserSamples.label) HSTRETCH;

    minDenoiserSamples.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(minDenoiserSamples.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxDenoiserInterval.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxDenoiserInterval.label = PARM_LABEL("Max. denoiser interval", "maxDenoiserInterval") WIDTH(1.5);
 PARM(integer, 1, "maxDenoiserInterval", none, none) RANGE(1,120)
	 LABELREF(maxDenoiserInterval.label) HSTRETCH;

    maxDenoiserInterval.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxDenoiserInterval.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

denoiserOriginalBlend.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 denoiserOriginalBlend.label = PARM_LABEL("Blend", "denoiserOriginalBlend") WIDTH(1.5);
 PARM(float, 1, "denoiserOriginalBlend", none, none) RANGE(0,1)
	 LABELREF(denoiserOriginalBlend.label) HSTRETCH;

    denoiserOriginalBlend.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(denoiserOriginalBlend.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

upsamplingEnabled.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("upsamplingEnabled", "Enable AI upsampling") toggle VALUE(upsamplingEnabled.val);

    { HSTRETCH }

    upsamplingEnabled.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(upsamplingEnabled.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

upsamplingOnCompletion.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("upsamplingOnCompletion", "Upsample on completion") toggle VALUE(upsamplingOnCompletion.val);

    { HSTRETCH }

    upsamplingOnCompletion.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(upsamplingOnCompletion.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

minUpsamplingSamples.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 minUpsamplingSamples.label = PARM_LABEL("Min. upsampler samples", "minUpsamplingSamples") WIDTH(1.5);
 PARM(integer, 1, "minUpsamplingSamples", none, none) RANGE(1,100000)
	 LABELREF(minUpsamplingSamples.label) HSTRETCH;

    minUpsamplingSamples.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(minUpsamplingSamples.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

maxUpsamplingInterval.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxUpsamplingInterval.label = PARM_LABEL("Max. upsampler interval", "maxUpsamplingInterval") WIDTH(1.5);
 PARM(integer, 1, "maxUpsamplingInterval", none, none) RANGE(1,120)
	 LABELREF(maxUpsamplingInterval.label) HSTRETCH;

    maxUpsamplingInterval.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxUpsamplingInterval.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

filmUpSamplingMode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Upsampler mode", "filmUpSamplingMode") WIDTH(1.5);
    { WIDTH(0.09) }

    filmUpSamplingMode.menu;

    { HSTRETCH }

    filmUpSamplingMode.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(filmUpSamplingMode.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

latitude.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 latitude.label = PARM_LABEL("Latitude", "latitude") WIDTH(1.5);
 PARM(float, 1, "latitude", none, none) RANGE(-90,90)
	 LABELREF(latitude.label) HSTRETCH;

    latitude.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(latitude.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

longitude.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 longitude.label = PARM_LABEL("Longitude", "longitude") WIDTH(1.5);
 PARM(float, 1, "longitude", none, none) RANGE(-180,180)
	 LABELREF(longitude.label) HSTRETCH;

    longitude.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(longitude.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

month.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 month.label = PARM_LABEL("Month", "month") WIDTH(1.5);
 PARM(integer, 1, "month", none, none) RANGE(1,12)
	 LABELREF(month.label) HSTRETCH;

    month.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(month.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

day.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 day.label = PARM_LABEL("Day", "day") WIDTH(1.5);
 PARM(integer, 1, "day", none, none) RANGE(1,31)
	 LABELREF(day.label) HSTRETCH;

    day.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(day.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

hour.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 hour.label = PARM_LABEL("Local time", "hour") WIDTH(1.5);
 PARM(float, 1, "hour", none, none) RANGE(0,24)
	 LABELREF(hour.label) HSTRETCH;

    hour.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(hour.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

gmtoffset.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 gmtoffset.label = PARM_LABEL("GMT offset", "gmtoffset") WIDTH(1.5);
 PARM(integer, 1, "gmtoffset", none, none) RANGE(-12,12)
	 LABELREF(gmtoffset.label) HSTRETCH;

    gmtoffset.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(gmtoffset.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

turbidity.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 turbidity.label = PARM_LABEL("Sky turbidity", "turbidity") WIDTH(1.5);
 PARM(float, 1, "turbidity", none, none) RANGE(2,15)
	 LABELREF(turbidity.label) HSTRETCH;

    turbidity.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(turbidity.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

power.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 power.label = PARM_LABEL("Power", "power") WIDTH(1.5);
 PARM(float, 1, "power", none, none) RANGE(0,1000)
	 LABELREF(power.label) HSTRETCH;

    power.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(power.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

sunIntensity.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 sunIntensity.label = PARM_LABEL("Sun intensity", "sunIntensity") WIDTH(1.5);
 PARM(float, 1, "sunIntensity", none, none) RANGE(0,1000)
	 LABELREF(sunIntensity.label) HSTRETCH;

    sunIntensity.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(sunIntensity.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

northoffset.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 northoffset.label = PARM_LABEL("North offset", "northoffset") WIDTH(1.5);
 PARM(float, 1, "northoffset", none, none) RANGE(-1,1)
	 LABELREF(northoffset.label) HSTRETCH;

    northoffset.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(northoffset.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

model.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Daylight model", "model") WIDTH(1.5);
    { WIDTH(0.09) }

    model.menu;

    { HSTRETCH }

    model.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(model.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sky_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    sky_color.label = PARM_LABEL("Sky color", "sky_color") WIDTH(1.5);
    PARM(float, 3, "sky_color", none, COLOR, "R,G,B") 
	LABELREF(sky_color.label) HSTRETCH;

    sky_color.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(sky_color.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sunset_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    sunset_color.label = PARM_LABEL("Sunset color", "sunset_color") WIDTH(1.5);
    PARM(float, 3, "sunset_color", none, COLOR, "R,G,B") 
	LABELREF(sunset_color.label) HSTRETCH;

    sunset_color.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(sunset_color.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sun_size.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 sun_size.label = PARM_LABEL("Sun size", "sun_size") WIDTH(1.5);
 PARM(float, 1, "sun_size", none, none) RANGE(0.10000000000000001,30)
	 LABELREF(sun_size.label) HSTRETCH;

    sun_size.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(sun_size.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

groundColor.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   groundColor.label = PARM_LABEL("Ground color", "groundColor") WIDTH(1.5);
   PARM(float, 3, "groundColor", none, none, "#1,#2,#3")
	RANGE(0,1)  LABELREF(groundColor.label)
	HSTRETCH;

    groundColor.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(groundColor.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

groundStartAngle.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 groundStartAngle.label = PARM_LABEL("Ground start angle", "groundStartAngle") WIDTH(1.5);
 PARM(float, 1, "groundStartAngle", none, none) RANGE(0,90)
	 LABELREF(groundStartAngle.label) HSTRETCH;

    groundStartAngle.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(groundStartAngle.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

groundBlendAngle.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 groundBlendAngle.label = PARM_LABEL("Ground blend angle", "groundBlendAngle") WIDTH(1.5);
 PARM(float, 1, "groundBlendAngle", none, none) RANGE(1,90)
	 LABELREF(groundBlendAngle.label) HSTRETCH;

    groundBlendAngle.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(groundBlendAngle.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

importance_sampling.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("importance_sampling", "Importance sampling") toggle VALUE(importance_sampling.val);

    { HSTRETCH }

    importance_sampling.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(importance_sampling.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

mediumRadius.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 mediumRadius.label = PARM_LABEL("Medium radius", "mediumRadius") WIDTH(1.5);
 PARM(float, 1, "mediumRadius", none, none) RANGE(0.0001,1)
	 LABELREF(mediumRadius.label) HSTRETCH;

    mediumRadius.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(mediumRadius.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

visibleEnvironmentBackplate.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visibleEnvironmentBackplate", "Backplate") toggle VALUE(visibleEnvironmentBackplate.val);

    { HSTRETCH }

    visibleEnvironmentBackplate.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(visibleEnvironmentBackplate.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

visibleEnvironmentReflections.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visibleEnvironmentReflections", "Reflections") toggle VALUE(visibleEnvironmentReflections.val);

    { HSTRETCH }

    visibleEnvironmentReflections.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(visibleEnvironmentReflections.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

visibleEnvironmentRefractions.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visibleEnvironmentRefractions", "Refractions") toggle VALUE(visibleEnvironmentRefractions.val);

    { HSTRETCH }

    visibleEnvironmentRefractions.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(visibleEnvironmentRefractions.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enableTextureEnvironment.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enableTextureEnvironment", "Enable Texture Environment") toggle VALUE(enableTextureEnvironment.val);

    { HSTRETCH }

    enableTextureEnvironment.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enableTextureEnvironment.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

A_FILENAME3.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 A_FILENAME3.label = PARM_LABEL("filename", "A_FILENAME3") WIDTH(1.5);

 PARM_FIELD (pathstring, "A_FILENAME3") LABELREF(A_FILENAME3.label)
	VALUE(A_FILENAME3.val) HSTRETCH;

    A_FILENAME3.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(A_FILENAME3.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

    A_FILENAME3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(A_FILENAME3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

power2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 power2.label = PARM_LABEL("Power", "power2") WIDTH(1.5);
 PARM(float, 1, "power2", none, none) RANGE(0,1)
	 LABELREF(power2.label) HSTRETCH;

    power2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(power2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

colorSpace.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Color space", "colorSpace") WIDTH(1.5);
    { WIDTH(0.09) }

    colorSpace.menu;

    { HSTRETCH }

    colorSpace.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(colorSpace.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

gamma2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 gamma2.label = PARM_LABEL("Legacy gamma", "gamma2") WIDTH(1.5);
 PARM(float, 1, "gamma2", none, none) RANGE(0.10000000000000001,8)
	 LABELREF(gamma2.label) HSTRETCH;

    gamma2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(gamma2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

invert.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("invert", "Invert") toggle VALUE(invert.val);

    { HSTRETCH }

    invert.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(invert.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

linearSpaceInvert.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("linearSpaceInvert", "Linear sRGB invert") toggle VALUE(linearSpaceInvert.val);

    { HSTRETCH }

    linearSpaceInvert.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(linearSpaceInvert.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

rotationOrder.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Rotation order", "rotationOrder") WIDTH(1.5);
    { WIDTH(0.09) }

    rotationOrder.menu;

    { HSTRETCH }

    rotationOrder.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rotationOrder.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

rotation.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   rotation.label = PARM_LABEL("Rotation", "rotation") WIDTH(1.5);
   PARM(float, 3, "rotation", none, none, "#1,#2,#3")
	RANGE(-360,360)  LABELREF(rotation.label)
	HSTRETCH;

    rotation.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rotation.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

scale.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   scale.label = PARM_LABEL("Scale", "scale") WIDTH(1.5);
   PARM(float, 3, "scale", none, none, "#1,#2,#3")
	RANGE(0.001,1000)  LABELREF(scale.label)
	HSTRETCH;

    scale.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(scale.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

translation.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   translation.label = PARM_LABEL("Translation", "translation") WIDTH(1.5);
   PARM(float, 3, "translation", none, none, "#1,#2,#3")
	RANGE(-1,1)  LABELREF(translation.label)
	HSTRETCH;

    translation.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(translation.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enableDaylightMedium.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enableDaylightMedium", "Enable Environment Medium") toggle VALUE(enableDaylightMedium.val);

    { HSTRETCH }

    enableDaylightMedium.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enableDaylightMedium.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

scale4.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 scale4.label = PARM_LABEL("Density", "scale4") WIDTH(1.5);
 PARM(float, 1, "scale4", none, none) RANGE(0.0001,10000)
	 LABELREF(scale4.label) HSTRETCH;

    scale4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(scale4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

rayMarchStepLength.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rayMarchStepLength.label = PARM_LABEL("Volume step length", "rayMarchStepLength") WIDTH(1.5);
 PARM(float, 1, "rayMarchStepLength", none, none) RANGE(0.01,1000)
	 LABELREF(rayMarchStepLength.label) HSTRETCH;

    rayMarchStepLength.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rayMarchStepLength.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

shadowRayMarchStepLength.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 shadowRayMarchStepLength.label = PARM_LABEL("Vol. shadow ray step length", "shadowRayMarchStepLength") WIDTH(1.5);
 PARM(float, 1, "shadowRayMarchStepLength", none, none) RANGE(0.01,1000)
	 LABELREF(shadowRayMarchStepLength.label) HSTRETCH;

    shadowRayMarchStepLength.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(shadowRayMarchStepLength.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

useRayStepLengthForShadowRays.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("useRayStepLengthForShadowRays", "Use Vol. step length for Vol. shadow ray step length") toggle VALUE(useRayStepLengthForShadowRays.val);

    { HSTRETCH }

    useRayStepLengthForShadowRays.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(useRayStepLengthForShadowRays.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

absorption.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    absorption.label = PARM_LABEL("Absorption", "absorption") WIDTH(1.5);
    PARM(float, 3, "absorption", none, COLOR, "R,G,B") 
	LABELREF(absorption.label) HSTRETCH;

    absorption.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(absorption.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

invertAbsorption.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("invertAbsorption", "Invert absorption") toggle VALUE(invertAbsorption.val);

    { HSTRETCH }

    invertAbsorption.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(invertAbsorption.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

scattering.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    scattering.label = PARM_LABEL("Scattering", "scattering") WIDTH(1.5);
    PARM(float, 3, "scattering", none, COLOR, "R,G,B") 
	LABELREF(scattering.label) HSTRETCH;

    scattering.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(scattering.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

scattering_direction.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 scattering_direction.label = PARM_LABEL("Scattering direction", "scattering_direction") WIDTH(1.5);
 PARM(float, 1, "scattering_direction", none, none) RANGE(-1,1)
	 LABELREF(scattering_direction.label) HSTRETCH;

    scattering_direction.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(scattering_direction.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

power4.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 power4.label = PARM_LABEL("Power", "power4") WIDTH(1.5);
 PARM(float, 1, "power4", none, none) RANGE(0,1000)
	 LABELREF(power4.label) HSTRETCH;

    power4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(power4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

importance_sampling2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("importance_sampling2", "Importance sampling") toggle VALUE(importance_sampling2.val);

    { HSTRETCH }

    importance_sampling2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(importance_sampling2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

mediumRadius2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 mediumRadius2.label = PARM_LABEL("Medium radius", "mediumRadius2") WIDTH(1.5);
 PARM(float, 1, "mediumRadius2", none, none) RANGE(0.0001,1)
	 LABELREF(mediumRadius2.label) HSTRETCH;

    mediumRadius2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(mediumRadius2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

visibleEnvironmentBackplate2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visibleEnvironmentBackplate2", "Backplate") toggle VALUE(visibleEnvironmentBackplate2.val);

    { HSTRETCH }

    visibleEnvironmentBackplate2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(visibleEnvironmentBackplate2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

visibleEnvironmentReflections2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visibleEnvironmentReflections2", "Reflections") toggle VALUE(visibleEnvironmentReflections2.val);

    { HSTRETCH }

    visibleEnvironmentReflections2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(visibleEnvironmentReflections2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

visibleEnvironmentRefractions2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visibleEnvironmentRefractions2", "Refractions") toggle VALUE(visibleEnvironmentRefractions2.val);

    { HSTRETCH }

    visibleEnvironmentRefractions2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(visibleEnvironmentRefractions2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

A_FILENAME4.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 A_FILENAME4.label = PARM_LABEL("filename", "A_FILENAME4") WIDTH(1.5);

 PARM_FIELD (pathstring, "A_FILENAME4") LABELREF(A_FILENAME4.label)
	VALUE(A_FILENAME4.val) HSTRETCH;

    A_FILENAME4.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(A_FILENAME4.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

    A_FILENAME4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(A_FILENAME4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

colorSpace2.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Color space", "colorSpace2") WIDTH(1.5);
    { WIDTH(0.09) }

    colorSpace2.menu;

    { HSTRETCH }

    colorSpace2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(colorSpace2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

gamma3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 gamma3.label = PARM_LABEL("Legacy gamma", "gamma3") WIDTH(1.5);
 PARM(float, 1, "gamma3", none, none) RANGE(0.10000000000000001,8)
	 LABELREF(gamma3.label) HSTRETCH;

    gamma3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(gamma3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

invert2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("invert2", "Invert") toggle VALUE(invert2.val);

    { HSTRETCH }

    invert2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(invert2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

linearSpaceInvert2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("linearSpaceInvert2", "Linear sRGB invert") toggle VALUE(linearSpaceInvert2.val);

    { HSTRETCH }

    linearSpaceInvert2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(linearSpaceInvert2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

rotationOrder2.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Rotation order", "rotationOrder2") WIDTH(1.5);
    { WIDTH(0.09) }

    rotationOrder2.menu;

    { HSTRETCH }

    rotationOrder2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rotationOrder2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

rotation4.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   rotation4.label = PARM_LABEL("Rotation", "rotation4") WIDTH(1.5);
   PARM(float, 3, "rotation4", none, none, "#1,#2,#3")
	RANGE(-360,360)  LABELREF(rotation4.label)
	HSTRETCH;

    rotation4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rotation4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

scale5.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   scale5.label = PARM_LABEL("Scale", "scale5") WIDTH(1.5);
   PARM(float, 3, "scale5", none, none, "#1,#2,#3")
	RANGE(0.001,1000)  LABELREF(scale5.label)
	HSTRETCH;

    scale5.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(scale5.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enableTextureEnvironmentMedium.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enableTextureEnvironmentMedium", "Enable Environment Medium") toggle VALUE(enableTextureEnvironmentMedium.val);

    { HSTRETCH }

    enableTextureEnvironmentMedium.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enableTextureEnvironmentMedium.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

scale6.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 scale6.label = PARM_LABEL("Density", "scale6") WIDTH(1.5);
 PARM(float, 1, "scale6", none, none) RANGE(0.0001,10000)
	 LABELREF(scale6.label) HSTRETCH;

    scale6.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(scale6.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

rayMarchStepLength2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rayMarchStepLength2.label = PARM_LABEL("Volume step length", "rayMarchStepLength2") WIDTH(1.5);
 PARM(float, 1, "rayMarchStepLength2", none, none) RANGE(0.01,1000)
	 LABELREF(rayMarchStepLength2.label) HSTRETCH;

    rayMarchStepLength2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(rayMarchStepLength2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

shadowRayMarchStepLength2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 shadowRayMarchStepLength2.label = PARM_LABEL("Vol. shadow ray step length", "shadowRayMarchStepLength2") WIDTH(1.5);
 PARM(float, 1, "shadowRayMarchStepLength2", none, none) RANGE(0.01,1000)
	 LABELREF(shadowRayMarchStepLength2.label) HSTRETCH;

    shadowRayMarchStepLength2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(shadowRayMarchStepLength2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

useRayStepLengthForShadowRays2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("useRayStepLengthForShadowRays2", "Use Vol. step length for Vol. shadow ray step length") toggle VALUE(useRayStepLengthForShadowRays2.val);

    { HSTRETCH }

    useRayStepLengthForShadowRays2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(useRayStepLengthForShadowRays2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

absorption2.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    absorption2.label = PARM_LABEL("Absorption", "absorption2") WIDTH(1.5);
    PARM(float, 3, "absorption2", none, COLOR, "R,G,B") 
	LABELREF(absorption2.label) HSTRETCH;

    absorption2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(absorption2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

invertAbsorption2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("invertAbsorption2", "Invert absorption") toggle VALUE(invertAbsorption2.val);

    { HSTRETCH }

    invertAbsorption2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(invertAbsorption2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

scattering2.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    scattering2.label = PARM_LABEL("Scattering", "scattering2") WIDTH(1.5);
    PARM(float, 3, "scattering2", none, COLOR, "R,G,B") 
	LABELREF(scattering2.label) HSTRETCH;

    scattering2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(scattering2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

latitude2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 latitude2.label = PARM_LABEL("Latitude", "latitude2") WIDTH(1.5);
 PARM(float, 1, "latitude2", none, none) RANGE(-90,90)
	 LABELREF(latitude2.label) HSTRETCH;

    latitude2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(latitude2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

longitude2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 longitude2.label = PARM_LABEL("Longitude", "longitude2") WIDTH(1.5);
 PARM(float, 1, "longitude2", none, none) RANGE(-180,180)
	 LABELREF(longitude2.label) HSTRETCH;

    longitude2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(longitude2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

month2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 month2.label = PARM_LABEL("Month", "month2") WIDTH(1.5);
 PARM(integer, 1, "month2", none, none) RANGE(1,12)
	 LABELREF(month2.label) HSTRETCH;

    month2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(month2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

day2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 day2.label = PARM_LABEL("Day", "day2") WIDTH(1.5);
 PARM(integer, 1, "day2", none, none) RANGE(1,31)
	 LABELREF(day2.label) HSTRETCH;

    day2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(day2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

hour2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 hour2.label = PARM_LABEL("Local time", "hour2") WIDTH(1.5);
 PARM(float, 1, "hour2", none, none) RANGE(0,24)
	 LABELREF(hour2.label) HSTRETCH;

    hour2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(hour2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

gmtoffset2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 gmtoffset2.label = PARM_LABEL("GMT offset", "gmtoffset2") WIDTH(1.5);
 PARM(integer, 1, "gmtoffset2", none, none) RANGE(-12,12)
	 LABELREF(gmtoffset2.label) HSTRETCH;

    gmtoffset2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(gmtoffset2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

turbidity2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 turbidity2.label = PARM_LABEL("Sky turbidity", "turbidity2") WIDTH(1.5);
 PARM(float, 1, "turbidity2", none, none) RANGE(2,15)
	 LABELREF(turbidity2.label) HSTRETCH;

    turbidity2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(turbidity2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

power3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 power3.label = PARM_LABEL("Power", "power3") WIDTH(1.5);
 PARM(float, 1, "power3", none, none) RANGE(0,1000)
	 LABELREF(power3.label) HSTRETCH;

    power3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(power3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

sunIntensity2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 sunIntensity2.label = PARM_LABEL("Sun intensity", "sunIntensity2") WIDTH(1.5);
 PARM(float, 1, "sunIntensity2", none, none) RANGE(0,1000)
	 LABELREF(sunIntensity2.label) HSTRETCH;

    sunIntensity2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(sunIntensity2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

northoffset2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 northoffset2.label = PARM_LABEL("North offset", "northoffset2") WIDTH(1.5);
 PARM(float, 1, "northoffset2", none, none) RANGE(-1,1)
	 LABELREF(northoffset2.label) HSTRETCH;

    northoffset2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(northoffset2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

sun_size2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 sun_size2.label = PARM_LABEL("Sun size", "sun_size2") WIDTH(1.5);
 PARM(float, 1, "sun_size2", none, none) RANGE(0.10000000000000001,30)
	 LABELREF(sun_size2.label) HSTRETCH;

    sun_size2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(sun_size2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

planetaryAltitude.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 planetaryAltitude.label = PARM_LABEL("Altitude", "planetaryAltitude") WIDTH(1.5);
 PARM(float, 1, "planetaryAltitude", none, none) RANGE(0.10000000000000001,1)
	 LABELREF(planetaryAltitude.label) HSTRETCH;

    planetaryAltitude.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(planetaryAltitude.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

importance_sampling3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("importance_sampling3", "Importance sampling") toggle VALUE(importance_sampling3.val);

    { HSTRETCH }

    importance_sampling3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(importance_sampling3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

mediumRadius3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 mediumRadius3.label = PARM_LABEL("Medium radius", "mediumRadius3") WIDTH(1.5);
 PARM(float, 1, "mediumRadius3", none, none) RANGE(0.0001,1)
	 LABELREF(mediumRadius3.label) HSTRETCH;

    mediumRadius3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(mediumRadius3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

latitude3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 latitude3.label = PARM_LABEL("Latitude", "latitude3") WIDTH(1.5);
 PARM(float, 1, "latitude3", none, none) RANGE(-90,90)
	 LABELREF(latitude3.label) HSTRETCH;

    latitude3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(latitude3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

longitude3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 longitude3.label = PARM_LABEL("Longitude", "longitude3") WIDTH(1.5);
 PARM(float, 1, "longitude3", none, none) RANGE(-180,180)
	 LABELREF(longitude3.label) HSTRETCH;

    longitude3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(longitude3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

planetaryDiffuse.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    planetaryDiffuse.label = PARM_LABEL("Ground albedo", "planetaryDiffuse") WIDTH(1.5);
    PARM(float, 3, "planetaryDiffuse", none, COLOR, "R,G,B") 
	LABELREF(planetaryDiffuse.label) HSTRETCH;

    planetaryDiffuse.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(planetaryDiffuse.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

planetaryEmission.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    planetaryEmission.label = PARM_LABEL("Ground emission", "planetaryEmission") WIDTH(1.5);
    PARM(float, 3, "planetaryEmission", none, COLOR, "R,G,B") 
	LABELREF(planetaryEmission.label) HSTRETCH;

    planetaryEmission.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(planetaryEmission.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

visibleEnvironmentBackplate3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visibleEnvironmentBackplate3", "Backplate") toggle VALUE(visibleEnvironmentBackplate3.val);

    { HSTRETCH }

    visibleEnvironmentBackplate3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(visibleEnvironmentBackplate3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

visibleEnvironmentReflections3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visibleEnvironmentReflections3", "Reflections") toggle VALUE(visibleEnvironmentReflections3.val);

    { HSTRETCH }

    visibleEnvironmentReflections3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(visibleEnvironmentReflections3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

visibleEnvironmentRefractions3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visibleEnvironmentRefractions3", "Refractions") toggle VALUE(visibleEnvironmentRefractions3.val);

    { HSTRETCH }

    visibleEnvironmentRefractions3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(visibleEnvironmentRefractions3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

power5.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 power5.label = PARM_LABEL("Power", "power5") WIDTH(1.5);
 PARM(float, 1, "power5", none, none) RANGE(0,1000)
	 LABELREF(power5.label) HSTRETCH;

    power5.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(power5.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

importance_sampling4.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("importance_sampling4", "Importance sampling") toggle VALUE(importance_sampling4.val);

    { HSTRETCH }

    importance_sampling4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(importance_sampling4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

mediumRadius4.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 mediumRadius4.label = PARM_LABEL("Medium radius", "mediumRadius4") WIDTH(1.5);
 PARM(float, 1, "mediumRadius4", none, none) RANGE(0.0001,1)
	 LABELREF(mediumRadius4.label) HSTRETCH;

    mediumRadius4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(mediumRadius4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

visibleEnvironmentBackplate4.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visibleEnvironmentBackplate4", "Backplate") toggle VALUE(visibleEnvironmentBackplate4.val);

    { HSTRETCH }

    visibleEnvironmentBackplate4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(visibleEnvironmentBackplate4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

visibleEnvironmentReflections4.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visibleEnvironmentReflections4", "Reflections") toggle VALUE(visibleEnvironmentReflections4.val);

    { HSTRETCH }

    visibleEnvironmentReflections4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(visibleEnvironmentReflections4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

visibleEnvironmentRefractions4.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visibleEnvironmentRefractions4", "Refractions") toggle VALUE(visibleEnvironmentRefractions4.val);

    { HSTRETCH }

    visibleEnvironmentRefractions4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(visibleEnvironmentRefractions4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

A_FILENAME5.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 A_FILENAME5.label = PARM_LABEL("filename", "A_FILENAME5") WIDTH(1.5);

 PARM_FIELD (pathstring, "A_FILENAME5") LABELREF(A_FILENAME5.label)
	VALUE(A_FILENAME5.val) HSTRETCH;

    A_FILENAME5.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(A_FILENAME5.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

    A_FILENAME5.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(A_FILENAME5.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

power6.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 power6.label = PARM_LABEL("Power", "power6") WIDTH(1.5);
 PARM(float, 1, "power6", none, none) RANGE(0,1)
	 LABELREF(power6.label) HSTRETCH;

    power6.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(power6.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

colorSpace3.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Color space", "colorSpace3") WIDTH(1.5);
    { WIDTH(0.09) }

    colorSpace3.menu;

    { HSTRETCH }

    colorSpace3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(colorSpace3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

gamma4.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 gamma4.label = PARM_LABEL("Legacy gamma", "gamma4") WIDTH(1.5);
 PARM(float, 1, "gamma4", none, none) RANGE(0.10000000000000001,8)
	 LABELREF(gamma4.label) HSTRETCH;

    gamma4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(gamma4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

invert3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("invert3", "Invert") toggle VALUE(invert3.val);

    { HSTRETCH }

    invert3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(invert3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

linearSpaceInvert3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("linearSpaceInvert3", "Linear sRGB invert") toggle VALUE(linearSpaceInvert3.val);

    { HSTRETCH }

    linearSpaceInvert3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(linearSpaceInvert3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

translation4.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 translation4.label = PARM_LABEL("Heading", "translation4") WIDTH(1.5);
 PARM(float, 1, "translation4", none, none) RANGE(-1,1)
	 LABELREF(translation4.label) HSTRETCH;

    translation4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(translation4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

translation5.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 translation5.label = PARM_LABEL("Pitch", "translation5") WIDTH(1.5);
 PARM(float, 1, "translation5", none, none) RANGE(-1,1)
	 LABELREF(translation5.label) HSTRETCH;

    translation5.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(translation5.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

scale7.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   scale7.label = PARM_LABEL("Scale", "scale7") WIDTH(1.5);
   PARM(float, 3, "scale7", none, none, "#1,#2,#3")
	RANGE(0.001,1000)  LABELREF(scale7.label)
	HSTRETCH;

    scale7.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(scale7.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

on_off.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("on_off", "Enable") toggle VALUE(on_off.val);

    { HSTRETCH }

    on_off.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(on_off.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

cutoff.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 cutoff.label = PARM_LABEL("Cutoff", "cutoff") WIDTH(1.5);
 PARM(float, 1, "cutoff", none, none) RANGE(0,1000)
	 LABELREF(cutoff.label) HSTRETCH;

    cutoff.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(cutoff.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

bloom_power.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 bloom_power.label = PARM_LABEL("Bloom power", "bloom_power") WIDTH(1.5);
 PARM(float, 1, "bloom_power", none, none) RANGE(0,100000)
	 LABELREF(bloom_power.label) HSTRETCH;

    bloom_power.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bloom_power.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

glare_power.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 glare_power.label = PARM_LABEL("Glare power", "glare_power") WIDTH(1.5);
 PARM(float, 1, "glare_power", none, none) RANGE(0,100000)
	 LABELREF(glare_power.label) HSTRETCH;

    glare_power.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(glare_power.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

glare_ray_amount.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 glare_ray_amount.label = PARM_LABEL("Glare ray count", "glare_ray_amount") WIDTH(1.5);
 PARM(integer, 1, "glare_ray_amount", none, none) RANGE(1,8)
	 LABELREF(glare_ray_amount.label) HSTRETCH;

    glare_ray_amount.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(glare_ray_amount.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

glare_angle.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 glare_angle.label = PARM_LABEL("Glare rotation angle", "glare_angle") WIDTH(1.5);
 PARM(float, 1, "glare_angle", none, none) RANGE(-90,90)
	 LABELREF(glare_angle.label) HSTRETCH;

    glare_angle.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(glare_angle.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

glare_blur.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 glare_blur.label = PARM_LABEL("Glare blur", "glare_blur") WIDTH(1.5);
 PARM(float, 1, "glare_blur", none, none) RANGE(0.001,0.20000000000000001)
	 LABELREF(glare_blur.label) HSTRETCH;

    glare_blur.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(glare_blur.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

spectral_intensity.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 spectral_intensity.label = PARM_LABEL("Spectral intensity", "spectral_intensity") WIDTH(1.5);
 PARM(float, 1, "spectral_intensity", none, none) RANGE(0,1)
	 LABELREF(spectral_intensity.label) HSTRETCH;

    spectral_intensity.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(spectral_intensity.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

spectral_shift.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 spectral_shift.label = PARM_LABEL("Spectral shift", "spectral_shift") WIDTH(1.5);
 PARM(float, 1, "spectral_shift", none, none) RANGE(0,6)
	 LABELREF(spectral_shift.label) HSTRETCH;

    spectral_shift.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(spectral_shift.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

enabled.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled", "Enabled") toggle VALUE(enabled.val);

    { HSTRETCH }

    enabled.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

renderPassesRaw.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("renderPassesRaw", "Raw") toggle VALUE(renderPassesRaw.val);

    { HSTRETCH }

    renderPassesRaw.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(renderPassesRaw.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

renderPassCryptomatteCount.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 renderPassCryptomatteCount.label = PARM_LABEL("Cryptomatte bins", "renderPassCryptomatteCount") WIDTH(1.5);
 PARM(integer, 1, "renderPassCryptomatteCount", none, none) RANGE(2,10)
	 LABELREF(renderPassCryptomatteCount.label) HSTRETCH;

    renderPassCryptomatteCount.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(renderPassCryptomatteCount.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

renderPassCryptomatteSeedFactor.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 renderPassCryptomatteSeedFactor.label = PARM_LABEL("Cryptomatte seed factor", "renderPassCryptomatteSeedFactor") WIDTH(1.5);
 PARM(integer, 1, "renderPassCryptomatteSeedFactor", none, none) RANGE(4,25)
	 LABELREF(renderPassCryptomatteSeedFactor.label) HSTRETCH;

    renderPassCryptomatteSeedFactor.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(renderPassCryptomatteSeedFactor.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

renderPassInfoMaxSamples.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 renderPassInfoMaxSamples.label = PARM_LABEL("Max info samples", "renderPassInfoMaxSamples") WIDTH(1.5);
 PARM(integer, 1, "renderPassInfoMaxSamples", none, none) RANGE(1,1024)
	 LABELREF(renderPassInfoMaxSamples.label) HSTRETCH;

    renderPassInfoMaxSamples.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(renderPassInfoMaxSamples.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

samplingMode2.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Info sampling mode", "samplingMode2") WIDTH(1.5);
    { WIDTH(0.09) }

    samplingMode2.menu;

    { HSTRETCH }

    samplingMode2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(samplingMode2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

opacityThreshold.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 opacityThreshold.label = PARM_LABEL("Info opacity threshold", "opacityThreshold") WIDTH(1.5);
 PARM(float, 1, "opacityThreshold", none, none) RANGE(0,1)
	 LABELREF(opacityThreshold.label) HSTRETCH;

    opacityThreshold.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(opacityThreshold.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

enabled14.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled14", "Diffuse") toggle VALUE(enabled14.val);

    { HSTRETCH }

    enabled14.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled14.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled15.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled15", "Diffuse Direct") toggle VALUE(enabled15.val);

    { HSTRETCH }

    enabled15.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled15.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled16.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled16", "Diffuse Filter") toggle VALUE(enabled16.val);

    { HSTRETCH }

    enabled16.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled16.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled17.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled17", "Diffuse Indirect") toggle VALUE(enabled17.val);

    { HSTRETCH }

    enabled17.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled17.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled18.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled18", "Emitters") toggle VALUE(enabled18.val);

    { HSTRETCH }

    enabled18.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled18.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled19.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled19", "Environment") toggle VALUE(enabled19.val);

    { HSTRETCH }

    enabled19.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled19.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled20.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled20", "Reflection") toggle VALUE(enabled20.val);

    { HSTRETCH }

    enabled20.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled20.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled21.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled21", "Reflection Direct") toggle VALUE(enabled21.val);

    { HSTRETCH }

    enabled21.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled21.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled22.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled22", "Reflection Filter") toggle VALUE(enabled22.val);

    { HSTRETCH }

    enabled22.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled22.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled23.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled23", "Reflection Indirect") toggle VALUE(enabled23.val);

    { HSTRETCH }

    enabled23.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled23.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled24.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled24", "Refraction") toggle VALUE(enabled24.val);

    { HSTRETCH }

    enabled24.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled24.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled25.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled25", "Refraction Filter") toggle VALUE(enabled25.val);

    { HSTRETCH }

    enabled25.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled25.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled26.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled26", "Subsurface Scattering") toggle VALUE(enabled26.val);

    { HSTRETCH }

    enabled26.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled26.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled27.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled27", "Transmission") toggle VALUE(enabled27.val);

    { HSTRETCH }

    enabled27.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled27.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled28.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled28", "Transmission Filter") toggle VALUE(enabled28.val);

    { HSTRETCH }

    enabled28.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled28.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled115.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled115", "Volume") toggle VALUE(enabled115.val);

    { HSTRETCH }

    enabled115.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled115.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled116.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled116", "Volume emission") toggle VALUE(enabled116.val);

    { HSTRETCH }

    enabled116.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled116.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled117.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled117", "Volume mask") toggle VALUE(enabled117.val);

    { HSTRETCH }

    enabled117.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled117.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled118.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled118", "Volume Z-depth back") toggle VALUE(enabled118.val);

    { HSTRETCH }

    enabled118.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled118.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled119.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled119", "Volume Z-depth front") toggle VALUE(enabled119.val);

    { HSTRETCH }

    enabled119.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled119.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled57.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled57", "Ambien Occlusion") toggle VALUE(enabled57.val);

    { HSTRETCH }

    enabled57.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled57.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

aodist3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 aodist3.label = PARM_LABEL("AO distance", "aodist3") WIDTH(1.5);
 PARM(float, 1, "aodist3", none, none) RANGE(0.01,1024)
	 LABELREF(aodist3.label) HSTRETCH;

    aodist3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aodist3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

aoAlphaShadows2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("aoAlphaShadows2", "AO alpha shadows") toggle VALUE(aoAlphaShadows2.val);

    { HSTRETCH }

    aoAlphaShadows2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aoAlphaShadows2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled58.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled58", "Baking group") toggle VALUE(enabled58.val);

    { HSTRETCH }

    enabled58.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled58.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled59.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled59", "Diffuse filter") toggle VALUE(enabled59.val);

    { HSTRETCH }

    enabled59.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled59.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled60.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled60", "Geometric normal") toggle VALUE(enabled60.val);

    { HSTRETCH }

    enabled60.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled60.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled61.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled61", "Index of refraction") toggle VALUE(enabled61.val);

    { HSTRETCH }

    enabled61.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled61.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled62.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled62", "Light pass ID") toggle VALUE(enabled62.val);

    { HSTRETCH }

    enabled62.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled62.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled63.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled63", "Material ID") toggle VALUE(enabled63.val);

    { HSTRETCH }

    enabled63.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled63.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled64.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled64", "Motion Vectors") toggle VALUE(enabled64.val);

    { HSTRETCH }

    enabled64.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled64.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

maxSpeed2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 maxSpeed2.label = PARM_LABEL("Max speed", "maxSpeed2") WIDTH(1.5);
 PARM(float, 1, "maxSpeed2", none, none) RANGE(1.0000000000000001e-05,10000)
	 LABELREF(maxSpeed2.label) HSTRETCH;

    maxSpeed2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(maxSpeed2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

enabled65.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled65", "Object ID") toggle VALUE(enabled65.val);

    { HSTRETCH }

    enabled65.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled65.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled66.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled66", "Object layer color") toggle VALUE(enabled66.val);

    { HSTRETCH }

    enabled66.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled66.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled67.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled67", "Opacity") toggle VALUE(enabled67.val);

    { HSTRETCH }

    enabled67.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled67.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled68.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled68", "Position") toggle VALUE(enabled68.val);

    { HSTRETCH }

    enabled68.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled68.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled69.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled69", "Reflection filter") toggle VALUE(enabled69.val);

    { HSTRETCH }

    enabled69.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled69.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled70.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled70", "Refraction filter") toggle VALUE(enabled70.val);

    { HSTRETCH }

    enabled70.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled70.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled71.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled71", "Render layer ID") toggle VALUE(enabled71.val);

    { HSTRETCH }

    enabled71.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled71.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled72.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled72", "Render layer mask") toggle VALUE(enabled72.val);

    { HSTRETCH }

    enabled72.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled72.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled73.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled73", "Roughness") toggle VALUE(enabled73.val);

    { HSTRETCH }

    enabled73.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled73.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled74.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled74", "Shading normal") toggle VALUE(enabled74.val);

    { HSTRETCH }

    enabled74.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled74.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

bump2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bump2", "Shading normal Bump and normal mapping") toggle VALUE(bump2.val);

    { HSTRETCH }

    bump2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bump2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled75.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled75", "Smooth normal") toggle VALUE(enabled75.val);

    { HSTRETCH }

    enabled75.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled75.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled76.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled76", "Tangent normal") toggle VALUE(enabled76.val);

    { HSTRETCH }

    enabled76.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled76.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled77.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled77", "Texture tangent") toggle VALUE(enabled77.val);

    { HSTRETCH }

    enabled77.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled77.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

bump3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bump3", "Texture tangent Bump and normal mapping") toggle VALUE(bump3.val);

    { HSTRETCH }

    bump3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bump3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled78.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled78", "Transmission filter") toggle VALUE(enabled78.val);

    { HSTRETCH }

    enabled78.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled78.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled79.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled79", "UV coordinates") toggle VALUE(enabled79.val);

    { HSTRETCH }

    enabled79.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled79.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

UV_max2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 UV_max2.label = PARM_LABEL("UV max", "UV_max2") WIDTH(1.5);
 PARM(float, 1, "UV_max2", none, none) RANGE(1.0000000000000001e-05,1000)
	 LABELREF(UV_max2.label) HSTRETCH;

    UV_max2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(UV_max2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

uvSet3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 uvSet3.label = PARM_LABEL("UV coordinate selection", "uvSet3") WIDTH(1.5);
 PARM(integer, 1, "uvSet3", none, none) RANGE(1,3)
	 LABELREF(uvSet3.label) HSTRETCH;

    uvSet3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(uvSet3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

enabled80.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled80", "Wireframe") toggle VALUE(enabled80.val);

    { HSTRETCH }

    enabled80.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled80.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

bump4.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bump4", "Wireframe Bump and normal mapping") toggle VALUE(bump4.val);

    { HSTRETCH }

    bump4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bump4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled81.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled81", "Z-Depth") toggle VALUE(enabled81.val);

    { HSTRETCH }

    enabled81.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled81.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

Z_depth_max2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 Z_depth_max2.label = PARM_LABEL("Maximum Z-depth", "Z_depth_max2") WIDTH(1.5);
 PARM(float, 1, "Z_depth_max2", none, none) RANGE(0.001,100000)
	 LABELREF(Z_depth_max2.label) HSTRETCH;

    Z_depth_max2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Z_depth_max2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

enabled49.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled49", "Diffuse direct") toggle VALUE(enabled49.val);

    { HSTRETCH }

    enabled49.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled49.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled50.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled50", "Diffuse indirect") toggle VALUE(enabled50.val);

    { HSTRETCH }

    enabled50.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled50.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled51.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled51", "Emission") toggle VALUE(enabled51.val);

    { HSTRETCH }

    enabled51.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled51.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled52.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled52", "Reflection direct") toggle VALUE(enabled52.val);

    { HSTRETCH }

    enabled52.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled52.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled53.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled53", "Reflection indirect") toggle VALUE(enabled53.val);

    { HSTRETCH }

    enabled53.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled53.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled54.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled54", "Remainder") toggle VALUE(enabled54.val);

    { HSTRETCH }

    enabled54.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled54.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled55.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled55", "Volume") toggle VALUE(enabled55.val);

    { HSTRETCH }

    enabled55.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled55.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled56.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled56", "Volume emission") toggle VALUE(enabled56.val);

    { HSTRETCH }

    enabled56.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled56.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled2", "Irradiance") toggle VALUE(enabled2.val);

    { HSTRETCH }

    enabled2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled3", "Light direction") toggle VALUE(enabled3.val);

    { HSTRETCH }

    enabled3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled4.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled4", "Noise") toggle VALUE(enabled4.val);

    { HSTRETCH }

    enabled4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled6.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled6", "Shadows") toggle VALUE(enabled6.val);

    { HSTRETCH }

    enabled6.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled6.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled5.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled5", "Postprocessing") toggle VALUE(enabled5.val);

    { HSTRETCH }

    enabled5.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled5.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

postProcEnvironment.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("postProcEnvironment", "Postprocessing Include environment") toggle VALUE(postProcEnvironment.val);

    { HSTRETCH }

    postProcEnvironment.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(postProcEnvironment.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled7.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled7", "Material node") toggle VALUE(enabled7.val);

    { HSTRETCH }

    enabled7.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled7.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled8.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled8", "Material node name") toggle VALUE(enabled8.val);

    { HSTRETCH }

    enabled8.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled8.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled9.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled9", "Material pin name") toggle VALUE(enabled9.val);

    { HSTRETCH }

    enabled9.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled9.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled10.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled10", "Object node") toggle VALUE(enabled10.val);

    { HSTRETCH }

    enabled10.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled10.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled11.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled11", "Object node name") toggle VALUE(enabled11.val);

    { HSTRETCH }

    enabled11.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled11.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled12.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled12", "Object pin name") toggle VALUE(enabled12.val);

    { HSTRETCH }

    enabled12.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled12.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled13.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled13", "Instance") toggle VALUE(enabled13.val);

    { HSTRETCH }

    enabled13.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled13.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled112.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled112", "Black shadows") toggle VALUE(enabled112.val);

    { HSTRETCH }

    enabled112.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled112.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled113.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled113", "Reflections") toggle VALUE(enabled113.val);

    { HSTRETCH }

    enabled113.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled113.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled114.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled114", "Shadows") toggle VALUE(enabled114.val);

    { HSTRETCH }

    enabled114.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled114.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled29.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled29", "Custom 1") toggle VALUE(enabled29.val);

    { HSTRETCH }

    enabled29.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled29.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

secondaryRays.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Visible after", "secondaryRays") WIDTH(1.5);
    { WIDTH(0.09) }

    secondaryRays.menu;

    { HSTRETCH }

    secondaryRays.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(secondaryRays.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled30.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled30", "Custom 2") toggle VALUE(enabled30.val);

    { HSTRETCH }

    enabled30.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled30.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

secondaryRays2.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Visible after", "secondaryRays2") WIDTH(1.5);
    { WIDTH(0.09) }

    secondaryRays2.menu;

    { HSTRETCH }

    secondaryRays2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(secondaryRays2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm4.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled31.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled31", "Custom 3") toggle VALUE(enabled31.val);

    { HSTRETCH }

    enabled31.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled31.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

secondaryRays3.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Visible after", "secondaryRays3") WIDTH(1.5);
    { WIDTH(0.09) }

    secondaryRays3.menu;

    { HSTRETCH }

    secondaryRays3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(secondaryRays3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm5.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled32.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled32", "Custom 4") toggle VALUE(enabled32.val);

    { HSTRETCH }

    enabled32.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled32.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

secondaryRays4.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Visible after", "secondaryRays4") WIDTH(1.5);
    { WIDTH(0.09) }

    secondaryRays4.menu;

    { HSTRETCH }

    secondaryRays4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(secondaryRays4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm6.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled33.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled33", "Custom 5") toggle VALUE(enabled33.val);

    { HSTRETCH }

    enabled33.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled33.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

secondaryRays5.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Visible after", "secondaryRays5") WIDTH(1.5);
    { WIDTH(0.09) }

    secondaryRays5.menu;

    { HSTRETCH }

    secondaryRays5.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(secondaryRays5.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm7.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled34.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled34", "Custom 6") toggle VALUE(enabled34.val);

    { HSTRETCH }

    enabled34.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled34.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

secondaryRays6.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Visible after", "secondaryRays6") WIDTH(1.5);
    { WIDTH(0.09) }

    secondaryRays6.menu;

    { HSTRETCH }

    secondaryRays6.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(secondaryRays6.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm8.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled35.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled35", "Custom 7") toggle VALUE(enabled35.val);

    { HSTRETCH }

    enabled35.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled35.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

secondaryRays7.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Visible after", "secondaryRays7") WIDTH(1.5);
    { WIDTH(0.09) }

    secondaryRays7.menu;

    { HSTRETCH }

    secondaryRays7.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(secondaryRays7.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm9.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled36.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled36", "Custom 8") toggle VALUE(enabled36.val);

    { HSTRETCH }

    enabled36.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled36.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

secondaryRays8.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Visible after", "secondaryRays8") WIDTH(1.5);
    { WIDTH(0.09) }

    secondaryRays8.menu;

    { HSTRETCH }

    secondaryRays8.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(secondaryRays8.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm10.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled37.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled37", "Custom 9") toggle VALUE(enabled37.val);

    { HSTRETCH }

    enabled37.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled37.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

secondaryRays9.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Visible after", "secondaryRays9") WIDTH(1.5);
    { WIDTH(0.09) }

    secondaryRays9.menu;

    { HSTRETCH }

    secondaryRays9.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(secondaryRays9.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm11.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled38.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled38", "Custom 10") toggle VALUE(enabled38.val);

    { HSTRETCH }

    enabled38.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled38.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

secondaryRays10.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Visible after", "secondaryRays10") WIDTH(1.5);
    { WIDTH(0.09) }

    secondaryRays10.menu;

    { HSTRETCH }

    secondaryRays10.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(secondaryRays10.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled39.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled39", "Global texture 1") toggle VALUE(enabled39.val);

    { HSTRETCH }

    enabled39.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled39.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

includeEnvironment.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("includeEnvironment", "Include environment") toggle VALUE(includeEnvironment.val);

    { HSTRETCH }

    includeEnvironment.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(includeEnvironment.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm12.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled40.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled40", "Global texture 2") toggle VALUE(enabled40.val);

    { HSTRETCH }

    enabled40.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled40.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

includeEnvironment2.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("includeEnvironment2", "Include environment") toggle VALUE(includeEnvironment2.val);

    { HSTRETCH }

    includeEnvironment2.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(includeEnvironment2.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm13.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled41.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled41", "Global texture 3") toggle VALUE(enabled41.val);

    { HSTRETCH }

    enabled41.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled41.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

includeEnvironment3.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("includeEnvironment3", "Include environment") toggle VALUE(includeEnvironment3.val);

    { HSTRETCH }

    includeEnvironment3.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(includeEnvironment3.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm14.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled42.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled42", "Global texture 4") toggle VALUE(enabled42.val);

    { HSTRETCH }

    enabled42.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled42.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

includeEnvironment4.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("includeEnvironment4", "Include environment") toggle VALUE(includeEnvironment4.val);

    { HSTRETCH }

    includeEnvironment4.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(includeEnvironment4.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm15.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled43.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled43", "Global texture 5") toggle VALUE(enabled43.val);

    { HSTRETCH }

    enabled43.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled43.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

includeEnvironment5.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("includeEnvironment5", "Include environment") toggle VALUE(includeEnvironment5.val);

    { HSTRETCH }

    includeEnvironment5.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(includeEnvironment5.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm16.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled44.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled44", "Global texture 6") toggle VALUE(enabled44.val);

    { HSTRETCH }

    enabled44.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled44.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

includeEnvironment6.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("includeEnvironment6", "Include environment") toggle VALUE(includeEnvironment6.val);

    { HSTRETCH }

    includeEnvironment6.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(includeEnvironment6.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm17.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled45.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled45", "Global texture 7") toggle VALUE(enabled45.val);

    { HSTRETCH }

    enabled45.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled45.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

includeEnvironment7.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("includeEnvironment7", "Include environment") toggle VALUE(includeEnvironment7.val);

    { HSTRETCH }

    includeEnvironment7.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(includeEnvironment7.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm18.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled46.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled46", "Global texture 8") toggle VALUE(enabled46.val);

    { HSTRETCH }

    enabled46.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled46.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

includeEnvironment8.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("includeEnvironment8", "Include environment") toggle VALUE(includeEnvironment8.val);

    { HSTRETCH }

    includeEnvironment8.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(includeEnvironment8.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm19.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled47.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled47", "Global texture 9") toggle VALUE(enabled47.val);

    { HSTRETCH }

    enabled47.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled47.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

includeEnvironment9.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("includeEnvironment9", "Include environment") toggle VALUE(includeEnvironment9.val);

    { HSTRETCH }

    includeEnvironment9.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(includeEnvironment9.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

sepparm20.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enabled48.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled48", "Global texture 10") toggle VALUE(enabled48.val);

    { HSTRETCH }

    enabled48.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled48.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

includeEnvironment10.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("includeEnvironment10", "Include environment") toggle VALUE(includeEnvironment10.val);

    { HSTRETCH }

    includeEnvironment10.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(includeEnvironment10.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled83.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled83", "Light ID 1") toggle VALUE(enabled83.val);

    { HSTRETCH }

    enabled83.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled83.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled84.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled84", "Light ID 2") toggle VALUE(enabled84.val);

    { HSTRETCH }

    enabled84.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled84.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled85.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled85", "Light ID 3") toggle VALUE(enabled85.val);

    { HSTRETCH }

    enabled85.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled85.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled86.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled86", "Light ID 4") toggle VALUE(enabled86.val);

    { HSTRETCH }

    enabled86.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled86.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled87.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled87", "Light ID 5") toggle VALUE(enabled87.val);

    { HSTRETCH }

    enabled87.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled87.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled88.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled88", "Light ID 6") toggle VALUE(enabled88.val);

    { HSTRETCH }

    enabled88.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled88.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled89.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled89", "Light ID 7") toggle VALUE(enabled89.val);

    { HSTRETCH }

    enabled89.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled89.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled90.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled90", "Light ID 8") toggle VALUE(enabled90.val);

    { HSTRETCH }

    enabled90.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled90.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled82.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled82", "Environment") toggle VALUE(enabled82.val);

    { HSTRETCH }

    enabled82.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled82.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled91.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled91", "Sun") toggle VALUE(enabled91.val);

    { HSTRETCH }

    enabled91.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled91.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled92.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled92", "Light ID 1") toggle VALUE(enabled92.val);

    { HSTRETCH }

    enabled92.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled92.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled93.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled93", "Light ID 2") toggle VALUE(enabled93.val);

    { HSTRETCH }

    enabled93.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled93.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled94.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled94", "Light ID 3") toggle VALUE(enabled94.val);

    { HSTRETCH }

    enabled94.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled94.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled95.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled95", "Light ID 4") toggle VALUE(enabled95.val);

    { HSTRETCH }

    enabled95.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled95.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled96.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled96", "Light ID 5") toggle VALUE(enabled96.val);

    { HSTRETCH }

    enabled96.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled96.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled97.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled97", "Light ID 6") toggle VALUE(enabled97.val);

    { HSTRETCH }

    enabled97.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled97.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled98.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled98", "Light ID 7") toggle VALUE(enabled98.val);

    { HSTRETCH }

    enabled98.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled98.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled99.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled99", "Light ID 8") toggle VALUE(enabled99.val);

    { HSTRETCH }

    enabled99.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled99.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled100.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled100", "Environment") toggle VALUE(enabled100.val);

    { HSTRETCH }

    enabled100.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled100.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled101.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled101", "Sun") toggle VALUE(enabled101.val);

    { HSTRETCH }

    enabled101.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled101.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled102.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled102", "Light ID 1") toggle VALUE(enabled102.val);

    { HSTRETCH }

    enabled102.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled102.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled103.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled103", "Light ID 2") toggle VALUE(enabled103.val);

    { HSTRETCH }

    enabled103.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled103.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled104.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled104", "Light ID 3") toggle VALUE(enabled104.val);

    { HSTRETCH }

    enabled104.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled104.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled105.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled105", "Light ID 4") toggle VALUE(enabled105.val);

    { HSTRETCH }

    enabled105.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled105.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled106.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled106", "Light ID 5") toggle VALUE(enabled106.val);

    { HSTRETCH }

    enabled106.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled106.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled107.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled107", "Light ID 6") toggle VALUE(enabled107.val);

    { HSTRETCH }

    enabled107.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled107.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled108.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled108", "Light ID 7") toggle VALUE(enabled108.val);

    { HSTRETCH }

    enabled108.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled108.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled109.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled109", "Light ID 8") toggle VALUE(enabled109.val);

    { HSTRETCH }

    enabled109.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled109.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled110.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled110", "Environment") toggle VALUE(enabled110.val);

    { HSTRETCH }

    enabled110.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled110.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

enabled111.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enabled111", "Sun") toggle VALUE(enabled111.val);

    { HSTRETCH }

    enabled111.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enabled111.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

folder75.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "folder75.gad"
    { 
	VALUE(folder75.gad.val) STRETCH(1,0)

	TAB "Options"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled.gad;		
	    renderPassesRaw.gad;		
	    renderPassCryptomatteCount.gad;		
	    renderPassCryptomatteSeedFactor.gad;		
	    renderPassInfoMaxSamples.gad;		
	    samplingMode2.gad;		
	    opacityThreshold.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Beauty"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled14.gad;		
	    enabled15.gad;		
	    enabled16.gad;		
	    enabled17.gad;		
	    enabled18.gad;		
	    enabled19.gad;		
	    enabled20.gad;		
	    enabled21.gad;		
	    enabled22.gad;		
	    enabled23.gad;		
	    enabled24.gad;		
	    enabled25.gad;		
	    enabled26.gad;		
	    enabled27.gad;		
	    enabled28.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Volumes"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled115.gad;		
	    enabled116.gad;		
	    enabled117.gad;		
	    enabled118.gad;		
	    enabled119.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Info"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled57.gad;		
	    aodist3.gad;		
	    aoAlphaShadows2.gad;		
	    enabled58.gad;		
	    enabled59.gad;		
	    enabled60.gad;		
	    enabled61.gad;		
	    enabled62.gad;		
	    enabled63.gad;		
	    enabled64.gad;		
	    maxSpeed2.gad;		
	    enabled65.gad;		
	    enabled66.gad;		
	    enabled67.gad;		
	    enabled68.gad;		
	    enabled69.gad;		
	    enabled70.gad;		
	    enabled71.gad;		
	    enabled72.gad;		
	    enabled73.gad;		
	    enabled74.gad;		
	    bump2.gad;		
	    enabled75.gad;		
	    enabled76.gad;		
	    enabled77.gad;		
	    bump3.gad;		
	    enabled78.gad;		
	    enabled79.gad;		
	    UV_max2.gad;		
	    uvSet3.gad;		
	    enabled80.gad;		
	    bump4.gad;		
	    enabled81.gad;		
	    Z_depth_max2.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Denoised"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled49.gad;		
	    enabled50.gad;		
	    enabled51.gad;		
	    enabled52.gad;		
	    enabled53.gad;		
	    enabled54.gad;		
	    enabled55.gad;		
	    enabled56.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Auxiliary"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled2.gad;		
	    enabled3.gad;		
	    enabled4.gad;		
	    enabled6.gad;		
	    enabled5.gad;		
	    postProcEnvironment.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Crytomatte"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled7.gad;		
	    enabled8.gad;		
	    enabled9.gad;		
	    enabled10.gad;		
	    enabled11.gad;		
	    enabled12.gad;		
	    enabled13.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Render layers"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled112.gad;		
	    enabled113.gad;		
	    enabled114.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Custom"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled29.gad;		
	    secondaryRays.gad;		
	    sepparm.gad;		
	    enabled30.gad;		
	    secondaryRays2.gad;		
	    sepparm4.gad;		
	    enabled31.gad;		
	    secondaryRays3.gad;		
	    sepparm5.gad;		
	    enabled32.gad;		
	    secondaryRays4.gad;		
	    sepparm6.gad;		
	    enabled33.gad;		
	    secondaryRays5.gad;		
	    sepparm7.gad;		
	    enabled34.gad;		
	    secondaryRays6.gad;		
	    sepparm8.gad;		
	    enabled35.gad;		
	    secondaryRays7.gad;		
	    sepparm9.gad;		
	    enabled36.gad;		
	    secondaryRays8.gad;		
	    sepparm10.gad;		
	    enabled37.gad;		
	    secondaryRays9.gad;		
	    sepparm11.gad;		
	    enabled38.gad;		
	    secondaryRays10.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Global Texture"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled39.gad;		
	    includeEnvironment.gad;		
	    sepparm12.gad;		
	    enabled40.gad;		
	    includeEnvironment2.gad;		
	    sepparm13.gad;		
	    enabled41.gad;		
	    includeEnvironment3.gad;		
	    sepparm14.gad;		
	    enabled42.gad;		
	    includeEnvironment4.gad;		
	    sepparm15.gad;		
	    enabled43.gad;		
	    includeEnvironment5.gad;		
	    sepparm16.gad;		
	    enabled44.gad;		
	    includeEnvironment6.gad;		
	    sepparm17.gad;		
	    enabled45.gad;		
	    includeEnvironment7.gad;		
	    sepparm18.gad;		
	    enabled46.gad;		
	    includeEnvironment8.gad;		
	    sepparm19.gad;		
	    enabled47.gad;		
	    includeEnvironment9.gad;		
	    sepparm20.gad;		
	    enabled48.gad;		
	    includeEnvironment10.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Light"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled83.gad;		
	    enabled84.gad;		
	    enabled85.gad;		
	    enabled86.gad;		
	    enabled87.gad;		
	    enabled88.gad;		
	    enabled89.gad;		
	    enabled90.gad;		
	    enabled82.gad;		
	    enabled91.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Light direct"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled92.gad;		
	    enabled93.gad;		
	    enabled94.gad;		
	    enabled95.gad;		
	    enabled96.gad;		
	    enabled97.gad;		
	    enabled98.gad;		
	    enabled99.gad;		
	    enabled100.gad;		
	    enabled101.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Light indirect"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enabled102.gad;		
	    enabled103.gad;		
	    enabled104.gad;		
	    enabled105.gad;		
	    enabled106.gad;		
	    enabled107.gad;		
	    enabled108.gad;		
	    enabled109.gad;		
	    enabled110.gad;		
	    enabled111.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

folder74.gad = 

GROUP simple "Transformation" flat 
{ 
    VALUE(folder74.gad.val) LAYOUT(vertical) HSTRETCH 
	    translation4.gad;		
	    translation5.gad;		
	    scale7.gad;		
} 

folder73.gad = 

GROUP simple "Texture" flat 
{ 
    VALUE(folder73.gad.val) LAYOUT(vertical) HSTRETCH 
	    A_FILENAME5.gad;		
	    power6.gad;		
	    colorSpace3.gad;		
	    gamma4.gad;		
	    invert3.gad;		
	    linearSpaceInvert3.gad;		
} 

folder72.gad = 

GROUP simple "Environment" flat 
{ 
    VALUE(folder72.gad.val) LAYOUT(vertical) HSTRETCH 
	    power5.gad;		
	    importance_sampling4.gad;		
	    mediumRadius4.gad;		
	    visibleEnvironmentBackplate4.gad;		
	    visibleEnvironmentReflections4.gad;		
	    visibleEnvironmentRefractions4.gad;		
} 

folder71.gad = 

GROUP simple "Visible environment" flat 
{ 
    VALUE(folder71.gad.val) LAYOUT(vertical) HSTRETCH 
	    visibleEnvironmentBackplate3.gad;		
	    visibleEnvironmentReflections3.gad;		
	    visibleEnvironmentRefractions3.gad;		
} 

folder70.gad = 

GROUP simple "Planetary surface" flat 
{ 
    VALUE(folder70.gad.val) LAYOUT(vertical) HSTRETCH 
	    planetaryDiffuse.gad;		
	    planetaryEmission.gad;		
} 

folder61.gad = 

GROUP simple "Parameters" flat 
{ 
    VALUE(folder61.gad.val) LAYOUT(vertical) HSTRETCH 
	    turbidity2.gad;		
	    power3.gad;		
	    sunIntensity2.gad;		
	    northoffset2.gad;		
	    sun_size2.gad;		
	    planetaryAltitude.gad;		
	    importance_sampling3.gad;		
	    mediumRadius3.gad;		
	    latitude3.gad;		
	    longitude3.gad;		
} 

folder55.gad = 

GROUP simple "Sun" flat 
{ 
    VALUE(folder55.gad.val) LAYOUT(vertical) HSTRETCH 
	    latitude2.gad;		
	    longitude2.gad;		
	    month2.gad;		
	    day2.gad;		
	    hour2.gad;		
	    gmtoffset2.gad;		
} 

folder68.gad = 

GROUP simple "Medium" flat 
{ 
    VALUE(folder68.gad.val) LAYOUT(vertical) HSTRETCH 
	    enableTextureEnvironmentMedium.gad;		
	    scale6.gad;		
	    rayMarchStepLength2.gad;		
	    shadowRayMarchStepLength2.gad;		
	    useRayStepLengthForShadowRays2.gad;		
	    absorption2.gad;		
	    invertAbsorption2.gad;		
	    scattering2.gad;		
} 

folder67.gad = 

GROUP simple "Transform" flat 
{ 
    VALUE(folder67.gad.val) LAYOUT(vertical) HSTRETCH 
	    rotationOrder2.gad;		
	    rotation4.gad;		
	    scale5.gad;		
} 

folder66.gad = 

GROUP simple "Texture" flat 
{ 
    VALUE(folder66.gad.val) LAYOUT(vertical) HSTRETCH 
	    A_FILENAME4.gad;		
	    colorSpace2.gad;		
	    gamma3.gad;		
	    invert2.gad;		
	    linearSpaceInvert2.gad;		
} 

folder69.gad = 

GROUP simple "Environment" flat 
{ 
    VALUE(folder69.gad.val) LAYOUT(vertical) HSTRETCH 
	    power4.gad;		
	    importance_sampling2.gad;		
	    mediumRadius2.gad;		
	    visibleEnvironmentBackplate2.gad;		
	    visibleEnvironmentReflections2.gad;		
	    visibleEnvironmentRefractions2.gad;		
} 

folder65.gad = 

GROUP simple "Phase" flat 
{ 
    VALUE(folder65.gad.val) LAYOUT(vertical) HSTRETCH 
	    scattering_direction.gad;		
} 

folder64.gad = 

GROUP simple "Scattering" flat 
{ 
    VALUE(folder64.gad.val) LAYOUT(vertical) HSTRETCH 
	    scale4.gad;		
	    rayMarchStepLength.gad;		
	    shadowRayMarchStepLength.gad;		
	    useRayStepLengthForShadowRays.gad;		
	    absorption.gad;		
	    invertAbsorption.gad;		
	    scattering.gad;		
} 

folder57.gad = 

GROUP simple "Medium" flat 
{ 
    VALUE(folder57.gad.val) LAYOUT(vertical) HSTRETCH 
	    enableDaylightMedium.gad;		
	    folder64.gad;		
	    folder65.gad;		
} 

folder63.gad = 

GROUP simple "Transform" flat 
{ 
    VALUE(folder63.gad.val) LAYOUT(vertical) HSTRETCH 
	    rotationOrder.gad;		
	    rotation.gad;		
	    scale.gad;		
	    translation.gad;		
} 

folder62.gad = 

GROUP simple "Texture" flat 
{ 
    VALUE(folder62.gad.val) LAYOUT(vertical) HSTRETCH 
	    A_FILENAME3.gad;		
	    power2.gad;		
	    colorSpace.gad;		
	    gamma2.gad;		
	    invert.gad;		
	    linearSpaceInvert.gad;		
} 

folder56.gad = 

GROUP simple "Texture" flat 
{ 
    VALUE(folder56.gad.val) LAYOUT(vertical) HSTRETCH 
	    enableTextureEnvironment.gad;		
	    folder62.gad;		
	    folder63.gad;		
} 

folder60.gad = 

GROUP simple "Visible environment" flat 
{ 
    VALUE(folder60.gad.val) LAYOUT(vertical) HSTRETCH 
	    visibleEnvironmentBackplate.gad;		
	    visibleEnvironmentReflections.gad;		
	    visibleEnvironmentRefractions.gad;		
} 

folder59.gad = 

GROUP simple "Parameters" flat 
{ 
    VALUE(folder59.gad.val) LAYOUT(vertical) HSTRETCH 
	    turbidity.gad;		
	    power.gad;		
	    sunIntensity.gad;		
	    northoffset.gad;		
	    model.gad;		
	    sky_color.gad;		
	    sunset_color.gad;		
	    sun_size.gad;		
	    groundColor.gad;		
	    groundStartAngle.gad;		
	    groundBlendAngle.gad;		
	    importance_sampling.gad;		
	    mediumRadius.gad;		
} 

folder58.gad = 

GROUP simple "Sun" flat 
{ 
    VALUE(folder58.gad.val) LAYOUT(vertical) HSTRETCH 
	    latitude.gad;		
	    longitude.gad;		
	    month.gad;		
	    day.gad;		
	    hour.gad;		
	    gmtoffset.gad;		
} 

folder53.gad = 

GROUP simple "Upsampler" flat 
{ 
    VALUE(folder53.gad.val) LAYOUT(vertical) HSTRETCH 
	    upsamplingEnabled.gad;		
	    upsamplingOnCompletion.gad;		
	    minUpsamplingSamples.gad;		
	    maxUpsamplingInterval.gad;		
	    filmUpSamplingMode.gad;		
} 

folder52.gad = 

GROUP simple "Spectral AI denoiser" flat 
{ 
    VALUE(folder52.gad.val) LAYOUT(vertical) HSTRETCH 
	    denoiser.gad;		
	    denoiseVolume.gad;		
	    denoiserOnce.gad;		
	    minDenoiserSamples.gad;		
	    maxDenoiserInterval.gad;		
	    denoiserOriginalBlend.gad;		
} 

folder54.gad = 

GROUP simple "Custom LUT" flat 
{ 
    VALUE(folder54.gad.val) LAYOUT(vertical) HSTRETCH 
	    switch.gad;		
	    strength.gad;		
	    A_FILENAME2.gad;		
} 

folder51.gad = 

GROUP simple "Tone mapping" flat 
{ 
    VALUE(folder51.gad.val) LAYOUT(vertical) HSTRETCH 
	    highlightCompression.gad;		
	    saturate_to_white.gad;		
	    order.gad;		
	    response.gad;		
	    neutralResponse.gad;		
	    gamma.gad;		
	    folder54.gad;		
} 

folder50.gad = 

GROUP simple "OCIO" flat 
{ 
    VALUE(folder50.gad.val) LAYOUT(vertical) HSTRETCH 
	    A_OCIO_DISPLAY_NAME.gad;		
	    A_OCIO_VIEW_NAME.gad;		
	    A_OCIO_USE_VIEW_LOOK.gad;		
	    A_OCIO_LOOK_NAME.gad;		
	    ocioForceToneMapping.gad;		
} 

folder49.gad = 

GROUP simple "Camera imager" flat 
{ 
    VALUE(folder49.gad.val) LAYOUT(vertical) HSTRETCH 
	    exposure.gad;		
	    hotpixel_removal.gad;		
	    vignetting.gad;		
	    white_balance.gad;		
	    saturation.gad;		
	    premultiplied_alpha.gad;		
	    disablePartialAlpha.gad;		
	    dithering.gad;		
	    min_display_samples.gad;		
	    maxTonemapInterval.gad;		
} 

folder48.gad = 

GROUP simple "Stereo" flat 
{ 
    VALUE(folder48.gad.val) LAYOUT(vertical) HSTRETCH 
	    stereoOutput3.gad;		
	    stereoMode2.gad;		
	    stereodist3.gad;		
	    stereoSwitchEyes3.gad;		
	    leftFilter3.gad;		
	    rightFilter3.gad;		
} 

folder47.gad = 

GROUP simple "Position" flat 
{ 
    VALUE(folder47.gad.val) LAYOUT(vertical) HSTRETCH 
	    keepUpright2.gad;		
} 

folder46.gad = 

GROUP simple "Split-focus diopter" flat 
{ 
    VALUE(folder46.gad.val) LAYOUT(vertical) HSTRETCH 
	    diopterEnable.gad;		
	    diopterFocalDepth.gad;		
	    diopterRotation.gad;		
	    diopterTranslation.gad;		
	    diopterBoundaryWidth.gad;		
	    diopterBoundaryFalloff.gad;		
	    diopterShowGuide.gad;		
} 

folder45.gad = 

GROUP simple "Optical vignetting" flat 
{ 
    VALUE(folder45.gad.val) LAYOUT(vertical) HSTRETCH 
	    opticalVignetteDistance.gad;		
	    opticalVignetteScale.gad;		
} 

folder44.gad = 

GROUP simple "Depth of field" flat 
{ 
    VALUE(folder44.gad.val) LAYOUT(vertical) HSTRETCH 
	    autofocus3.gad;		
	    apertureAspectRatio3.gad;		
	    apertureShape.gad;		
	    aperture_edge3.gad;		
	    bokehSidecount3.gad;		
	    bokehRotation3.gad;		
	    bokehRoundedness3.gad;		
	    centralObstruction.gad;		
	    notchPosition.gad;		
	    notchScale.gad;		
	    customAperture.gad;		
} 

folder43.gad = 

GROUP simple "Aberration" flat 
{ 
    VALUE(folder43.gad.val) LAYOUT(vertical) HSTRETCH 
	    sphericalAberration.gad;		
	    coma.gad;		
	    astigmatism.gad;		
	    fieldCurvature.gad;		
} 

folder42.gad = 

GROUP simple "Distortion" flat 
{ 
    VALUE(folder42.gad.val) LAYOUT(vertical) HSTRETCH 
	    useDistortionTexture.gad;		
	    distortionTexture.gad;		
	    sphericalDistortion.gad;		
	    barrelDistortion.gad;		
	    barrelDistortionCorners.gad;		
} 

folder41.gad = 

GROUP simple "Panoramic" flat 
{ 
    VALUE(folder41.gad.val) LAYOUT(vertical) HSTRETCH 
	    fovx2.gad;		
	    fovy2.gad;		
	    cubemapLayout.gad;		
	    equiAngularCubemap.gad;		
} 

folder40.gad = 

GROUP simple "Fisheye" flat 
{ 
    VALUE(folder40.gad.val) LAYOUT(vertical) HSTRETCH 
	    fisheyeAngle.gad;		
	    fisheyeType.gad;		
	    hardVignette.gad;		
	    fisheyeProjection.gad;		
} 

folder39.gad = 

GROUP simple "Camera mode" flat 
{ 
    VALUE(folder39.gad.val) LAYOUT(vertical) HSTRETCH 
	    mode.gad;		
} 

folder38.gad = 

GROUP simple "Baking position" flat 
{ 
    VALUE(folder38.gad.val) LAYOUT(vertical) HSTRETCH 
	    bakeFromPosition.gad;		
	    pos.gad;		
	    bakeBackfaceCulling.gad;		
} 

folder37.gad = 

GROUP simple "UV region" flat 
{ 
    VALUE(folder37.gad.val) LAYOUT(vertical) HSTRETCH 
	    bakingUvBoxMin.gad;		
	    bakingUvBoxSize.gad;		
} 

folder36.gad = 

GROUP simple "Padding" flat 
{ 
    VALUE(folder36.gad.val) LAYOUT(vertical) HSTRETCH 
	    padding.gad;		
	    tolerance.gad;		
} 

folder35.gad = 

GROUP simple "Baking" flat 
{ 
    VALUE(folder35.gad.val) LAYOUT(vertical) HSTRETCH 
	    bakingGroupId.gad;		
	    uvSet2.gad;		
	    bakeOutwards.gad;		
} 

folder34.gad = 

GROUP simple "Stereo" flat 
{ 
    VALUE(folder34.gad.val) LAYOUT(vertical) HSTRETCH 
	    stereoOutput2.gad;		
	    stereodist2.gad;		
	    stereoDistFalloff.gad;		
	    stereoCutoffLatitude.gad;		
	    stereoSwitchEyes2.gad;		
	    leftFilter2.gad;		
	    rightFilter2.gad;		
} 

folder33.gad = 

GROUP simple "Depth of field" flat 
{ 
    VALUE(folder33.gad.val) LAYOUT(vertical) HSTRETCH 
	    autofocus2.gad;		
	    apertureAspectRatio2.gad;		
	    aperture_edge2.gad;		
	    bokehSidecount2.gad;		
	    bokehRotation2.gad;		
	    bokehRoundedness2.gad;		
} 

folder32.gad = 

GROUP simple "Viewing angle" flat 
{ 
    VALUE(folder32.gad.val) LAYOUT(vertical) HSTRETCH 
	    fovx.gad;		
	    fovy.gad;		
	    keepUpright.gad;		
} 

folder31.gad = 

GROUP simple "Projection" flat 
{ 
    VALUE(folder31.gad.val) LAYOUT(vertical) HSTRETCH 
	    cameramode.gad;		
} 

folder28.gad = 

GROUP simple "Stereo" flat 
{ 
    VALUE(folder28.gad.val) LAYOUT(vertical) HSTRETCH 
	    stereoOutput.gad;		
	    stereoMode.gad;		
	    stereodist.gad;		
	    stereoSwitchEyes.gad;		
	    leftFilter.gad;		
	    rightFilter.gad;		
} 

folder29.gad = 

GROUP simple "Depth of field" flat 
{ 
    VALUE(folder29.gad.val) LAYOUT(vertical) HSTRETCH 
	    autofocus.gad;		
	    apertureAspectRatio.gad;		
	    aperture_edge.gad;		
	    bokehSidecount.gad;		
	    bokehRotation.gad;		
	    bokehRoundedness.gad;		
} 

folder30.gad = 

GROUP simple "Viewing angle" flat 
{ 
    VALUE(folder30.gad.val) LAYOUT(vertical) HSTRETCH 
	    distortion.gad;		
	    perspectiveCorrection.gad;		
} 

folder27.gad = 

GROUP simple "Deep image" flat 
{ 
    VALUE(folder27.gad.val) LAYOUT(vertical) HSTRETCH 
	    deepEnable3.gad;		
	    deepEnablePasses3.gad;		
	    maxDepthSamples3.gad;		
	    depthTolerance3.gad;		
} 

folder26.gad = 

GROUP simple "Color" flat 
{ 
    VALUE(folder26.gad.val) LAYOUT(vertical) HSTRETCH 
	    whiteLightSpectrum4.gad;		
	    useOldColorPipeline4.gad;		
} 

folder25.gad = 

GROUP simple "Sampling" flat 
{ 
    VALUE(folder25.gad.val) LAYOUT(vertical) HSTRETCH 
	    parallelSamples3.gad;		
	    maxTileSamples3.gad;		
	    minimizeNetTraffic3.gad;		
} 

folder24.gad = 

GROUP simple "Alpha channel" flat 
{ 
    VALUE(folder24.gad.val) LAYOUT(vertical) HSTRETCH 
	    alphachannel4.gad;		
} 

folder23.gad = 

GROUP simple "Quality" flat 
{ 
    VALUE(folder23.gad.val) LAYOUT(vertical) HSTRETCH 
	    maxsamples4.gad;		
	    type.gad;		
	    rayepsilon4.gad;		
	    filtersize4.gad;		
	    aodist2.gad;		
	    aoAlphaShadows.gad;		
	    opacity.gad;		
	    Z_depth_max.gad;		
	    UV_max.gad;		
	    uvSet.gad;		
	    maxSpeed.gad;		
	    samplingMode.gad;		
	    bump.gad;		
	    highlightBackfaces.gad;		
	    MaxsubdLevel4.gad;		
} 

folder22.gad = 

GROUP simple "Toon shading" flat 
{ 
    VALUE(folder22.gad.val) LAYOUT(vertical) HSTRETCH 
	    toonShadowAmbient5.gad;		
} 

folder21.gad = 

GROUP simple "Color" flat 
{ 
    VALUE(folder21.gad.val) LAYOUT(vertical) HSTRETCH 
	    whiteLightSpectrum3.gad;		
	    useOldColorPipeline3.gad;		
} 

folder20.gad = 

GROUP simple "Sampling" flat 
{ 
    VALUE(folder20.gad.val) LAYOUT(vertical) HSTRETCH 
	    pathTermPower3.gad;		
	    exploration_strength.gad;		
	    direct_light_importance.gad;		
	    maxrejects.gad;		
	    parallelism.gad;		
	    workChunkSize.gad;		
} 

folder19.gad = 

GROUP simple "Light" flat 
{ 
    VALUE(folder19.gad.val) LAYOUT(vertical) HSTRETCH 
	    aiLight3.gad;		
	    aiLightUpdate3.gad;		
	    globalLightIdMaskAction3.gad;		
} 

folder18.gad = 

GROUP simple "Alpha channel" flat 
{ 
    VALUE(folder18.gad.val) LAYOUT(vertical) HSTRETCH 
	    alphachannel3.gad;		
	    keep_environment3.gad;		
} 

folder17.gad = 

GROUP simple "Quality" flat 
{ 
    VALUE(folder17.gad.val) LAYOUT(vertical) HSTRETCH 
	    maxsamples3.gad;		
	    maxDiffuseDepth2.gad;		
	    maxGlossyDepth2.gad;		
	    maxScatterDepth2.gad;		
	    maxOverlappingVolumes3.gad;		
	    rayepsilon3.gad;		
	    filtersize3.gad;		
	    alphashadows3.gad;		
	    caustic_blur2.gad;		
	    giClamp2.gad;		
	    nestedDielectrics3.gad;		
	    irradiance3.gad;		
	    MaxsubdLevel3.gad;		
} 

folder16.gad = 

GROUP simple "Toon Shading" flat 
{ 
    VALUE(folder16.gad.val) LAYOUT(vertical) HSTRETCH 
	    toonShadowAmbient4.gad;		
} 

folder15.gad = 

GROUP simple "Deep image" flat 
{ 
    VALUE(folder15.gad.val) LAYOUT(vertical) HSTRETCH 
	    deepEnable2.gad;		
	    maxDepthSamples2.gad;		
	    depthTolerance2.gad;		
	    deepEnablePasses2.gad;		
} 

folder14.gad = 

GROUP simple "Color" flat 
{ 
    VALUE(folder14.gad.val) LAYOUT(vertical) HSTRETCH 
	    whiteLightSpectrum2.gad;		
	    useOldColorPipeline2.gad;		
} 

folder13.gad = 

GROUP simple "Adaptive sampling" flat 
{ 
    VALUE(folder13.gad.val) LAYOUT(vertical) HSTRETCH 
	    adaptiveSampling2.gad;		
	    noiseThreshold2.gad;		
	    minAdaptiveSamples2.gad;		
	    adaptiveSamplingPixelGroup2.gad;		
	    adaptiveSamplingExposure2.gad;		
} 

folder12.gad = 

GROUP simple "Sampling" flat 
{ 
    VALUE(folder12.gad.val) LAYOUT(vertical) HSTRETCH 
	    pathTermPower2.gad;		
	    coherentRatio2.gad;		
	    staticNoise2.gad;		
	    parallelSamples2.gad;		
	    maxTileSamples2.gad;		
	    minimizeNetTraffic2.gad;		
} 

folder11.gad = 

GROUP simple "Light" flat 
{ 
    VALUE(folder11.gad.val) LAYOUT(vertical) HSTRETCH 
	    aiLight2.gad;		
	    aiLightUpdate2.gad;		
	    globalLightIdMaskAction2.gad;		
} 

folder10.gad = 

GROUP simple "Alpha channel" flat 
{ 
    VALUE(folder10.gad.val) LAYOUT(vertical) HSTRETCH 
	    alphachannel2.gad;		
	    keep_environment2.gad;		
} 

folder9.gad = 

GROUP simple "Quality" flat 
{ 
    VALUE(folder9.gad.val) LAYOUT(vertical) HSTRETCH 
	    maxsamples2.gad;		
	    maxDiffuseDepth.gad;		
	    maxGlossyDepth.gad;		
	    maxScatterDepth.gad;		
	    maxOverlappingVolumes2.gad;		
	    rayepsilon2.gad;		
	    filtersize2.gad;		
	    alphashadows2.gad;		
	    caustic_blur.gad;		
	    giClamp.gad;		
	    nestedDielectrics2.gad;		
	    irradiance2.gad;		
	    MaxsubdLevel2.gad;		
} 

folder8.gad = 

GROUP simple "Toon Shading" flat 
{ 
    VALUE(folder8.gad.val) LAYOUT(vertical) HSTRETCH 
	    toonShadowAmbient.gad;		
} 

folder7.gad = 

GROUP simple "Deep Image" flat 
{ 
    VALUE(folder7.gad.val) LAYOUT(vertical) HSTRETCH 
	    deepEnable.gad;		
	    maxDepthSamples.gad;		
	    depthTolerance.gad;		
	    deepEnablePasses.gad;		
} 

folder6.gad = 

GROUP simple "Color" flat 
{ 
    VALUE(folder6.gad.val) LAYOUT(vertical) HSTRETCH 
	    whiteLightSpectrum.gad;		
	    useOldColorPipeline.gad;		
} 

folder5.gad = 

GROUP simple "Adaptive Sampling" flat 
{ 
    VALUE(folder5.gad.val) LAYOUT(vertical) HSTRETCH 
	    adaptiveSampling.gad;		
	    noiseThreshold.gad;		
	    minAdaptiveSamples.gad;		
	    adaptiveSamplingPixelGroup.gad;		
	    adaptiveSamplingExposure.gad;		
} 

folder4.gad = 

GROUP simple "Sampling" flat 
{ 
    VALUE(folder4.gad.val) LAYOUT(vertical) HSTRETCH 
	    pathTermPower.gad;		
	    coherentRatio.gad;		
	    staticNoise.gad;		
	    parallelSamples.gad;		
	    maxTileSamples.gad;		
	    minimizeNetTraffic.gad;		
} 

folder3.gad = 

GROUP simple "Light" flat 
{ 
    VALUE(folder3.gad.val) LAYOUT(vertical) HSTRETCH 
	    aiLight.gad;		
	    aiLightUpdate.gad;		
	    globalLightIdMaskAction.gad;		
} 

folder2.gad = 

GROUP simple "Alpha channel" flat 
{ 
    VALUE(folder2.gad.val) LAYOUT(vertical) HSTRETCH 
	    alphachannel.gad;		
	    keep_environment.gad;		
} 

folder1.gad = 

GROUP simple "Quality" flat 
{ 
    VALUE(folder1.gad.val) LAYOUT(vertical) HSTRETCH 
	    maxsamples.gad;		
	    GI_mode.gad;		
	    speculardepth.gad;		
	    glossydepth.gad;		
	    diffusedepth.gad;		
	    maxOverlappingVolumes.gad;		
	    rayepsilon.gad;		
	    filtersize.gad;		
	    aodist.gad;		
	    alphashadows.gad;		
	    nestedDielectrics.gad;		
	    irradiance.gad;		
	    MaxsubdLevel.gad;		
} 

folder0.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "folder0.gad"
    { 
	VALUE(folder0.gad.val) STRETCH(1,0)

	TAB "Main"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    parmKernel.gad;		
	    parmCamera.gad;		
	    parmEnvironment.gad;		
	    enableCameraEnvironment.gad;		

	    { STRETCH(1,1) }
	}

	TAB "DL Kernel"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder1.gad;		
	    folder2.gad;		
	    folder3.gad;		
	    folder4.gad;		
	    folder5.gad;		
	    folder6.gad;		
	    folder7.gad;		
	    folder8.gad;		

	    { STRETCH(1,1) }
	}

	TAB "PT Kernel"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder9.gad;		
	    folder10.gad;		
	    folder11.gad;		
	    folder12.gad;		
	    folder13.gad;		
	    folder14.gad;		
	    folder15.gad;		
	    folder16.gad;		

	    { STRETCH(1,1) }
	}

	TAB "PMC Kernel"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder17.gad;		
	    folder18.gad;		
	    folder19.gad;		
	    folder20.gad;		
	    folder21.gad;		
	    folder22.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Info Kernel"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder23.gad;		
	    folder24.gad;		
	    folder25.gad;		
	    folder26.gad;		
	    folder27.gad;		

	    { STRETCH(1,1) }
	}

	TAB "TL Camera"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder30.gad;		
	    folder29.gad;		
	    folder28.gad;		

	    { STRETCH(1,1) }
	}

	TAB "PAN Camera"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder31.gad;		
	    folder32.gad;		
	    folder33.gad;		
	    folder34.gad;		

	    { STRETCH(1,1) }
	}

	TAB "BAKING Camera"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder35.gad;		
	    folder36.gad;		
	    folder37.gad;		
	    folder38.gad;		

	    { STRETCH(1,1) }
	}

	TAB "UNIVERSAL Camera"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder39.gad;		
	    folder40.gad;		
	    folder41.gad;		
	    folder42.gad;		
	    folder43.gad;		
	    folder44.gad;		
	    folder45.gad;		
	    folder46.gad;		
	    folder47.gad;		

	    { STRETCH(1,1) }
	}

	TAB "OSL Camera"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    A_FILENAME.gad;		
	    HO_OSL_rawCode.gad;		
	    sepparm2.gad;		
	    HO_OSL_compile.gad;		
	    sepparm3.gad;		
	    folder48.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Imager"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder49.gad;		
	    folder50.gad;		
	    folder51.gad;		
	    folder52.gad;		
	    folder53.gad;		

	    { STRETCH(1,1) }
	}

	TAB "DL Environment"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder58.gad;		
	    folder59.gad;		
	    folder60.gad;		
	    folder56.gad;		
	    folder57.gad;		

	    { STRETCH(1,1) }
	}

	TAB "TEXT Environment"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder69.gad;		
	    folder66.gad;		
	    folder67.gad;		
	    folder68.gad;		

	    { STRETCH(1,1) }
	}

	TAB "PLANET Environment"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder55.gad;		
	    folder61.gad;		
	    folder70.gad;		
	    folder71.gad;		

	    { STRETCH(1,1) }
	}

	TAB "CAM Environment"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder72.gad;		
	    folder73.gad;		
	    folder74.gad;		

	    { STRETCH(1,1) }
	}

	TAB "PostProcessing"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    on_off.gad;		
	    cutoff.gad;		
	    bloom_power.gad;		
	    glare_power.gad;		
	    glare_ray_amount.gad;		
	    glare_angle.gad;		
	    glare_blur.gad;		
	    spectral_intensity.gad;		
	    spectral_shift.gad;		

	    { STRETCH(1,1) }
	}

	TAB "AOVs"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder75.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    folder0.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
