// Magic: b0ff6df6
// Automatically generated PSI dialog (PSI version 19.0.561)
// Thu Apr 14 11:39:05 2022


f_tmp = FLOAT_FIELD;	// dialog.top.ui

tspace_id.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    tspace_id.label = PARM_LABEL("Texture Space", "tspace_id") WIDTH(1.5);
    PARM_FIELD(string, "tspace_id") VALUE(tspace_id.val) 
	LABELREF(tspace_id.label) HSTRETCH;

    tspace_id.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(tspace_id.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

inputSource.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Source", "inputSource") WIDTH(1.5);
    { WIDTH(0.09) }

    inputSource.menu;

    { HSTRETCH }

    inputSource.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(inputSource.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

input.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 input.label = PARM_LABEL("Alt Input", "input") WIDTH(1.5);
 PARM(float, 1, "input", none, none) RANGE(1.1754943508222875e-38,3.4028234663852886e+38)
	 LABELREF(input.label) HSTRETCH;

    input.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(input.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

inputMapping.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Mapping", "inputMapping") WIDTH(1.5);
    { WIDTH(0.09) }

    inputMapping.menu;

    { HSTRETCH }

    inputMapping.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(inputMapping.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

inputInvert.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("inputInvert", "Invert") toggle VALUE(inputInvert.val);

    { HSTRETCH }

    inputInvert.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(inputInvert.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

    { WIDTH(0.1) }
}

noise.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 noise.label = PARM_LABEL("Noise Amount", "noise") WIDTH(1.5);
 PARM(float, 1, "noise", none, none) RANGE(0,2)
	 LABELREF(noise.label) HSTRETCH;

    noise.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(noise.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

noiseFreq.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 noiseFreq.label = PARM_LABEL("Noise Frequency", "noiseFreq") WIDTH(1.5);
 PARM(float, 1, "noiseFreq", none, none) RANGE(0,2)
	 LABELREF(noiseFreq.label) HSTRETCH;

    noiseFreq.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(noiseFreq.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

  { WIDTH(0.1) }
}

ramp.si_rampedit = COLOR_RAMP VALUE(ramp.ramp_val)
			LAYOUT(horizontal)  HSTRETCH;

ramp.multiramp = 
{
    LAYOUT(vertical) STRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    ROW
    {
	JUSTIFY(left,center) SPACING(0.1) VMARGIN(0.02) HSTRETCH

	COL
	{
	    JUSTIFY(right,center) WIDTH(1.5)
	    LABEL "Point No.";
	}

	ramp.pointno.gad
	    = INT_SLIDER_FIELD VALUE(ramp.pointno.val) HSTRETCH;
    }
}

ramp.buttons.gad = COL
{
    VSTRETCH

    ICON_BUTTON_STRIP
    {
	LAYOUT(horizontal) INITSIZE(20p, 20p) 

	ACTION_ICONBUTTON "BUTTONS_delete"
		HELP("Remove Point") VALUE(ramp.delpoint.val);
	ACTION_ICONBUTTON "BUTTONS_add"
		HELP("Add Point") VALUE(ramp.addpoint.val);
    }

    { VSTRETCH }

    ramp.toggleparms.gad
      = ACTION_ICONBUTTON "BUTTONS_show_controls"
	HELP("Hide Controls", "h.pane.parms.toggle_ramp_parms")
	VALUE(ramp.toggle.val)
	LOOKFLAT UI_FLAT_ICON_BTN_SIZE_TINY;
}

ramp.parm =
{
    LAYOUT(vertical) HSTRETCH JUSTIFY(left, center)

    ramp.ramp.gad = ROW
    {
	MARGIN(0.02) SPACING(0.02) JUSTIFY(left, top) HSTRETCH

	ramp.buttons.gad VSTRETCH;

	ramp.si_rampedit HSTRETCH;
    }
}

ramp.gad =
{
    LAYOUT(vertical) MARGIN(2p) HSTRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
    {
	LAYOUT(horizontal) HSTRETCH

	PARM_LABEL_SIMPLE("Ramp", "ramp");

	{ HSTRETCH }
	ACTION_ICONBUTTON "BUTTONS_ramp_flip_x" VALUE(ramp.reverse.val)
		LOOKFLAT HELP("Reverse Domain") UI_FLAT_ICON_BTN_SIZE_SMALL;
	ACTION_ICONBUTTON "BUTTONS_ramp_flip_y" VALUE(ramp.complement.val)
		LOOKFLAT HELP("Complement Ramp") UI_FLAT_ICON_BTN_SIZE_SMALL;
	ramp.presets
	    = ACTION_MENU_ICONBUTTON "BUTTONS_gear"
		LOOKFLAT HELP("Presets") UI_FLAT_ICON_BTN_SIZE_SMALL;

    }

    {
	LAYOUT(vertical) MARGIN(2p) SPACING(0.02) HSTRETCH

	ramp.parm;

	SWITCHER tight
	{
	    LAYOUT(overlap) VALUE(ramp.hideparms.val) HSTRETCH
	    ramp.multiramp;
	    {}
	}
    }
}
ramp_interp.gad = NULL { }
shader_skipdefvalparms.gad = NULL { }

Ramp_2.gad = 

GROUP simple "Ramp" flat 
{ 
    VALUE(Ramp_2.gad.val) LAYOUT(vertical) HSTRETCH 
	    ramp.gad;		
	    ramp_interp.gad;		
} 

Adjust_1.gad = 

GROUP simple "Adjust" flat 
{ 
    VALUE(Adjust_1.gad.val) LAYOUT(vertical) HSTRETCH 
	    inputInvert.gad;		
	    noise.gad;		
	    noiseFreq.gad;		
} 

Input_0.gad = 

GROUP simple "Input" flat 
{ 
    VALUE(Input_0.gad.val) LAYOUT(vertical) HSTRETCH 
	    tspace_id.gad;		
	    inputSource.gad;		
	    input.gad;		
	    inputMapping.gad;		
	    Adjust_1.gad;		
} 

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    Input_0.gad; 
    Ramp_2.gad; 
    shader_skipdefvalparms.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
