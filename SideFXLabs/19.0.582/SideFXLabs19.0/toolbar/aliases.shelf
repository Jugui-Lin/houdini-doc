<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->
  <tool icon="SOP_divide" label="Triangulate" name="labs::triangulate">
    <toolMenuContext name="viewer">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python">
      <![CDATA[
import soptoolutils
soptoolutils.genericTool(kwargs, 'divide', exact_node_type=False)
]]>
    </script>
  </tool>

  <tool icon="$SIDEFXLABS/help/icons/voxel_mesh_alt.svg" label="Labs Voxel Mesh" name="labs::voxelmesh::3.0">
    <toolMenuContext name="viewer">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python">
      <![CDATA[
import soptoolutils
soptoolutils.genericTool(kwargs, 'remeshgrid', exact_node_type=False)
]]>
    </script>
  </tool>

  <tool icon="SOP_attribadjustcolor" label="Labs Color Adjustment" name="labs::color_adjustment::1.0">
    <toolMenuContext name="viewer">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python">
      <![CDATA[
import soptoolutils
node = soptoolutils.genericTool(kwargs, 'attribadjustcolor', exact_node_type=False)
node.setParms({"adjustvalue": 0, "enable_cc": 1, "enable_postprocess": 1, "dobrightness":1, "docontrast":1, "dosat":1, "dogamma":1})
]]>
    </script>
  </tool>

  <tool icon="SOP_attribadjustcolor" label="Labs Color Gradient" name="labs::color_gradient::1.0">
    <toolMenuContext name="viewer">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python">
      <![CDATA[
import soptoolutils
node = soptoolutils.genericTool(kwargs, 'attribadjustcolor', exact_node_type=False)
node.setParms({"valuetype": "bbox", "bounddir": 1})
node.parm("colorramp").set(hou.Ramp((hou.rampBasis.Linear, hou.rampBasis.Linear), (0, 1), ((0.0, 0.0, 0.0), (1.0, 1.0, 1.0))))
]]>
    </script>
  </tool>

  <tool icon="SOP_kinefx-mocapstream" label="Labs Rokoko Mocap" name="labs::rokoko_mocap::1.0">
    <toolMenuContext name="viewer">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python">
      <![CDATA[
import soptoolutils
node = soptoolutils.genericTool(kwargs, 'kinefx::mocapstream', exact_node_type=False)
node.setParms({"device": "rokoko"})
]]>
    </script>
  </tool>

  <tool icon="SOP_kinefx-mocapstream" label="Labs Neuron Mocap" name="labs::neuron_mocap::1.0">
    <toolMenuContext name="viewer">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python">
      <![CDATA[
import soptoolutils
node = soptoolutils.genericTool(kwargs, 'kinefx::mocapstream', exact_node_type=False)
node.setParms({"device": "neuron"})
]]>
    </script>
  </tool>

  <tool icon="SOP_file" label="Labs Multi File" name="labs::multi_file::1.0">
    <toolMenuContext name="viewer">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python">
      <![CDATA[
import soptoolutils
node = soptoolutils.genericTool(kwargs, 'filemerge::2.0', exact_node_type=False)
node.setParms({"enablerange": 0})
]]>
    </script>
  </tool>

  <tool icon="SOP_sweep-2.0" label="Labs Curve Sweep" name="labs::curve_sweep::1.0">
    <toolMenuContext name="viewer">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python">
      <![CDATA[
import soptoolutils
node = soptoolutils.genericTool(kwargs, 'sweep', exact_node_type=False)
node.setParms({"surfaceshape": "tube", "cols":32, "computeuvs":1, "applyscale":1, "endcaptype":"grid", "capscale":0.0, "capdivs":1})
]]>
    </script>
  </tool>

  <tool icon="SOP_maskbyfeature" label="Labs Calculate Occlusion" name="labs::calculate_occlusion::3.0">
    <toolMenuContext name="viewer">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python">
      <![CDATA[
import soptoolutils
node = soptoolutils.genericTool(kwargs, 'maskbyfeature', exact_node_type=False)
node.setParms({"enabledirection": 0, "castshadows":0, "enableao":1, "aobluriterations":30, "combinedmaskattrib":"Cd"})
]]>
    </script>
  </tool>

  <tool icon="SOP_polyframe" label="Tangent" name="labs::tangent::1.0">
    <toolMenuContext name="viewer">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python">
      <![CDATA[
import soptoolutils
node = soptoolutils.genericTool(kwargs, 'polyframe', exact_node_type=False)
node.setParms({"style": "mikkt", "tangentvon": 1})
]]>
    </script>
  </tool>

  <tool icon="$SIDEFXLABS/help/icons/texture_sheet.svg" label="Labs Motion Vectors" name="labs::motion_vectors::1.0">
    <toolMenuContext name="viewer">
      <contextNetType>ROP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>ROP</contextNetType>
    </toolMenuContext>
    <script scriptType="python">
      <![CDATA[
import drivertoolutils
node = drivertoolutils.genericTool(kwargs, 'labs::flipbook_textures', exact_node_type=False)
]]>
    </script>
  </tool>

  <tool icon="TOP_fileremove" label="Delete File" name="labs::delete_file::1.0">
    <toolMenuContext name="viewer">
      <contextNetType>TOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>TOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python">
      <![CDATA[
import drivertoolutils
node = drivertoolutils.genericTool(kwargs, 'fileremove', exact_node_type=False)
]]>
    </script>
  </tool>

</shelfDocument>